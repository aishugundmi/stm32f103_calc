
7 uart_calc_LL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000272c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08002838  08002838  00012838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080028ec  080028ec  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080028ec  080028ec  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080028ec  080028ec  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080028ec  080028ec  000128ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080028f0  080028f0  000128f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080028f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000244  20000070  08002964  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002b4  08002964  000202b4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006873  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000191a  00000000  00000000  0002690c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000690  00000000  00000000  00028228  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000005b8  00000000  00000000  000288b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00015ecc  00000000  00000000  00028e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000673d  00000000  00000000  0003ed3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0006f745  00000000  00000000  00045479  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000b4bbe  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001b8c  00000000  00000000  000b4c3c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	08002820 	.word	0x08002820

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	08002820 	.word	0x08002820

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <fifo_write_byte>:
 800015c:	b580      	push	{r7, lr}
 800015e:	b084      	sub	sp, #16
 8000160:	af00      	add	r7, sp, #0
 8000162:	4603      	mov	r3, r0
 8000164:	71fb      	strb	r3, [r7, #7]
 8000166:	f04f 33ff 	mov.w	r3, #4294967295
 800016a:	60fb      	str	r3, [r7, #12]
 800016c:	f000 f85c 	bl	8000228 <fifo_data_available>
 8000170:	4603      	mov	r3, r0
 8000172:	2b63      	cmp	r3, #99	; 0x63
 8000174:	dd01      	ble.n	800017a <fifo_write_byte+0x1e>
 8000176:	68fb      	ldr	r3, [r7, #12]
 8000178:	e019      	b.n	80001ae <fifo_write_byte+0x52>
 800017a:	4b0f      	ldr	r3, [pc, #60]	; (80001b8 <fifo_write_byte+0x5c>)
 800017c:	681b      	ldr	r3, [r3, #0]
 800017e:	490f      	ldr	r1, [pc, #60]	; (80001bc <fifo_write_byte+0x60>)
 8000180:	79fa      	ldrb	r2, [r7, #7]
 8000182:	54ca      	strb	r2, [r1, r3]
 8000184:	4b0e      	ldr	r3, [pc, #56]	; (80001c0 <fifo_write_byte+0x64>)
 8000186:	781b      	ldrb	r3, [r3, #0]
 8000188:	3301      	adds	r3, #1
 800018a:	b2da      	uxtb	r2, r3
 800018c:	4b0c      	ldr	r3, [pc, #48]	; (80001c0 <fifo_write_byte+0x64>)
 800018e:	701a      	strb	r2, [r3, #0]
 8000190:	4b09      	ldr	r3, [pc, #36]	; (80001b8 <fifo_write_byte+0x5c>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	3301      	adds	r3, #1
 8000196:	4a08      	ldr	r2, [pc, #32]	; (80001b8 <fifo_write_byte+0x5c>)
 8000198:	6013      	str	r3, [r2, #0]
 800019a:	4b07      	ldr	r3, [pc, #28]	; (80001b8 <fifo_write_byte+0x5c>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	2b63      	cmp	r3, #99	; 0x63
 80001a0:	dd02      	ble.n	80001a8 <fifo_write_byte+0x4c>
 80001a2:	4b05      	ldr	r3, [pc, #20]	; (80001b8 <fifo_write_byte+0x5c>)
 80001a4:	2200      	movs	r2, #0
 80001a6:	601a      	str	r2, [r3, #0]
 80001a8:	2300      	movs	r3, #0
 80001aa:	60fb      	str	r3, [r7, #12]
 80001ac:	68fb      	ldr	r3, [r7, #12]
 80001ae:	4618      	mov	r0, r3
 80001b0:	3710      	adds	r7, #16
 80001b2:	46bd      	mov	sp, r7
 80001b4:	bd80      	pop	{r7, pc}
 80001b6:	bf00      	nop
 80001b8:	20000098 	.word	0x20000098
 80001bc:	200000a0 	.word	0x200000a0
 80001c0:	20000104 	.word	0x20000104

080001c4 <fifo_read_byte>:
 80001c4:	b480      	push	{r7}
 80001c6:	b083      	sub	sp, #12
 80001c8:	af00      	add	r7, sp, #0
 80001ca:	f04f 33ff 	mov.w	r3, #4294967295
 80001ce:	607b      	str	r3, [r7, #4]
 80001d0:	4b12      	ldr	r3, [pc, #72]	; (800021c <fifo_read_byte+0x58>)
 80001d2:	781b      	ldrb	r3, [r3, #0]
 80001d4:	2b00      	cmp	r3, #0
 80001d6:	d101      	bne.n	80001dc <fifo_read_byte+0x18>
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	e019      	b.n	8000210 <fifo_read_byte+0x4c>
 80001dc:	4b10      	ldr	r3, [pc, #64]	; (8000220 <fifo_read_byte+0x5c>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	4a10      	ldr	r2, [pc, #64]	; (8000224 <fifo_read_byte+0x60>)
 80001e2:	5cd3      	ldrb	r3, [r2, r3]
 80001e4:	70fb      	strb	r3, [r7, #3]
 80001e6:	4b0e      	ldr	r3, [pc, #56]	; (8000220 <fifo_read_byte+0x5c>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	3301      	adds	r3, #1
 80001ec:	4a0c      	ldr	r2, [pc, #48]	; (8000220 <fifo_read_byte+0x5c>)
 80001ee:	6013      	str	r3, [r2, #0]
 80001f0:	4b0a      	ldr	r3, [pc, #40]	; (800021c <fifo_read_byte+0x58>)
 80001f2:	781b      	ldrb	r3, [r3, #0]
 80001f4:	3b01      	subs	r3, #1
 80001f6:	b2da      	uxtb	r2, r3
 80001f8:	4b08      	ldr	r3, [pc, #32]	; (800021c <fifo_read_byte+0x58>)
 80001fa:	701a      	strb	r2, [r3, #0]
 80001fc:	4b08      	ldr	r3, [pc, #32]	; (8000220 <fifo_read_byte+0x5c>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	2b63      	cmp	r3, #99	; 0x63
 8000202:	dd02      	ble.n	800020a <fifo_read_byte+0x46>
 8000204:	4b06      	ldr	r3, [pc, #24]	; (8000220 <fifo_read_byte+0x5c>)
 8000206:	2200      	movs	r2, #0
 8000208:	601a      	str	r2, [r3, #0]
 800020a:	78fb      	ldrb	r3, [r7, #3]
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	4618      	mov	r0, r3
 8000212:	370c      	adds	r7, #12
 8000214:	46bd      	mov	sp, r7
 8000216:	bc80      	pop	{r7}
 8000218:	4770      	bx	lr
 800021a:	bf00      	nop
 800021c:	20000104 	.word	0x20000104
 8000220:	2000009c 	.word	0x2000009c
 8000224:	200000a0 	.word	0x200000a0

08000228 <fifo_data_available>:
 8000228:	b480      	push	{r7}
 800022a:	af00      	add	r7, sp, #0
 800022c:	4b02      	ldr	r3, [pc, #8]	; (8000238 <fifo_data_available+0x10>)
 800022e:	781b      	ldrb	r3, [r3, #0]
 8000230:	4618      	mov	r0, r3
 8000232:	46bd      	mov	sp, r7
 8000234:	bc80      	pop	{r7}
 8000236:	4770      	bx	lr
 8000238:	20000104 	.word	0x20000104

0800023c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000240:	4b04      	ldr	r3, [pc, #16]	; (8000254 <__NVIC_GetPriorityGrouping+0x18>)
 8000242:	68db      	ldr	r3, [r3, #12]
 8000244:	0a1b      	lsrs	r3, r3, #8
 8000246:	f003 0307 	and.w	r3, r3, #7
}
 800024a:	4618      	mov	r0, r3
 800024c:	46bd      	mov	sp, r7
 800024e:	bc80      	pop	{r7}
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	e000ed00 	.word	0xe000ed00

08000258 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	4603      	mov	r3, r0
 8000260:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000262:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000266:	2b00      	cmp	r3, #0
 8000268:	db0b      	blt.n	8000282 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800026a:	79fb      	ldrb	r3, [r7, #7]
 800026c:	f003 021f 	and.w	r2, r3, #31
 8000270:	4906      	ldr	r1, [pc, #24]	; (800028c <__NVIC_EnableIRQ+0x34>)
 8000272:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000276:	095b      	lsrs	r3, r3, #5
 8000278:	2001      	movs	r0, #1
 800027a:	fa00 f202 	lsl.w	r2, r0, r2
 800027e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000282:	bf00      	nop
 8000284:	370c      	adds	r7, #12
 8000286:	46bd      	mov	sp, r7
 8000288:	bc80      	pop	{r7}
 800028a:	4770      	bx	lr
 800028c:	e000e100 	.word	0xe000e100

08000290 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	4603      	mov	r3, r0
 8000298:	6039      	str	r1, [r7, #0]
 800029a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800029c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	db0a      	blt.n	80002ba <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80002a4:	683b      	ldr	r3, [r7, #0]
 80002a6:	b2da      	uxtb	r2, r3
 80002a8:	490c      	ldr	r1, [pc, #48]	; (80002dc <__NVIC_SetPriority+0x4c>)
 80002aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002ae:	0112      	lsls	r2, r2, #4
 80002b0:	b2d2      	uxtb	r2, r2
 80002b2:	440b      	add	r3, r1
 80002b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80002b8:	e00a      	b.n	80002d0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80002ba:	683b      	ldr	r3, [r7, #0]
 80002bc:	b2da      	uxtb	r2, r3
 80002be:	4908      	ldr	r1, [pc, #32]	; (80002e0 <__NVIC_SetPriority+0x50>)
 80002c0:	79fb      	ldrb	r3, [r7, #7]
 80002c2:	f003 030f 	and.w	r3, r3, #15
 80002c6:	3b04      	subs	r3, #4
 80002c8:	0112      	lsls	r2, r2, #4
 80002ca:	b2d2      	uxtb	r2, r2
 80002cc:	440b      	add	r3, r1
 80002ce:	761a      	strb	r2, [r3, #24]
}
 80002d0:	bf00      	nop
 80002d2:	370c      	adds	r7, #12
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bc80      	pop	{r7}
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	e000e100 	.word	0xe000e100
 80002e0:	e000ed00 	.word	0xe000ed00

080002e4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b089      	sub	sp, #36	; 0x24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80002f0:	68fb      	ldr	r3, [r7, #12]
 80002f2:	f003 0307 	and.w	r3, r3, #7
 80002f6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80002f8:	69fb      	ldr	r3, [r7, #28]
 80002fa:	f1c3 0307 	rsb	r3, r3, #7
 80002fe:	2b04      	cmp	r3, #4
 8000300:	bf28      	it	cs
 8000302:	2304      	movcs	r3, #4
 8000304:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000306:	69fb      	ldr	r3, [r7, #28]
 8000308:	3304      	adds	r3, #4
 800030a:	2b06      	cmp	r3, #6
 800030c:	d902      	bls.n	8000314 <NVIC_EncodePriority+0x30>
 800030e:	69fb      	ldr	r3, [r7, #28]
 8000310:	3b03      	subs	r3, #3
 8000312:	e000      	b.n	8000316 <NVIC_EncodePriority+0x32>
 8000314:	2300      	movs	r3, #0
 8000316:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000318:	f04f 32ff 	mov.w	r2, #4294967295
 800031c:	69bb      	ldr	r3, [r7, #24]
 800031e:	fa02 f303 	lsl.w	r3, r2, r3
 8000322:	43da      	mvns	r2, r3
 8000324:	68bb      	ldr	r3, [r7, #8]
 8000326:	401a      	ands	r2, r3
 8000328:	697b      	ldr	r3, [r7, #20]
 800032a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800032c:	f04f 31ff 	mov.w	r1, #4294967295
 8000330:	697b      	ldr	r3, [r7, #20]
 8000332:	fa01 f303 	lsl.w	r3, r1, r3
 8000336:	43d9      	mvns	r1, r3
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800033c:	4313      	orrs	r3, r2
         );
}
 800033e:	4618      	mov	r0, r3
 8000340:	3724      	adds	r7, #36	; 0x24
 8000342:	46bd      	mov	sp, r7
 8000344:	bc80      	pop	{r7}
 8000346:	4770      	bx	lr

08000348 <LL_USART_Enable>:
  * @rmtoll CR1          UE            LL_USART_Enable
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
{
 8000348:	b480      	push	{r7}
 800034a:	b083      	sub	sp, #12
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	68db      	ldr	r3, [r3, #12]
 8000354:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	60da      	str	r2, [r3, #12]
}
 800035c:	bf00      	nop
 800035e:	370c      	adds	r7, #12
 8000360:	46bd      	mov	sp, r7
 8000362:	bc80      	pop	{r7}
 8000364:	4770      	bx	lr

08000366 <LL_USART_ConfigAsyncMode>:
  *         CR3          HDSEL         LL_USART_ConfigAsyncMode
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
{
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
  /* In Asynchronous mode, the following bits must be kept cleared:
  - LINEN, CLKEN bits in the USART_CR2 register,
  - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
  CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	691b      	ldr	r3, [r3, #16]
 8000372:	f423 4290 	bic.w	r2, r3, #18432	; 0x4800
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	695b      	ldr	r3, [r3, #20]
 800037e:	f023 022a 	bic.w	r2, r3, #42	; 0x2a
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	615a      	str	r2, [r3, #20]
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	bc80      	pop	{r7}
 800038e:	4770      	bx	lr

08000390 <LL_USART_IsActiveFlag_RXNE>:
  * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
{
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
  return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	f003 0320 	and.w	r3, r3, #32
 80003a0:	2b20      	cmp	r3, #32
 80003a2:	bf0c      	ite	eq
 80003a4:	2301      	moveq	r3, #1
 80003a6:	2300      	movne	r3, #0
 80003a8:	b2db      	uxtb	r3, r3
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	bc80      	pop	{r7}
 80003b2:	4770      	bx	lr

080003b4 <LL_USART_IsActiveFlag_TXE>:
  * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b083      	sub	sp, #12
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
  return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003c4:	2b80      	cmp	r3, #128	; 0x80
 80003c6:	bf0c      	ite	eq
 80003c8:	2301      	moveq	r3, #1
 80003ca:	2300      	movne	r3, #0
 80003cc:	b2db      	uxtb	r3, r3
}
 80003ce:	4618      	mov	r0, r3
 80003d0:	370c      	adds	r7, #12
 80003d2:	46bd      	mov	sp, r7
 80003d4:	bc80      	pop	{r7}
 80003d6:	4770      	bx	lr

080003d8 <LL_USART_EnableIT_RXNE>:
  * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
{
 80003d8:	b480      	push	{r7}
 80003da:	b083      	sub	sp, #12
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
  SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	68db      	ldr	r3, [r3, #12]
 80003e4:	f043 0220 	orr.w	r2, r3, #32
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	60da      	str	r2, [r3, #12]
}
 80003ec:	bf00      	nop
 80003ee:	370c      	adds	r7, #12
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr

080003f6 <LL_USART_IsEnabledIT_RXNE>:
  * @rmtoll CR1          RXNEIE        LL_USART_IsEnabledIT_RXNE
  * @param  USARTx USART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE(USART_TypeDef *USARTx)
{
 80003f6:	b480      	push	{r7}
 80003f8:	b083      	sub	sp, #12
 80003fa:	af00      	add	r7, sp, #0
 80003fc:	6078      	str	r0, [r7, #4]
  return (READ_BIT(USARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE));
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	68db      	ldr	r3, [r3, #12]
 8000402:	f003 0320 	and.w	r3, r3, #32
 8000406:	2b20      	cmp	r3, #32
 8000408:	bf0c      	ite	eq
 800040a:	2301      	moveq	r3, #1
 800040c:	2300      	movne	r3, #0
 800040e:	b2db      	uxtb	r3, r3
}
 8000410:	4618      	mov	r0, r3
 8000412:	370c      	adds	r7, #12
 8000414:	46bd      	mov	sp, r7
 8000416:	bc80      	pop	{r7}
 8000418:	4770      	bx	lr

0800041a <LL_USART_ReceiveData8>:
  * @rmtoll DR           DR            LL_USART_ReceiveData8
  * @param  USARTx USART Instance
  * @retval Value between Min_Data=0x00 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_USART_ReceiveData8(USART_TypeDef *USARTx)
{
 800041a:	b480      	push	{r7}
 800041c:	b083      	sub	sp, #12
 800041e:	af00      	add	r7, sp, #0
 8000420:	6078      	str	r0, [r7, #4]
  return (uint8_t)(READ_BIT(USARTx->DR, USART_DR_DR));
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	685b      	ldr	r3, [r3, #4]
 8000426:	b2db      	uxtb	r3, r3
}
 8000428:	4618      	mov	r0, r3
 800042a:	370c      	adds	r7, #12
 800042c:	46bd      	mov	sp, r7
 800042e:	bc80      	pop	{r7}
 8000430:	4770      	bx	lr

08000432 <LL_USART_TransmitData8>:
  * @param  USARTx USART Instance
  * @param  Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
{
 8000432:	b480      	push	{r7}
 8000434:	b083      	sub	sp, #12
 8000436:	af00      	add	r7, sp, #0
 8000438:	6078      	str	r0, [r7, #4]
 800043a:	460b      	mov	r3, r1
 800043c:	70fb      	strb	r3, [r7, #3]
  USARTx->DR = Value;
 800043e:	78fa      	ldrb	r2, [r7, #3]
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	605a      	str	r2, [r3, #4]
}
 8000444:	bf00      	nop
 8000446:	370c      	adds	r7, #12
 8000448:	46bd      	mov	sp, r7
 800044a:	bc80      	pop	{r7}
 800044c:	4770      	bx	lr
	...

08000450 <LL_APB2_GRP1_EnableClock>:
  *
  *         (*) value not defined in all devices.
  * @retval None
*/
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
 8000450:	b480      	push	{r7}
 8000452:	b085      	sub	sp, #20
 8000454:	af00      	add	r7, sp, #0
 8000456:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
 8000458:	4b08      	ldr	r3, [pc, #32]	; (800047c <LL_APB2_GRP1_EnableClock+0x2c>)
 800045a:	699a      	ldr	r2, [r3, #24]
 800045c:	4907      	ldr	r1, [pc, #28]	; (800047c <LL_APB2_GRP1_EnableClock+0x2c>)
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4313      	orrs	r3, r2
 8000462:	618b      	str	r3, [r1, #24]
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 8000464:	4b05      	ldr	r3, [pc, #20]	; (800047c <LL_APB2_GRP1_EnableClock+0x2c>)
 8000466:	699a      	ldr	r2, [r3, #24]
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4013      	ands	r3, r2
 800046c:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 800046e:	68fb      	ldr	r3, [r7, #12]
}
 8000470:	bf00      	nop
 8000472:	3714      	adds	r7, #20
 8000474:	46bd      	mov	sp, r7
 8000476:	bc80      	pop	{r7}
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	40021000 	.word	0x40021000

08000480 <USART1_IRQHandler>:
/**
 * @brief  The application entry point.
 * @retval int
 */

void USART1_IRQHandler(void) {
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN USART1_IRQn 0 */

	/* USER CODE END USART1_IRQn 0 */
	/* USER CODE BEGIN USART1_IRQn 1 */
	if (LL_USART_IsActiveFlag_RXNE(USART1)
 8000484:	480e      	ldr	r0, [pc, #56]	; (80004c0 <USART1_IRQHandler+0x40>)
 8000486:	f7ff ff83 	bl	8000390 <LL_USART_IsActiveFlag_RXNE>
 800048a:	4603      	mov	r3, r0
 800048c:	2b00      	cmp	r3, #0
 800048e:	d011      	beq.n	80004b4 <USART1_IRQHandler+0x34>
			&& LL_USART_IsEnabledIT_RXNE(USART1)) {
 8000490:	480b      	ldr	r0, [pc, #44]	; (80004c0 <USART1_IRQHandler+0x40>)
 8000492:	f7ff ffb0 	bl	80003f6 <LL_USART_IsEnabledIT_RXNE>
 8000496:	4603      	mov	r3, r0
 8000498:	2b00      	cmp	r3, #0
 800049a:	d00b      	beq.n	80004b4 <USART1_IRQHandler+0x34>
		bufbyte = LL_USART_ReceiveData8(USART1);
 800049c:	4808      	ldr	r0, [pc, #32]	; (80004c0 <USART1_IRQHandler+0x40>)
 800049e:	f7ff ffbc 	bl	800041a <LL_USART_ReceiveData8>
 80004a2:	4603      	mov	r3, r0
 80004a4:	461a      	mov	r2, r3
 80004a6:	4b07      	ldr	r3, [pc, #28]	; (80004c4 <USART1_IRQHandler+0x44>)
 80004a8:	701a      	strb	r2, [r3, #0]
		fifo_write_byte(bufbyte);
 80004aa:	4b06      	ldr	r3, [pc, #24]	; (80004c4 <USART1_IRQHandler+0x44>)
 80004ac:	781b      	ldrb	r3, [r3, #0]
 80004ae:	4618      	mov	r0, r3
 80004b0:	f7ff fe54 	bl	800015c <fifo_write_byte>
	};
	ch = 1;
 80004b4:	4b04      	ldr	r3, [pc, #16]	; (80004c8 <USART1_IRQHandler+0x48>)
 80004b6:	2201      	movs	r2, #1
 80004b8:	701a      	strb	r2, [r3, #0]

	/* USER CODE END USART1_IRQn 1 */
}
 80004ba:	bf00      	nop
 80004bc:	bd80      	pop	{r7, pc}
 80004be:	bf00      	nop
 80004c0:	40013800 	.word	0x40013800
 80004c4:	2000010c 	.word	0x2000010c
 80004c8:	200002a8 	.word	0x200002a8

080004cc <UART1_PutChar>:
	while (*p) {
		LL_USART_TransmitData8(USART1, *p++);
	}
}

void UART1_PutChar(uint8_t data) {
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b082      	sub	sp, #8
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	4603      	mov	r3, r0
 80004d4:	71fb      	strb	r3, [r7, #7]
	LL_USART_TransmitData8(USART1, data);
 80004d6:	79fb      	ldrb	r3, [r7, #7]
 80004d8:	4619      	mov	r1, r3
 80004da:	4807      	ldr	r0, [pc, #28]	; (80004f8 <UART1_PutChar+0x2c>)
 80004dc:	f7ff ffa9 	bl	8000432 <LL_USART_TransmitData8>
	/* Wait for TXE flag to be raised */
	while (!LL_USART_IsActiveFlag_TXE(USART1))
 80004e0:	bf00      	nop
 80004e2:	4805      	ldr	r0, [pc, #20]	; (80004f8 <UART1_PutChar+0x2c>)
 80004e4:	f7ff ff66 	bl	80003b4 <LL_USART_IsActiveFlag_TXE>
 80004e8:	4603      	mov	r3, r0
 80004ea:	2b00      	cmp	r3, #0
 80004ec:	d0f9      	beq.n	80004e2 <UART1_PutChar+0x16>
		;
}
 80004ee:	bf00      	nop
 80004f0:	3708      	adds	r7, #8
 80004f2:	46bd      	mov	sp, r7
 80004f4:	bd80      	pop	{r7, pc}
 80004f6:	bf00      	nop
 80004f8:	40013800 	.word	0x40013800

080004fc <UART1_PutStr>:

void UART1_PutStr(char *string) {
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b082      	sub	sp, #8
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
	while (*string != '\0')
 8000504:	e006      	b.n	8000514 <UART1_PutStr+0x18>
		UART1_PutChar(*string++);
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	1c5a      	adds	r2, r3, #1
 800050a:	607a      	str	r2, [r7, #4]
 800050c:	781b      	ldrb	r3, [r3, #0]
 800050e:	4618      	mov	r0, r3
 8000510:	f7ff ffdc 	bl	80004cc <UART1_PutChar>
	while (*string != '\0')
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	781b      	ldrb	r3, [r3, #0]
 8000518:	2b00      	cmp	r3, #0
 800051a:	d1f4      	bne.n	8000506 <UART1_PutStr+0xa>
}
 800051c:	bf00      	nop
 800051e:	3708      	adds	r7, #8
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}

08000524 <s_i>:

int s_i(uint8_t *str) {
 8000524:	b580      	push	{r7, lr}
 8000526:	b084      	sub	sp, #16
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
	uint16_t num = 0;
 800052c:	2300      	movs	r3, #0
 800052e:	81fb      	strh	r3, [r7, #14]

	for (int i = 0; i < strlen((char *)str); i++) {
 8000530:	2300      	movs	r3, #0
 8000532:	60bb      	str	r3, [r7, #8]
 8000534:	e012      	b.n	800055c <s_i+0x38>
		num = num * (10);
 8000536:	89fb      	ldrh	r3, [r7, #14]
 8000538:	461a      	mov	r2, r3
 800053a:	0092      	lsls	r2, r2, #2
 800053c:	4413      	add	r3, r2
 800053e:	005b      	lsls	r3, r3, #1
 8000540:	81fb      	strh	r3, [r7, #14]
		num += str[i] - '0';
 8000542:	68bb      	ldr	r3, [r7, #8]
 8000544:	687a      	ldr	r2, [r7, #4]
 8000546:	4413      	add	r3, r2
 8000548:	781b      	ldrb	r3, [r3, #0]
 800054a:	b29a      	uxth	r2, r3
 800054c:	89fb      	ldrh	r3, [r7, #14]
 800054e:	4413      	add	r3, r2
 8000550:	b29b      	uxth	r3, r3
 8000552:	3b30      	subs	r3, #48	; 0x30
 8000554:	81fb      	strh	r3, [r7, #14]
	for (int i = 0; i < strlen((char *)str); i++) {
 8000556:	68bb      	ldr	r3, [r7, #8]
 8000558:	3301      	adds	r3, #1
 800055a:	60bb      	str	r3, [r7, #8]
 800055c:	6878      	ldr	r0, [r7, #4]
 800055e:	f7ff fdf5 	bl	800014c <strlen>
 8000562:	4602      	mov	r2, r0
 8000564:	68bb      	ldr	r3, [r7, #8]
 8000566:	429a      	cmp	r2, r3
 8000568:	d8e5      	bhi.n	8000536 <s_i+0x12>
	}
	//     printf("%d\n", num);


	return num;
 800056a:	89fb      	ldrh	r3, [r7, #14]
}
 800056c:	4618      	mov	r0, r3
 800056e:	3710      	adds	r7, #16
 8000570:	46bd      	mov	sp, r7
 8000572:	bd80      	pop	{r7, pc}

08000574 <main>:

		len--;
	}
}

int main(void) {
 8000574:	b580      	push	{r7, lr}
 8000576:	b092      	sub	sp, #72	; 0x48
 8000578:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800057a:	f000 fb2d 	bl	8000bd8 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800057e:	f000 f949 	bl	8000814 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8000582:	f000 f9f5 	bl	8000970 <MX_GPIO_Init>
	MX_USART1_UART_Init();
 8000586:	f000 f98b 	bl	80008a0 <MX_USART1_UART_Init>
	/* USER CODE BEGIN 2 */
	LL_USART_EnableIT_RXNE(USART1);
 800058a:	4893      	ldr	r0, [pc, #588]	; (80007d8 <main+0x264>)
 800058c:	f7ff ff24 	bl	80003d8 <LL_USART_EnableIT_RXNE>

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {
		/* USER CODE END WHILE */
		memset(s1, 0, sizeof(s1));
 8000590:	2264      	movs	r2, #100	; 0x64
 8000592:	2100      	movs	r1, #0
 8000594:	4891      	ldr	r0, [pc, #580]	; (80007dc <main+0x268>)
 8000596:	f001 fd29 	bl	8001fec <memset>
		memset(s2, 0, sizeof(s2));
 800059a:	2264      	movs	r2, #100	; 0x64
 800059c:	2100      	movs	r1, #0
 800059e:	4890      	ldr	r0, [pc, #576]	; (80007e0 <main+0x26c>)
 80005a0:	f001 fd24 	bl	8001fec <memset>
		memset(s3, 0, sizeof(s3));
 80005a4:	2264      	movs	r2, #100	; 0x64
 80005a6:	2100      	movs	r1, #0
 80005a8:	488e      	ldr	r0, [pc, #568]	; (80007e4 <main+0x270>)
 80005aa:	f001 fd1f 	bl	8001fec <memset>

		while (!fifo_data_available()) {
 80005ae:	bf00      	nop
 80005b0:	f7ff fe3a 	bl	8000228 <fifo_data_available>
 80005b4:	4603      	mov	r3, r0
 80005b6:	2b00      	cmp	r3, #0
 80005b8:	d0fa      	beq.n	80005b0 <main+0x3c>
			; //wait loop for first byte of data to get filled in the fifo.
		}

		//now we reached here because some bytes are received in fifo.
		//Let us give some time for the fifo to get filled with the full string.
		HAL_Delay(300);
 80005ba:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80005be:	f000 fb6d 	bl	8000c9c <HAL_Delay>

		//Collect the data from fifo to s1 buffer
		uint8_t n = 0;
 80005c2:	2300      	movs	r3, #0
 80005c4:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
		while (fifo_data_available()) {
 80005c8:	e00c      	b.n	80005e4 <main+0x70>
			s1[n] = fifo_read_byte();
 80005ca:	f7ff fdfb 	bl	80001c4 <fifo_read_byte>
 80005ce:	4602      	mov	r2, r0
 80005d0:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80005d4:	b2d1      	uxtb	r1, r2
 80005d6:	4a81      	ldr	r2, [pc, #516]	; (80007dc <main+0x268>)
 80005d8:	54d1      	strb	r1, [r2, r3]
			n++;
 80005da:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80005de:	3301      	adds	r3, #1
 80005e0:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
		while (fifo_data_available()) {
 80005e4:	f7ff fe20 	bl	8000228 <fifo_data_available>
 80005e8:	4603      	mov	r3, r0
 80005ea:	2b00      	cmp	r3, #0
 80005ec:	d1ed      	bne.n	80005ca <main+0x56>
		}

		//validation after 300 mS of wait...
		if (n) {
 80005ee:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	f000 80ed 	beq.w	80007d2 <main+0x25e>
			if (s1[n - 1] == '\n') {
 80005f8:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80005fc:	3b01      	subs	r3, #1
 80005fe:	4a77      	ldr	r2, [pc, #476]	; (80007dc <main+0x268>)
 8000600:	5cd3      	ldrb	r3, [r2, r3]
 8000602:	2b0a      	cmp	r3, #10
 8000604:	d008      	beq.n	8000618 <main+0xa4>
				//Valid data available in buffer...
			} else {
				//flush fifo for receiving new data string
				while (fifo_data_available()) {
 8000606:	e001      	b.n	800060c <main+0x98>
					fifo_read_byte();
 8000608:	f7ff fddc 	bl	80001c4 <fifo_read_byte>
				while (fifo_data_available()) {
 800060c:	f7ff fe0c 	bl	8000228 <fifo_data_available>
 8000610:	4603      	mov	r3, r0
 8000612:	2b00      	cmp	r3, #0
 8000614:	d1f8      	bne.n	8000608 <main+0x94>
				}
				continue;// We couldn't find \n at the end of string even after 300 ms of waiting. Invalid packet. Go back to main while on top...
 8000616:	e0dd      	b.n	80007d4 <main+0x260>
		}

		///we are here because we received a valid string with proper \n ending. We will process the sting now.


		 int i = 0, j = 0;
 8000618:	2300      	movs	r3, #0
 800061a:	643b      	str	r3, [r7, #64]	; 0x40
 800061c:	2300      	movs	r3, #0
 800061e:	63fb      	str	r3, [r7, #60]	; 0x3c
         while((s1[i] > 47) && (s1[i] < 58))
 8000620:	e00b      	b.n	800063a <main+0xc6>
		 {
		 s2[i] = s1[i];
 8000622:	4a6e      	ldr	r2, [pc, #440]	; (80007dc <main+0x268>)
 8000624:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000626:	4413      	add	r3, r2
 8000628:	7819      	ldrb	r1, [r3, #0]
 800062a:	4a6d      	ldr	r2, [pc, #436]	; (80007e0 <main+0x26c>)
 800062c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800062e:	4413      	add	r3, r2
 8000630:	460a      	mov	r2, r1
 8000632:	701a      	strb	r2, [r3, #0]
		 i++;
 8000634:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000636:	3301      	adds	r3, #1
 8000638:	643b      	str	r3, [r7, #64]	; 0x40
         while((s1[i] > 47) && (s1[i] < 58))
 800063a:	4a68      	ldr	r2, [pc, #416]	; (80007dc <main+0x268>)
 800063c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800063e:	4413      	add	r3, r2
 8000640:	781b      	ldrb	r3, [r3, #0]
 8000642:	2b2f      	cmp	r3, #47	; 0x2f
 8000644:	d905      	bls.n	8000652 <main+0xde>
 8000646:	4a65      	ldr	r2, [pc, #404]	; (80007dc <main+0x268>)
 8000648:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800064a:	4413      	add	r3, r2
 800064c:	781b      	ldrb	r3, [r3, #0]
 800064e:	2b39      	cmp	r3, #57	; 0x39
 8000650:	d9e7      	bls.n	8000622 <main+0xae>
		 }
		 a = s_i(s2);
 8000652:	4863      	ldr	r0, [pc, #396]	; (80007e0 <main+0x26c>)
 8000654:	f7ff ff66 	bl	8000524 <s_i>
 8000658:	4603      	mov	r3, r0
 800065a:	b29a      	uxth	r2, r3
 800065c:	4b62      	ldr	r3, [pc, #392]	; (80007e8 <main+0x274>)
 800065e:	801a      	strh	r2, [r3, #0]
		 char adata[20];
		 sprintf(adata, "a = %d\n", a);
 8000660:	4b61      	ldr	r3, [pc, #388]	; (80007e8 <main+0x274>)
 8000662:	881b      	ldrh	r3, [r3, #0]
 8000664:	461a      	mov	r2, r3
 8000666:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800066a:	4960      	ldr	r1, [pc, #384]	; (80007ec <main+0x278>)
 800066c:	4618      	mov	r0, r3
 800066e:	f001 fcc5 	bl	8001ffc <siprintf>
		 UART1_PutStr(adata);
 8000672:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000676:	4618      	mov	r0, r3
 8000678:	f7ff ff40 	bl	80004fc <UART1_PutStr>

		 op = s1[i];
 800067c:	4a57      	ldr	r2, [pc, #348]	; (80007dc <main+0x268>)
 800067e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000680:	4413      	add	r3, r2
 8000682:	781a      	ldrb	r2, [r3, #0]
 8000684:	4b5a      	ldr	r3, [pc, #360]	; (80007f0 <main+0x27c>)
 8000686:	701a      	strb	r2, [r3, #0]
		 UART1_PutChar(op);
 8000688:	4b59      	ldr	r3, [pc, #356]	; (80007f0 <main+0x27c>)
 800068a:	781b      	ldrb	r3, [r3, #0]
 800068c:	4618      	mov	r0, r3
 800068e:	f7ff ff1d 	bl	80004cc <UART1_PutChar>
		 UART1_PutStr("\n");
 8000692:	4858      	ldr	r0, [pc, #352]	; (80007f4 <main+0x280>)
 8000694:	f7ff ff32 	bl	80004fc <UART1_PutStr>

		 i++;
 8000698:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800069a:	3301      	adds	r3, #1
 800069c:	643b      	str	r3, [r7, #64]	; 0x40

		 while(s1[i] != '\n')
 800069e:	e00e      	b.n	80006be <main+0x14a>
		 {
		 s3[j] = s1[i];
 80006a0:	4a4e      	ldr	r2, [pc, #312]	; (80007dc <main+0x268>)
 80006a2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80006a4:	4413      	add	r3, r2
 80006a6:	7819      	ldrb	r1, [r3, #0]
 80006a8:	4a4e      	ldr	r2, [pc, #312]	; (80007e4 <main+0x270>)
 80006aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80006ac:	4413      	add	r3, r2
 80006ae:	460a      	mov	r2, r1
 80006b0:	701a      	strb	r2, [r3, #0]
		 i++;
 80006b2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80006b4:	3301      	adds	r3, #1
 80006b6:	643b      	str	r3, [r7, #64]	; 0x40
		 j++;
 80006b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80006ba:	3301      	adds	r3, #1
 80006bc:	63fb      	str	r3, [r7, #60]	; 0x3c
		 while(s1[i] != '\n')
 80006be:	4a47      	ldr	r2, [pc, #284]	; (80007dc <main+0x268>)
 80006c0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80006c2:	4413      	add	r3, r2
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	2b0a      	cmp	r3, #10
 80006c8:	d1ea      	bne.n	80006a0 <main+0x12c>
		 }
		 b = s_i(s3);
 80006ca:	4846      	ldr	r0, [pc, #280]	; (80007e4 <main+0x270>)
 80006cc:	f7ff ff2a 	bl	8000524 <s_i>
 80006d0:	4603      	mov	r3, r0
 80006d2:	b29a      	uxth	r2, r3
 80006d4:	4b48      	ldr	r3, [pc, #288]	; (80007f8 <main+0x284>)
 80006d6:	801a      	strh	r2, [r3, #0]
		 char bdata[20];
		 sprintf(bdata, "b = %d\n", b);
 80006d8:	4b47      	ldr	r3, [pc, #284]	; (80007f8 <main+0x284>)
 80006da:	881b      	ldrh	r3, [r3, #0]
 80006dc:	461a      	mov	r2, r3
 80006de:	f107 0314 	add.w	r3, r7, #20
 80006e2:	4946      	ldr	r1, [pc, #280]	; (80007fc <main+0x288>)
 80006e4:	4618      	mov	r0, r3
 80006e6:	f001 fc89 	bl	8001ffc <siprintf>
		 UART1_PutStr(bdata);
 80006ea:	f107 0314 	add.w	r3, r7, #20
 80006ee:	4618      	mov	r0, r3
 80006f0:	f7ff ff04 	bl	80004fc <UART1_PutStr>

		switch (op) {
 80006f4:	4b3e      	ldr	r3, [pc, #248]	; (80007f0 <main+0x27c>)
 80006f6:	781b      	ldrb	r3, [r3, #0]
 80006f8:	3b2a      	subs	r3, #42	; 0x2a
 80006fa:	2b05      	cmp	r3, #5
 80006fc:	d864      	bhi.n	80007c8 <main+0x254>
 80006fe:	a201      	add	r2, pc, #4	; (adr r2, 8000704 <main+0x190>)
 8000700:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000704:	08000771 	.word	0x08000771
 8000708:	0800071d 	.word	0x0800071d
 800070c:	080007c9 	.word	0x080007c9
 8000710:	08000747 	.word	0x08000747
 8000714:	080007c9 	.word	0x080007c9
 8000718:	0800079d 	.word	0x0800079d
		char cdata[20];
		case '+':
			c = a + b;
 800071c:	4b32      	ldr	r3, [pc, #200]	; (80007e8 <main+0x274>)
 800071e:	881a      	ldrh	r2, [r3, #0]
 8000720:	4b35      	ldr	r3, [pc, #212]	; (80007f8 <main+0x284>)
 8000722:	881b      	ldrh	r3, [r3, #0]
 8000724:	4413      	add	r3, r2
 8000726:	b29a      	uxth	r2, r3
 8000728:	4b35      	ldr	r3, [pc, #212]	; (8000800 <main+0x28c>)
 800072a:	801a      	strh	r2, [r3, #0]

			sprintf(cdata, "sum = %d\n", c);
 800072c:	4b34      	ldr	r3, [pc, #208]	; (8000800 <main+0x28c>)
 800072e:	881b      	ldrh	r3, [r3, #0]
 8000730:	461a      	mov	r2, r3
 8000732:	463b      	mov	r3, r7
 8000734:	4933      	ldr	r1, [pc, #204]	; (8000804 <main+0x290>)
 8000736:	4618      	mov	r0, r3
 8000738:	f001 fc60 	bl	8001ffc <siprintf>
			UART1_PutStr(cdata);
 800073c:	463b      	mov	r3, r7
 800073e:	4618      	mov	r0, r3
 8000740:	f7ff fedc 	bl	80004fc <UART1_PutStr>

			break;
 8000744:	e041      	b.n	80007ca <main+0x256>
		case '-':
			c = a - b;
 8000746:	4b28      	ldr	r3, [pc, #160]	; (80007e8 <main+0x274>)
 8000748:	881a      	ldrh	r2, [r3, #0]
 800074a:	4b2b      	ldr	r3, [pc, #172]	; (80007f8 <main+0x284>)
 800074c:	881b      	ldrh	r3, [r3, #0]
 800074e:	1ad3      	subs	r3, r2, r3
 8000750:	b29a      	uxth	r2, r3
 8000752:	4b2b      	ldr	r3, [pc, #172]	; (8000800 <main+0x28c>)
 8000754:	801a      	strh	r2, [r3, #0]
			sprintf(cdata, "difference = %d\n", c);
 8000756:	4b2a      	ldr	r3, [pc, #168]	; (8000800 <main+0x28c>)
 8000758:	881b      	ldrh	r3, [r3, #0]
 800075a:	461a      	mov	r2, r3
 800075c:	463b      	mov	r3, r7
 800075e:	492a      	ldr	r1, [pc, #168]	; (8000808 <main+0x294>)
 8000760:	4618      	mov	r0, r3
 8000762:	f001 fc4b 	bl	8001ffc <siprintf>
			UART1_PutStr(cdata);
 8000766:	463b      	mov	r3, r7
 8000768:	4618      	mov	r0, r3
 800076a:	f7ff fec7 	bl	80004fc <UART1_PutStr>

			break;
 800076e:	e02c      	b.n	80007ca <main+0x256>
		case '*':
			c = a * b;
 8000770:	4b1d      	ldr	r3, [pc, #116]	; (80007e8 <main+0x274>)
 8000772:	881b      	ldrh	r3, [r3, #0]
 8000774:	4a20      	ldr	r2, [pc, #128]	; (80007f8 <main+0x284>)
 8000776:	8812      	ldrh	r2, [r2, #0]
 8000778:	fb02 f303 	mul.w	r3, r2, r3
 800077c:	b29a      	uxth	r2, r3
 800077e:	4b20      	ldr	r3, [pc, #128]	; (8000800 <main+0x28c>)
 8000780:	801a      	strh	r2, [r3, #0]
			sprintf(cdata, "product = %d\n", c);
 8000782:	4b1f      	ldr	r3, [pc, #124]	; (8000800 <main+0x28c>)
 8000784:	881b      	ldrh	r3, [r3, #0]
 8000786:	461a      	mov	r2, r3
 8000788:	463b      	mov	r3, r7
 800078a:	4920      	ldr	r1, [pc, #128]	; (800080c <main+0x298>)
 800078c:	4618      	mov	r0, r3
 800078e:	f001 fc35 	bl	8001ffc <siprintf>
			UART1_PutStr(cdata);
 8000792:	463b      	mov	r3, r7
 8000794:	4618      	mov	r0, r3
 8000796:	f7ff feb1 	bl	80004fc <UART1_PutStr>

			break;
 800079a:	e016      	b.n	80007ca <main+0x256>
		case '/':
			c = a / b;
 800079c:	4b12      	ldr	r3, [pc, #72]	; (80007e8 <main+0x274>)
 800079e:	881a      	ldrh	r2, [r3, #0]
 80007a0:	4b15      	ldr	r3, [pc, #84]	; (80007f8 <main+0x284>)
 80007a2:	881b      	ldrh	r3, [r3, #0]
 80007a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80007a8:	b29a      	uxth	r2, r3
 80007aa:	4b15      	ldr	r3, [pc, #84]	; (8000800 <main+0x28c>)
 80007ac:	801a      	strh	r2, [r3, #0]
			sprintf(cdata, "quotient = %d\n", c);
 80007ae:	4b14      	ldr	r3, [pc, #80]	; (8000800 <main+0x28c>)
 80007b0:	881b      	ldrh	r3, [r3, #0]
 80007b2:	461a      	mov	r2, r3
 80007b4:	463b      	mov	r3, r7
 80007b6:	4916      	ldr	r1, [pc, #88]	; (8000810 <main+0x29c>)
 80007b8:	4618      	mov	r0, r3
 80007ba:	f001 fc1f 	bl	8001ffc <siprintf>
			UART1_PutStr(cdata);
 80007be:	463b      	mov	r3, r7
 80007c0:	4618      	mov	r0, r3
 80007c2:	f7ff fe9b 	bl	80004fc <UART1_PutStr>

			break;
 80007c6:	e000      	b.n	80007ca <main+0x256>
		default:
			break;
 80007c8:	bf00      	nop
		}

		UART1_PutStr("\n");
 80007ca:	480a      	ldr	r0, [pc, #40]	; (80007f4 <main+0x280>)
 80007cc:	f7ff fe96 	bl	80004fc <UART1_PutStr>
 80007d0:	e6de      	b.n	8000590 <main+0x1c>
			continue; //no data available because n is zero! go to main while on top ...
 80007d2:	bf00      	nop
	while (1) {
 80007d4:	e6dc      	b.n	8000590 <main+0x1c>
 80007d6:	bf00      	nop
 80007d8:	40013800 	.word	0x40013800
 80007dc:	20000110 	.word	0x20000110
 80007e0:	20000178 	.word	0x20000178
 80007e4:	20000244 	.word	0x20000244
 80007e8:	200001dc 	.word	0x200001dc
 80007ec:	08002838 	.word	0x08002838
 80007f0:	20000108 	.word	0x20000108
 80007f4:	08002840 	.word	0x08002840
 80007f8:	2000010a 	.word	0x2000010a
 80007fc:	08002844 	.word	0x08002844
 8000800:	20000174 	.word	0x20000174
 8000804:	0800284c 	.word	0x0800284c
 8000808:	08002858 	.word	0x08002858
 800080c:	0800286c 	.word	0x0800286c
 8000810:	0800287c 	.word	0x0800287c

08000814 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8000814:	b580      	push	{r7, lr}
 8000816:	b090      	sub	sp, #64	; 0x40
 8000818:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 800081a:	f107 0318 	add.w	r3, r7, #24
 800081e:	2228      	movs	r2, #40	; 0x28
 8000820:	2100      	movs	r1, #0
 8000822:	4618      	mov	r0, r3
 8000824:	f001 fbe2 	bl	8001fec <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8000828:	1d3b      	adds	r3, r7, #4
 800082a:	2200      	movs	r2, #0
 800082c:	601a      	str	r2, [r3, #0]
 800082e:	605a      	str	r2, [r3, #4]
 8000830:	609a      	str	r2, [r3, #8]
 8000832:	60da      	str	r2, [r3, #12]
 8000834:	611a      	str	r2, [r3, #16]

	/** Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000836:	2301      	movs	r3, #1
 8000838:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800083a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800083e:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000840:	2300      	movs	r3, #0
 8000842:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000844:	2301      	movs	r3, #1
 8000846:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000848:	2302      	movs	r3, #2
 800084a:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800084c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000850:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000852:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000856:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8000858:	f107 0318 	add.w	r3, r7, #24
 800085c:	4618      	mov	r0, r3
 800085e:	f000 fc95 	bl	800118c <HAL_RCC_OscConfig>
 8000862:	4603      	mov	r3, r0
 8000864:	2b00      	cmp	r3, #0
 8000866:	d001      	beq.n	800086c <SystemClock_Config+0x58>
		Error_Handler();
 8000868:	f000 f8ce 	bl	8000a08 <Error_Handler>
	}
	/** Initializes the CPU, AHB and APB busses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 800086c:	230f      	movs	r3, #15
 800086e:	607b      	str	r3, [r7, #4]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000870:	2302      	movs	r3, #2
 8000872:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000874:	2300      	movs	r3, #0
 8000876:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000878:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800087c:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800087e:	2300      	movs	r3, #0
 8000880:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 8000882:	1d3b      	adds	r3, r7, #4
 8000884:	2102      	movs	r1, #2
 8000886:	4618      	mov	r0, r3
 8000888:	f000 ff00 	bl	800168c <HAL_RCC_ClockConfig>
 800088c:	4603      	mov	r3, r0
 800088e:	2b00      	cmp	r3, #0
 8000890:	d001      	beq.n	8000896 <SystemClock_Config+0x82>
		Error_Handler();
 8000892:	f000 f8b9 	bl	8000a08 <Error_Handler>
	}
}
 8000896:	bf00      	nop
 8000898:	3740      	adds	r7, #64	; 0x40
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
	...

080008a0 <MX_USART1_UART_Init>:
/**
 * @brief USART1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART1_UART_Init(void) {
 80008a0:	b580      	push	{r7, lr}
 80008a2:	b08c      	sub	sp, #48	; 0x30
 80008a4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN USART1_Init 0 */

	/* USER CODE END USART1_Init 0 */

	LL_USART_InitTypeDef USART_InitStruct = { 0 };
 80008a6:	f107 0314 	add.w	r3, r7, #20
 80008aa:	2200      	movs	r2, #0
 80008ac:	601a      	str	r2, [r3, #0]
 80008ae:	605a      	str	r2, [r3, #4]
 80008b0:	609a      	str	r2, [r3, #8]
 80008b2:	60da      	str	r2, [r3, #12]
 80008b4:	611a      	str	r2, [r3, #16]
 80008b6:	615a      	str	r2, [r3, #20]
 80008b8:	619a      	str	r2, [r3, #24]

	LL_GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 80008ba:	463b      	mov	r3, r7
 80008bc:	2200      	movs	r2, #0
 80008be:	601a      	str	r2, [r3, #0]
 80008c0:	605a      	str	r2, [r3, #4]
 80008c2:	609a      	str	r2, [r3, #8]
 80008c4:	60da      	str	r2, [r3, #12]
 80008c6:	611a      	str	r2, [r3, #16]

	/* Peripheral clock enable */
	LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_USART1);
 80008c8:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80008cc:	f7ff fdc0 	bl	8000450 <LL_APB2_GRP1_EnableClock>

	LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 80008d0:	2004      	movs	r0, #4
 80008d2:	f7ff fdbd 	bl	8000450 <LL_APB2_GRP1_EnableClock>
	/**USART1 GPIO Configuration
	 PA9   ------> USART1_TX
	 PA10   ------> USART1_RX
	 */
	GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
 80008d6:	4b22      	ldr	r3, [pc, #136]	; (8000960 <MX_USART1_UART_Init+0xc0>)
 80008d8:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 80008da:	2309      	movs	r3, #9
 80008dc:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 80008de:	2303      	movs	r3, #3
 80008e0:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 80008e2:	2300      	movs	r3, #0
 80008e4:	60fb      	str	r3, [r7, #12]
	LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008e6:	463b      	mov	r3, r7
 80008e8:	4619      	mov	r1, r3
 80008ea:	481e      	ldr	r0, [pc, #120]	; (8000964 <MX_USART1_UART_Init+0xc4>)
 80008ec:	f001 f8f0 	bl	8001ad0 <LL_GPIO_Init>

	GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 80008f0:	4b1d      	ldr	r3, [pc, #116]	; (8000968 <MX_USART1_UART_Init+0xc8>)
 80008f2:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 80008f4:	2304      	movs	r3, #4
 80008f6:	607b      	str	r3, [r7, #4]
	LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008f8:	463b      	mov	r3, r7
 80008fa:	4619      	mov	r1, r3
 80008fc:	4819      	ldr	r0, [pc, #100]	; (8000964 <MX_USART1_UART_Init+0xc4>)
 80008fe:	f001 f8e7 	bl	8001ad0 <LL_GPIO_Init>

	/* USART1 interrupt Init */
	NVIC_SetPriority(USART1_IRQn,
 8000902:	f7ff fc9b 	bl	800023c <__NVIC_GetPriorityGrouping>
 8000906:	4603      	mov	r3, r0
 8000908:	2200      	movs	r2, #0
 800090a:	2100      	movs	r1, #0
 800090c:	4618      	mov	r0, r3
 800090e:	f7ff fce9 	bl	80002e4 <NVIC_EncodePriority>
 8000912:	4603      	mov	r3, r0
 8000914:	4619      	mov	r1, r3
 8000916:	2025      	movs	r0, #37	; 0x25
 8000918:	f7ff fcba 	bl	8000290 <__NVIC_SetPriority>
			NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
	NVIC_EnableIRQ(USART1_IRQn);
 800091c:	2025      	movs	r0, #37	; 0x25
 800091e:	f7ff fc9b 	bl	8000258 <__NVIC_EnableIRQ>

	/* USER CODE BEGIN USART1_Init 1 */

	/* USER CODE END USART1_Init 1 */
	USART_InitStruct.BaudRate = 115200;
 8000922:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000926:	617b      	str	r3, [r7, #20]
	USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 8000928:	2300      	movs	r3, #0
 800092a:	61bb      	str	r3, [r7, #24]
	USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 800092c:	2300      	movs	r3, #0
 800092e:	61fb      	str	r3, [r7, #28]
	USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 8000930:	2300      	movs	r3, #0
 8000932:	623b      	str	r3, [r7, #32]
	USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 8000934:	230c      	movs	r3, #12
 8000936:	627b      	str	r3, [r7, #36]	; 0x24
	USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 8000938:	2300      	movs	r3, #0
 800093a:	62bb      	str	r3, [r7, #40]	; 0x28
	USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 800093c:	2300      	movs	r3, #0
 800093e:	62fb      	str	r3, [r7, #44]	; 0x2c
	LL_USART_Init(USART1, &USART_InitStruct);
 8000940:	f107 0314 	add.w	r3, r7, #20
 8000944:	4619      	mov	r1, r3
 8000946:	4809      	ldr	r0, [pc, #36]	; (800096c <MX_USART1_UART_Init+0xcc>)
 8000948:	f001 fac6 	bl	8001ed8 <LL_USART_Init>
	LL_USART_ConfigAsyncMode(USART1);
 800094c:	4807      	ldr	r0, [pc, #28]	; (800096c <MX_USART1_UART_Init+0xcc>)
 800094e:	f7ff fd0a 	bl	8000366 <LL_USART_ConfigAsyncMode>
	LL_USART_Enable(USART1);
 8000952:	4806      	ldr	r0, [pc, #24]	; (800096c <MX_USART1_UART_Init+0xcc>)
 8000954:	f7ff fcf8 	bl	8000348 <LL_USART_Enable>
	/* USER CODE BEGIN USART1_Init 2 */

	/* USER CODE END USART1_Init 2 */

}
 8000958:	bf00      	nop
 800095a:	3730      	adds	r7, #48	; 0x30
 800095c:	46bd      	mov	sp, r7
 800095e:	bd80      	pop	{r7, pc}
 8000960:	04020002 	.word	0x04020002
 8000964:	40010800 	.word	0x40010800
 8000968:	04040004 	.word	0x04040004
 800096c:	40013800 	.word	0x40013800

08000970 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8000970:	b580      	push	{r7, lr}
 8000972:	b088      	sub	sp, #32
 8000974:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8000976:	f107 0310 	add.w	r3, r7, #16
 800097a:	2200      	movs	r2, #0
 800097c:	601a      	str	r2, [r3, #0]
 800097e:	605a      	str	r2, [r3, #4]
 8000980:	609a      	str	r2, [r3, #8]
 8000982:	60da      	str	r2, [r3, #12]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8000984:	4b1e      	ldr	r3, [pc, #120]	; (8000a00 <MX_GPIO_Init+0x90>)
 8000986:	699b      	ldr	r3, [r3, #24]
 8000988:	4a1d      	ldr	r2, [pc, #116]	; (8000a00 <MX_GPIO_Init+0x90>)
 800098a:	f043 0310 	orr.w	r3, r3, #16
 800098e:	6193      	str	r3, [r2, #24]
 8000990:	4b1b      	ldr	r3, [pc, #108]	; (8000a00 <MX_GPIO_Init+0x90>)
 8000992:	699b      	ldr	r3, [r3, #24]
 8000994:	f003 0310 	and.w	r3, r3, #16
 8000998:	60fb      	str	r3, [r7, #12]
 800099a:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 800099c:	4b18      	ldr	r3, [pc, #96]	; (8000a00 <MX_GPIO_Init+0x90>)
 800099e:	699b      	ldr	r3, [r3, #24]
 80009a0:	4a17      	ldr	r2, [pc, #92]	; (8000a00 <MX_GPIO_Init+0x90>)
 80009a2:	f043 0320 	orr.w	r3, r3, #32
 80009a6:	6193      	str	r3, [r2, #24]
 80009a8:	4b15      	ldr	r3, [pc, #84]	; (8000a00 <MX_GPIO_Init+0x90>)
 80009aa:	699b      	ldr	r3, [r3, #24]
 80009ac:	f003 0320 	and.w	r3, r3, #32
 80009b0:	60bb      	str	r3, [r7, #8]
 80009b2:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80009b4:	4b12      	ldr	r3, [pc, #72]	; (8000a00 <MX_GPIO_Init+0x90>)
 80009b6:	699b      	ldr	r3, [r3, #24]
 80009b8:	4a11      	ldr	r2, [pc, #68]	; (8000a00 <MX_GPIO_Init+0x90>)
 80009ba:	f043 0304 	orr.w	r3, r3, #4
 80009be:	6193      	str	r3, [r2, #24]
 80009c0:	4b0f      	ldr	r3, [pc, #60]	; (8000a00 <MX_GPIO_Init+0x90>)
 80009c2:	699b      	ldr	r3, [r3, #24]
 80009c4:	f003 0304 	and.w	r3, r3, #4
 80009c8:	607b      	str	r3, [r7, #4]
 80009ca:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(led_GPIO_Port, led_Pin, GPIO_PIN_RESET);
 80009cc:	2200      	movs	r2, #0
 80009ce:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009d2:	480c      	ldr	r0, [pc, #48]	; (8000a04 <MX_GPIO_Init+0x94>)
 80009d4:	f000 fbc2 	bl	800115c <HAL_GPIO_WritePin>

	/*Configure GPIO pin : led_Pin */
	GPIO_InitStruct.Pin = led_Pin;
 80009d8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80009dc:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009de:	2301      	movs	r3, #1
 80009e0:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009e2:	2300      	movs	r3, #0
 80009e4:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009e6:	2302      	movs	r3, #2
 80009e8:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(led_GPIO_Port, &GPIO_InitStruct);
 80009ea:	f107 0310 	add.w	r3, r7, #16
 80009ee:	4619      	mov	r1, r3
 80009f0:	4804      	ldr	r0, [pc, #16]	; (8000a04 <MX_GPIO_Init+0x94>)
 80009f2:	f000 fa59 	bl	8000ea8 <HAL_GPIO_Init>

}
 80009f6:	bf00      	nop
 80009f8:	3720      	adds	r7, #32
 80009fa:	46bd      	mov	sp, r7
 80009fc:	bd80      	pop	{r7, pc}
 80009fe:	bf00      	nop
 8000a00:	40021000 	.word	0x40021000
 8000a04:	40011000 	.word	0x40011000

08000a08 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8000a08:	b480      	push	{r7}
 8000a0a:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

	/* USER CODE END Error_Handler_Debug */
}
 8000a0c:	bf00      	nop
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bc80      	pop	{r7}
 8000a12:	4770      	bx	lr

08000a14 <HAL_MspInit>:
 8000a14:	b480      	push	{r7}
 8000a16:	b085      	sub	sp, #20
 8000a18:	af00      	add	r7, sp, #0
 8000a1a:	4b15      	ldr	r3, [pc, #84]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a1c:	699b      	ldr	r3, [r3, #24]
 8000a1e:	4a14      	ldr	r2, [pc, #80]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a20:	f043 0301 	orr.w	r3, r3, #1
 8000a24:	6193      	str	r3, [r2, #24]
 8000a26:	4b12      	ldr	r3, [pc, #72]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a28:	699b      	ldr	r3, [r3, #24]
 8000a2a:	f003 0301 	and.w	r3, r3, #1
 8000a2e:	60bb      	str	r3, [r7, #8]
 8000a30:	68bb      	ldr	r3, [r7, #8]
 8000a32:	4b0f      	ldr	r3, [pc, #60]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a34:	69db      	ldr	r3, [r3, #28]
 8000a36:	4a0e      	ldr	r2, [pc, #56]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000a3c:	61d3      	str	r3, [r2, #28]
 8000a3e:	4b0c      	ldr	r3, [pc, #48]	; (8000a70 <HAL_MspInit+0x5c>)
 8000a40:	69db      	ldr	r3, [r3, #28]
 8000a42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000a46:	607b      	str	r3, [r7, #4]
 8000a48:	687b      	ldr	r3, [r7, #4]
 8000a4a:	4b0a      	ldr	r3, [pc, #40]	; (8000a74 <HAL_MspInit+0x60>)
 8000a4c:	685b      	ldr	r3, [r3, #4]
 8000a4e:	60fb      	str	r3, [r7, #12]
 8000a50:	68fb      	ldr	r3, [r7, #12]
 8000a52:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000a56:	60fb      	str	r3, [r7, #12]
 8000a58:	68fb      	ldr	r3, [r7, #12]
 8000a5a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000a5e:	60fb      	str	r3, [r7, #12]
 8000a60:	4a04      	ldr	r2, [pc, #16]	; (8000a74 <HAL_MspInit+0x60>)
 8000a62:	68fb      	ldr	r3, [r7, #12]
 8000a64:	6053      	str	r3, [r2, #4]
 8000a66:	bf00      	nop
 8000a68:	3714      	adds	r7, #20
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	bc80      	pop	{r7}
 8000a6e:	4770      	bx	lr
 8000a70:	40021000 	.word	0x40021000
 8000a74:	40010000 	.word	0x40010000

08000a78 <NMI_Handler>:
 8000a78:	b480      	push	{r7}
 8000a7a:	af00      	add	r7, sp, #0
 8000a7c:	bf00      	nop
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bc80      	pop	{r7}
 8000a82:	4770      	bx	lr

08000a84 <HardFault_Handler>:
 8000a84:	b480      	push	{r7}
 8000a86:	af00      	add	r7, sp, #0
 8000a88:	e7fe      	b.n	8000a88 <HardFault_Handler+0x4>

08000a8a <MemManage_Handler>:
 8000a8a:	b480      	push	{r7}
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	e7fe      	b.n	8000a8e <MemManage_Handler+0x4>

08000a90 <BusFault_Handler>:
 8000a90:	b480      	push	{r7}
 8000a92:	af00      	add	r7, sp, #0
 8000a94:	e7fe      	b.n	8000a94 <BusFault_Handler+0x4>

08000a96 <UsageFault_Handler>:
 8000a96:	b480      	push	{r7}
 8000a98:	af00      	add	r7, sp, #0
 8000a9a:	e7fe      	b.n	8000a9a <UsageFault_Handler+0x4>

08000a9c <SVC_Handler>:
 8000a9c:	b480      	push	{r7}
 8000a9e:	af00      	add	r7, sp, #0
 8000aa0:	bf00      	nop
 8000aa2:	46bd      	mov	sp, r7
 8000aa4:	bc80      	pop	{r7}
 8000aa6:	4770      	bx	lr

08000aa8 <DebugMon_Handler>:
 8000aa8:	b480      	push	{r7}
 8000aaa:	af00      	add	r7, sp, #0
 8000aac:	bf00      	nop
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bc80      	pop	{r7}
 8000ab2:	4770      	bx	lr

08000ab4 <PendSV_Handler>:
 8000ab4:	b480      	push	{r7}
 8000ab6:	af00      	add	r7, sp, #0
 8000ab8:	bf00      	nop
 8000aba:	46bd      	mov	sp, r7
 8000abc:	bc80      	pop	{r7}
 8000abe:	4770      	bx	lr

08000ac0 <SysTick_Handler>:
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	af00      	add	r7, sp, #0
 8000ac4:	f000 f8ce 	bl	8000c64 <HAL_IncTick>
 8000ac8:	bf00      	nop
 8000aca:	bd80      	pop	{r7, pc}

08000acc <_sbrk>:
 8000acc:	b580      	push	{r7, lr}
 8000ace:	b084      	sub	sp, #16
 8000ad0:	af00      	add	r7, sp, #0
 8000ad2:	6078      	str	r0, [r7, #4]
 8000ad4:	4b11      	ldr	r3, [pc, #68]	; (8000b1c <_sbrk+0x50>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	d102      	bne.n	8000ae2 <_sbrk+0x16>
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <_sbrk+0x50>)
 8000ade:	4a10      	ldr	r2, [pc, #64]	; (8000b20 <_sbrk+0x54>)
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	4b0e      	ldr	r3, [pc, #56]	; (8000b1c <_sbrk+0x50>)
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	60fb      	str	r3, [r7, #12]
 8000ae8:	4b0c      	ldr	r3, [pc, #48]	; (8000b1c <_sbrk+0x50>)
 8000aea:	681a      	ldr	r2, [r3, #0]
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	4413      	add	r3, r2
 8000af0:	466a      	mov	r2, sp
 8000af2:	4293      	cmp	r3, r2
 8000af4:	d907      	bls.n	8000b06 <_sbrk+0x3a>
 8000af6:	f001 fa4f 	bl	8001f98 <__errno>
 8000afa:	4602      	mov	r2, r0
 8000afc:	230c      	movs	r3, #12
 8000afe:	6013      	str	r3, [r2, #0]
 8000b00:	f04f 33ff 	mov.w	r3, #4294967295
 8000b04:	e006      	b.n	8000b14 <_sbrk+0x48>
 8000b06:	4b05      	ldr	r3, [pc, #20]	; (8000b1c <_sbrk+0x50>)
 8000b08:	681a      	ldr	r2, [r3, #0]
 8000b0a:	687b      	ldr	r3, [r7, #4]
 8000b0c:	4413      	add	r3, r2
 8000b0e:	4a03      	ldr	r2, [pc, #12]	; (8000b1c <_sbrk+0x50>)
 8000b10:	6013      	str	r3, [r2, #0]
 8000b12:	68fb      	ldr	r3, [r7, #12]
 8000b14:	4618      	mov	r0, r3
 8000b16:	3710      	adds	r7, #16
 8000b18:	46bd      	mov	sp, r7
 8000b1a:	bd80      	pop	{r7, pc}
 8000b1c:	2000008c 	.word	0x2000008c
 8000b20:	200002b8 	.word	0x200002b8

08000b24 <SystemInit>:
 8000b24:	b480      	push	{r7}
 8000b26:	af00      	add	r7, sp, #0
 8000b28:	4b15      	ldr	r3, [pc, #84]	; (8000b80 <SystemInit+0x5c>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	4a14      	ldr	r2, [pc, #80]	; (8000b80 <SystemInit+0x5c>)
 8000b2e:	f043 0301 	orr.w	r3, r3, #1
 8000b32:	6013      	str	r3, [r2, #0]
 8000b34:	4b12      	ldr	r3, [pc, #72]	; (8000b80 <SystemInit+0x5c>)
 8000b36:	685a      	ldr	r2, [r3, #4]
 8000b38:	4911      	ldr	r1, [pc, #68]	; (8000b80 <SystemInit+0x5c>)
 8000b3a:	4b12      	ldr	r3, [pc, #72]	; (8000b84 <SystemInit+0x60>)
 8000b3c:	4013      	ands	r3, r2
 8000b3e:	604b      	str	r3, [r1, #4]
 8000b40:	4b0f      	ldr	r3, [pc, #60]	; (8000b80 <SystemInit+0x5c>)
 8000b42:	681b      	ldr	r3, [r3, #0]
 8000b44:	4a0e      	ldr	r2, [pc, #56]	; (8000b80 <SystemInit+0x5c>)
 8000b46:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000b4a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000b4e:	6013      	str	r3, [r2, #0]
 8000b50:	4b0b      	ldr	r3, [pc, #44]	; (8000b80 <SystemInit+0x5c>)
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	4a0a      	ldr	r2, [pc, #40]	; (8000b80 <SystemInit+0x5c>)
 8000b56:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000b5a:	6013      	str	r3, [r2, #0]
 8000b5c:	4b08      	ldr	r3, [pc, #32]	; (8000b80 <SystemInit+0x5c>)
 8000b5e:	685b      	ldr	r3, [r3, #4]
 8000b60:	4a07      	ldr	r2, [pc, #28]	; (8000b80 <SystemInit+0x5c>)
 8000b62:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8000b66:	6053      	str	r3, [r2, #4]
 8000b68:	4b05      	ldr	r3, [pc, #20]	; (8000b80 <SystemInit+0x5c>)
 8000b6a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8000b6e:	609a      	str	r2, [r3, #8]
 8000b70:	4b05      	ldr	r3, [pc, #20]	; (8000b88 <SystemInit+0x64>)
 8000b72:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000b76:	609a      	str	r2, [r3, #8]
 8000b78:	bf00      	nop
 8000b7a:	46bd      	mov	sp, r7
 8000b7c:	bc80      	pop	{r7}
 8000b7e:	4770      	bx	lr
 8000b80:	40021000 	.word	0x40021000
 8000b84:	f8ff0000 	.word	0xf8ff0000
 8000b88:	e000ed00 	.word	0xe000ed00

08000b8c <Reset_Handler>:
 8000b8c:	2100      	movs	r1, #0
 8000b8e:	e003      	b.n	8000b98 <LoopCopyDataInit>

08000b90 <CopyDataInit>:
 8000b90:	4b0b      	ldr	r3, [pc, #44]	; (8000bc0 <LoopFillZerobss+0x14>)
 8000b92:	585b      	ldr	r3, [r3, r1]
 8000b94:	5043      	str	r3, [r0, r1]
 8000b96:	3104      	adds	r1, #4

08000b98 <LoopCopyDataInit>:
 8000b98:	480a      	ldr	r0, [pc, #40]	; (8000bc4 <LoopFillZerobss+0x18>)
 8000b9a:	4b0b      	ldr	r3, [pc, #44]	; (8000bc8 <LoopFillZerobss+0x1c>)
 8000b9c:	1842      	adds	r2, r0, r1
 8000b9e:	429a      	cmp	r2, r3
 8000ba0:	d3f6      	bcc.n	8000b90 <CopyDataInit>
 8000ba2:	4a0a      	ldr	r2, [pc, #40]	; (8000bcc <LoopFillZerobss+0x20>)
 8000ba4:	e002      	b.n	8000bac <LoopFillZerobss>

08000ba6 <FillZerobss>:
 8000ba6:	2300      	movs	r3, #0
 8000ba8:	f842 3b04 	str.w	r3, [r2], #4

08000bac <LoopFillZerobss>:
 8000bac:	4b08      	ldr	r3, [pc, #32]	; (8000bd0 <LoopFillZerobss+0x24>)
 8000bae:	429a      	cmp	r2, r3
 8000bb0:	d3f9      	bcc.n	8000ba6 <FillZerobss>
 8000bb2:	f7ff ffb7 	bl	8000b24 <SystemInit>
 8000bb6:	f001 f9f5 	bl	8001fa4 <__libc_init_array>
 8000bba:	f7ff fcdb 	bl	8000574 <main>
 8000bbe:	4770      	bx	lr
 8000bc0:	080028f4 	.word	0x080028f4
 8000bc4:	20000000 	.word	0x20000000
 8000bc8:	20000070 	.word	0x20000070
 8000bcc:	20000070 	.word	0x20000070
 8000bd0:	200002b4 	.word	0x200002b4

08000bd4 <ADC1_2_IRQHandler>:
 8000bd4:	e7fe      	b.n	8000bd4 <ADC1_2_IRQHandler>
	...

08000bd8 <HAL_Init>:
 8000bd8:	b580      	push	{r7, lr}
 8000bda:	af00      	add	r7, sp, #0
 8000bdc:	4b08      	ldr	r3, [pc, #32]	; (8000c00 <HAL_Init+0x28>)
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	4a07      	ldr	r2, [pc, #28]	; (8000c00 <HAL_Init+0x28>)
 8000be2:	f043 0310 	orr.w	r3, r3, #16
 8000be6:	6013      	str	r3, [r2, #0]
 8000be8:	2003      	movs	r0, #3
 8000bea:	f000 f929 	bl	8000e40 <HAL_NVIC_SetPriorityGrouping>
 8000bee:	2000      	movs	r0, #0
 8000bf0:	f000 f808 	bl	8000c04 <HAL_InitTick>
 8000bf4:	f7ff ff0e 	bl	8000a14 <HAL_MspInit>
 8000bf8:	2300      	movs	r3, #0
 8000bfa:	4618      	mov	r0, r3
 8000bfc:	bd80      	pop	{r7, pc}
 8000bfe:	bf00      	nop
 8000c00:	40022000 	.word	0x40022000

08000c04 <HAL_InitTick>:
 8000c04:	b580      	push	{r7, lr}
 8000c06:	b082      	sub	sp, #8
 8000c08:	af00      	add	r7, sp, #0
 8000c0a:	6078      	str	r0, [r7, #4]
 8000c0c:	4b12      	ldr	r3, [pc, #72]	; (8000c58 <HAL_InitTick+0x54>)
 8000c0e:	681a      	ldr	r2, [r3, #0]
 8000c10:	4b12      	ldr	r3, [pc, #72]	; (8000c5c <HAL_InitTick+0x58>)
 8000c12:	781b      	ldrb	r3, [r3, #0]
 8000c14:	4619      	mov	r1, r3
 8000c16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000c1a:	fbb3 f3f1 	udiv	r3, r3, r1
 8000c1e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c22:	4618      	mov	r0, r3
 8000c24:	f000 f933 	bl	8000e8e <HAL_SYSTICK_Config>
 8000c28:	4603      	mov	r3, r0
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d001      	beq.n	8000c32 <HAL_InitTick+0x2e>
 8000c2e:	2301      	movs	r3, #1
 8000c30:	e00e      	b.n	8000c50 <HAL_InitTick+0x4c>
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	2b0f      	cmp	r3, #15
 8000c36:	d80a      	bhi.n	8000c4e <HAL_InitTick+0x4a>
 8000c38:	2200      	movs	r2, #0
 8000c3a:	6879      	ldr	r1, [r7, #4]
 8000c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c40:	f000 f909 	bl	8000e56 <HAL_NVIC_SetPriority>
 8000c44:	4a06      	ldr	r2, [pc, #24]	; (8000c60 <HAL_InitTick+0x5c>)
 8000c46:	687b      	ldr	r3, [r7, #4]
 8000c48:	6013      	str	r3, [r2, #0]
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	e000      	b.n	8000c50 <HAL_InitTick+0x4c>
 8000c4e:	2301      	movs	r3, #1
 8000c50:	4618      	mov	r0, r3
 8000c52:	3708      	adds	r7, #8
 8000c54:	46bd      	mov	sp, r7
 8000c56:	bd80      	pop	{r7, pc}
 8000c58:	20000000 	.word	0x20000000
 8000c5c:	20000008 	.word	0x20000008
 8000c60:	20000004 	.word	0x20000004

08000c64 <HAL_IncTick>:
 8000c64:	b480      	push	{r7}
 8000c66:	af00      	add	r7, sp, #0
 8000c68:	4b05      	ldr	r3, [pc, #20]	; (8000c80 <HAL_IncTick+0x1c>)
 8000c6a:	781b      	ldrb	r3, [r3, #0]
 8000c6c:	461a      	mov	r2, r3
 8000c6e:	4b05      	ldr	r3, [pc, #20]	; (8000c84 <HAL_IncTick+0x20>)
 8000c70:	681b      	ldr	r3, [r3, #0]
 8000c72:	4413      	add	r3, r2
 8000c74:	4a03      	ldr	r2, [pc, #12]	; (8000c84 <HAL_IncTick+0x20>)
 8000c76:	6013      	str	r3, [r2, #0]
 8000c78:	bf00      	nop
 8000c7a:	46bd      	mov	sp, r7
 8000c7c:	bc80      	pop	{r7}
 8000c7e:	4770      	bx	lr
 8000c80:	20000008 	.word	0x20000008
 8000c84:	200002ac 	.word	0x200002ac

08000c88 <HAL_GetTick>:
 8000c88:	b480      	push	{r7}
 8000c8a:	af00      	add	r7, sp, #0
 8000c8c:	4b02      	ldr	r3, [pc, #8]	; (8000c98 <HAL_GetTick+0x10>)
 8000c8e:	681b      	ldr	r3, [r3, #0]
 8000c90:	4618      	mov	r0, r3
 8000c92:	46bd      	mov	sp, r7
 8000c94:	bc80      	pop	{r7}
 8000c96:	4770      	bx	lr
 8000c98:	200002ac 	.word	0x200002ac

08000c9c <HAL_Delay>:
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	b084      	sub	sp, #16
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	6078      	str	r0, [r7, #4]
 8000ca4:	f7ff fff0 	bl	8000c88 <HAL_GetTick>
 8000ca8:	60b8      	str	r0, [r7, #8]
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	60fb      	str	r3, [r7, #12]
 8000cae:	68fb      	ldr	r3, [r7, #12]
 8000cb0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000cb4:	d005      	beq.n	8000cc2 <HAL_Delay+0x26>
 8000cb6:	4b09      	ldr	r3, [pc, #36]	; (8000cdc <HAL_Delay+0x40>)
 8000cb8:	781b      	ldrb	r3, [r3, #0]
 8000cba:	461a      	mov	r2, r3
 8000cbc:	68fb      	ldr	r3, [r7, #12]
 8000cbe:	4413      	add	r3, r2
 8000cc0:	60fb      	str	r3, [r7, #12]
 8000cc2:	bf00      	nop
 8000cc4:	f7ff ffe0 	bl	8000c88 <HAL_GetTick>
 8000cc8:	4602      	mov	r2, r0
 8000cca:	68bb      	ldr	r3, [r7, #8]
 8000ccc:	1ad3      	subs	r3, r2, r3
 8000cce:	68fa      	ldr	r2, [r7, #12]
 8000cd0:	429a      	cmp	r2, r3
 8000cd2:	d8f7      	bhi.n	8000cc4 <HAL_Delay+0x28>
 8000cd4:	bf00      	nop
 8000cd6:	3710      	adds	r7, #16
 8000cd8:	46bd      	mov	sp, r7
 8000cda:	bd80      	pop	{r7, pc}
 8000cdc:	20000008 	.word	0x20000008

08000ce0 <__NVIC_SetPriorityGrouping>:
 8000ce0:	b480      	push	{r7}
 8000ce2:	b085      	sub	sp, #20
 8000ce4:	af00      	add	r7, sp, #0
 8000ce6:	6078      	str	r0, [r7, #4]
 8000ce8:	687b      	ldr	r3, [r7, #4]
 8000cea:	f003 0307 	and.w	r3, r3, #7
 8000cee:	60fb      	str	r3, [r7, #12]
 8000cf0:	4b0c      	ldr	r3, [pc, #48]	; (8000d24 <__NVIC_SetPriorityGrouping+0x44>)
 8000cf2:	68db      	ldr	r3, [r3, #12]
 8000cf4:	60bb      	str	r3, [r7, #8]
 8000cf6:	68ba      	ldr	r2, [r7, #8]
 8000cf8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000cfc:	4013      	ands	r3, r2
 8000cfe:	60bb      	str	r3, [r7, #8]
 8000d00:	68fb      	ldr	r3, [r7, #12]
 8000d02:	021a      	lsls	r2, r3, #8
 8000d04:	68bb      	ldr	r3, [r7, #8]
 8000d06:	4313      	orrs	r3, r2
 8000d08:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000d0c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000d10:	60bb      	str	r3, [r7, #8]
 8000d12:	4a04      	ldr	r2, [pc, #16]	; (8000d24 <__NVIC_SetPriorityGrouping+0x44>)
 8000d14:	68bb      	ldr	r3, [r7, #8]
 8000d16:	60d3      	str	r3, [r2, #12]
 8000d18:	bf00      	nop
 8000d1a:	3714      	adds	r7, #20
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	bc80      	pop	{r7}
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	e000ed00 	.word	0xe000ed00

08000d28 <__NVIC_GetPriorityGrouping>:
 8000d28:	b480      	push	{r7}
 8000d2a:	af00      	add	r7, sp, #0
 8000d2c:	4b04      	ldr	r3, [pc, #16]	; (8000d40 <__NVIC_GetPriorityGrouping+0x18>)
 8000d2e:	68db      	ldr	r3, [r3, #12]
 8000d30:	0a1b      	lsrs	r3, r3, #8
 8000d32:	f003 0307 	and.w	r3, r3, #7
 8000d36:	4618      	mov	r0, r3
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bc80      	pop	{r7}
 8000d3c:	4770      	bx	lr
 8000d3e:	bf00      	nop
 8000d40:	e000ed00 	.word	0xe000ed00

08000d44 <__NVIC_SetPriority>:
 8000d44:	b480      	push	{r7}
 8000d46:	b083      	sub	sp, #12
 8000d48:	af00      	add	r7, sp, #0
 8000d4a:	4603      	mov	r3, r0
 8000d4c:	6039      	str	r1, [r7, #0]
 8000d4e:	71fb      	strb	r3, [r7, #7]
 8000d50:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d54:	2b00      	cmp	r3, #0
 8000d56:	db0a      	blt.n	8000d6e <__NVIC_SetPriority+0x2a>
 8000d58:	683b      	ldr	r3, [r7, #0]
 8000d5a:	b2da      	uxtb	r2, r3
 8000d5c:	490c      	ldr	r1, [pc, #48]	; (8000d90 <__NVIC_SetPriority+0x4c>)
 8000d5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d62:	0112      	lsls	r2, r2, #4
 8000d64:	b2d2      	uxtb	r2, r2
 8000d66:	440b      	add	r3, r1
 8000d68:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000d6c:	e00a      	b.n	8000d84 <__NVIC_SetPriority+0x40>
 8000d6e:	683b      	ldr	r3, [r7, #0]
 8000d70:	b2da      	uxtb	r2, r3
 8000d72:	4908      	ldr	r1, [pc, #32]	; (8000d94 <__NVIC_SetPriority+0x50>)
 8000d74:	79fb      	ldrb	r3, [r7, #7]
 8000d76:	f003 030f 	and.w	r3, r3, #15
 8000d7a:	3b04      	subs	r3, #4
 8000d7c:	0112      	lsls	r2, r2, #4
 8000d7e:	b2d2      	uxtb	r2, r2
 8000d80:	440b      	add	r3, r1
 8000d82:	761a      	strb	r2, [r3, #24]
 8000d84:	bf00      	nop
 8000d86:	370c      	adds	r7, #12
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	bc80      	pop	{r7}
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	e000e100 	.word	0xe000e100
 8000d94:	e000ed00 	.word	0xe000ed00

08000d98 <NVIC_EncodePriority>:
 8000d98:	b480      	push	{r7}
 8000d9a:	b089      	sub	sp, #36	; 0x24
 8000d9c:	af00      	add	r7, sp, #0
 8000d9e:	60f8      	str	r0, [r7, #12]
 8000da0:	60b9      	str	r1, [r7, #8]
 8000da2:	607a      	str	r2, [r7, #4]
 8000da4:	68fb      	ldr	r3, [r7, #12]
 8000da6:	f003 0307 	and.w	r3, r3, #7
 8000daa:	61fb      	str	r3, [r7, #28]
 8000dac:	69fb      	ldr	r3, [r7, #28]
 8000dae:	f1c3 0307 	rsb	r3, r3, #7
 8000db2:	2b04      	cmp	r3, #4
 8000db4:	bf28      	it	cs
 8000db6:	2304      	movcs	r3, #4
 8000db8:	61bb      	str	r3, [r7, #24]
 8000dba:	69fb      	ldr	r3, [r7, #28]
 8000dbc:	3304      	adds	r3, #4
 8000dbe:	2b06      	cmp	r3, #6
 8000dc0:	d902      	bls.n	8000dc8 <NVIC_EncodePriority+0x30>
 8000dc2:	69fb      	ldr	r3, [r7, #28]
 8000dc4:	3b03      	subs	r3, #3
 8000dc6:	e000      	b.n	8000dca <NVIC_EncodePriority+0x32>
 8000dc8:	2300      	movs	r3, #0
 8000dca:	617b      	str	r3, [r7, #20]
 8000dcc:	f04f 32ff 	mov.w	r2, #4294967295
 8000dd0:	69bb      	ldr	r3, [r7, #24]
 8000dd2:	fa02 f303 	lsl.w	r3, r2, r3
 8000dd6:	43da      	mvns	r2, r3
 8000dd8:	68bb      	ldr	r3, [r7, #8]
 8000dda:	401a      	ands	r2, r3
 8000ddc:	697b      	ldr	r3, [r7, #20]
 8000dde:	409a      	lsls	r2, r3
 8000de0:	f04f 31ff 	mov.w	r1, #4294967295
 8000de4:	697b      	ldr	r3, [r7, #20]
 8000de6:	fa01 f303 	lsl.w	r3, r1, r3
 8000dea:	43d9      	mvns	r1, r3
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	400b      	ands	r3, r1
 8000df0:	4313      	orrs	r3, r2
 8000df2:	4618      	mov	r0, r3
 8000df4:	3724      	adds	r7, #36	; 0x24
 8000df6:	46bd      	mov	sp, r7
 8000df8:	bc80      	pop	{r7}
 8000dfa:	4770      	bx	lr

08000dfc <SysTick_Config>:
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b082      	sub	sp, #8
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	3b01      	subs	r3, #1
 8000e08:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000e0c:	d301      	bcc.n	8000e12 <SysTick_Config+0x16>
 8000e0e:	2301      	movs	r3, #1
 8000e10:	e00f      	b.n	8000e32 <SysTick_Config+0x36>
 8000e12:	4a0a      	ldr	r2, [pc, #40]	; (8000e3c <SysTick_Config+0x40>)
 8000e14:	687b      	ldr	r3, [r7, #4]
 8000e16:	3b01      	subs	r3, #1
 8000e18:	6053      	str	r3, [r2, #4]
 8000e1a:	210f      	movs	r1, #15
 8000e1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000e20:	f7ff ff90 	bl	8000d44 <__NVIC_SetPriority>
 8000e24:	4b05      	ldr	r3, [pc, #20]	; (8000e3c <SysTick_Config+0x40>)
 8000e26:	2200      	movs	r2, #0
 8000e28:	609a      	str	r2, [r3, #8]
 8000e2a:	4b04      	ldr	r3, [pc, #16]	; (8000e3c <SysTick_Config+0x40>)
 8000e2c:	2207      	movs	r2, #7
 8000e2e:	601a      	str	r2, [r3, #0]
 8000e30:	2300      	movs	r3, #0
 8000e32:	4618      	mov	r0, r3
 8000e34:	3708      	adds	r7, #8
 8000e36:	46bd      	mov	sp, r7
 8000e38:	bd80      	pop	{r7, pc}
 8000e3a:	bf00      	nop
 8000e3c:	e000e010 	.word	0xe000e010

08000e40 <HAL_NVIC_SetPriorityGrouping>:
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b082      	sub	sp, #8
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	6078      	str	r0, [r7, #4]
 8000e48:	6878      	ldr	r0, [r7, #4]
 8000e4a:	f7ff ff49 	bl	8000ce0 <__NVIC_SetPriorityGrouping>
 8000e4e:	bf00      	nop
 8000e50:	3708      	adds	r7, #8
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}

08000e56 <HAL_NVIC_SetPriority>:
 8000e56:	b580      	push	{r7, lr}
 8000e58:	b086      	sub	sp, #24
 8000e5a:	af00      	add	r7, sp, #0
 8000e5c:	4603      	mov	r3, r0
 8000e5e:	60b9      	str	r1, [r7, #8]
 8000e60:	607a      	str	r2, [r7, #4]
 8000e62:	73fb      	strb	r3, [r7, #15]
 8000e64:	2300      	movs	r3, #0
 8000e66:	617b      	str	r3, [r7, #20]
 8000e68:	f7ff ff5e 	bl	8000d28 <__NVIC_GetPriorityGrouping>
 8000e6c:	6178      	str	r0, [r7, #20]
 8000e6e:	687a      	ldr	r2, [r7, #4]
 8000e70:	68b9      	ldr	r1, [r7, #8]
 8000e72:	6978      	ldr	r0, [r7, #20]
 8000e74:	f7ff ff90 	bl	8000d98 <NVIC_EncodePriority>
 8000e78:	4602      	mov	r2, r0
 8000e7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e7e:	4611      	mov	r1, r2
 8000e80:	4618      	mov	r0, r3
 8000e82:	f7ff ff5f 	bl	8000d44 <__NVIC_SetPriority>
 8000e86:	bf00      	nop
 8000e88:	3718      	adds	r7, #24
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bd80      	pop	{r7, pc}

08000e8e <HAL_SYSTICK_Config>:
 8000e8e:	b580      	push	{r7, lr}
 8000e90:	b082      	sub	sp, #8
 8000e92:	af00      	add	r7, sp, #0
 8000e94:	6078      	str	r0, [r7, #4]
 8000e96:	6878      	ldr	r0, [r7, #4]
 8000e98:	f7ff ffb0 	bl	8000dfc <SysTick_Config>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	3708      	adds	r7, #8
 8000ea2:	46bd      	mov	sp, r7
 8000ea4:	bd80      	pop	{r7, pc}
	...

08000ea8 <HAL_GPIO_Init>:
 8000ea8:	b480      	push	{r7}
 8000eaa:	b08b      	sub	sp, #44	; 0x2c
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
 8000eb0:	6039      	str	r1, [r7, #0]
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	627b      	str	r3, [r7, #36]	; 0x24
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	623b      	str	r3, [r7, #32]
 8000eba:	e127      	b.n	800110c <HAL_GPIO_Init+0x264>
 8000ebc:	2201      	movs	r2, #1
 8000ebe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ec0:	fa02 f303 	lsl.w	r3, r2, r3
 8000ec4:	61fb      	str	r3, [r7, #28]
 8000ec6:	683b      	ldr	r3, [r7, #0]
 8000ec8:	681b      	ldr	r3, [r3, #0]
 8000eca:	69fa      	ldr	r2, [r7, #28]
 8000ecc:	4013      	ands	r3, r2
 8000ece:	61bb      	str	r3, [r7, #24]
 8000ed0:	69ba      	ldr	r2, [r7, #24]
 8000ed2:	69fb      	ldr	r3, [r7, #28]
 8000ed4:	429a      	cmp	r2, r3
 8000ed6:	f040 8116 	bne.w	8001106 <HAL_GPIO_Init+0x25e>
 8000eda:	683b      	ldr	r3, [r7, #0]
 8000edc:	685b      	ldr	r3, [r3, #4]
 8000ede:	2b12      	cmp	r3, #18
 8000ee0:	d034      	beq.n	8000f4c <HAL_GPIO_Init+0xa4>
 8000ee2:	2b12      	cmp	r3, #18
 8000ee4:	d80d      	bhi.n	8000f02 <HAL_GPIO_Init+0x5a>
 8000ee6:	2b02      	cmp	r3, #2
 8000ee8:	d02b      	beq.n	8000f42 <HAL_GPIO_Init+0x9a>
 8000eea:	2b02      	cmp	r3, #2
 8000eec:	d804      	bhi.n	8000ef8 <HAL_GPIO_Init+0x50>
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d031      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000ef2:	2b01      	cmp	r3, #1
 8000ef4:	d01c      	beq.n	8000f30 <HAL_GPIO_Init+0x88>
 8000ef6:	e048      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000ef8:	2b03      	cmp	r3, #3
 8000efa:	d043      	beq.n	8000f84 <HAL_GPIO_Init+0xdc>
 8000efc:	2b11      	cmp	r3, #17
 8000efe:	d01b      	beq.n	8000f38 <HAL_GPIO_Init+0x90>
 8000f00:	e043      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f02:	4a89      	ldr	r2, [pc, #548]	; (8001128 <HAL_GPIO_Init+0x280>)
 8000f04:	4293      	cmp	r3, r2
 8000f06:	d026      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f08:	4a87      	ldr	r2, [pc, #540]	; (8001128 <HAL_GPIO_Init+0x280>)
 8000f0a:	4293      	cmp	r3, r2
 8000f0c:	d806      	bhi.n	8000f1c <HAL_GPIO_Init+0x74>
 8000f0e:	4a87      	ldr	r2, [pc, #540]	; (800112c <HAL_GPIO_Init+0x284>)
 8000f10:	4293      	cmp	r3, r2
 8000f12:	d020      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f14:	4a86      	ldr	r2, [pc, #536]	; (8001130 <HAL_GPIO_Init+0x288>)
 8000f16:	4293      	cmp	r3, r2
 8000f18:	d01d      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f1a:	e036      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f1c:	4a85      	ldr	r2, [pc, #532]	; (8001134 <HAL_GPIO_Init+0x28c>)
 8000f1e:	4293      	cmp	r3, r2
 8000f20:	d019      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f22:	4a85      	ldr	r2, [pc, #532]	; (8001138 <HAL_GPIO_Init+0x290>)
 8000f24:	4293      	cmp	r3, r2
 8000f26:	d016      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f28:	4a84      	ldr	r2, [pc, #528]	; (800113c <HAL_GPIO_Init+0x294>)
 8000f2a:	4293      	cmp	r3, r2
 8000f2c:	d013      	beq.n	8000f56 <HAL_GPIO_Init+0xae>
 8000f2e:	e02c      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f30:	683b      	ldr	r3, [r7, #0]
 8000f32:	68db      	ldr	r3, [r3, #12]
 8000f34:	623b      	str	r3, [r7, #32]
 8000f36:	e028      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f38:	683b      	ldr	r3, [r7, #0]
 8000f3a:	68db      	ldr	r3, [r3, #12]
 8000f3c:	3304      	adds	r3, #4
 8000f3e:	623b      	str	r3, [r7, #32]
 8000f40:	e023      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f42:	683b      	ldr	r3, [r7, #0]
 8000f44:	68db      	ldr	r3, [r3, #12]
 8000f46:	3308      	adds	r3, #8
 8000f48:	623b      	str	r3, [r7, #32]
 8000f4a:	e01e      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f4c:	683b      	ldr	r3, [r7, #0]
 8000f4e:	68db      	ldr	r3, [r3, #12]
 8000f50:	330c      	adds	r3, #12
 8000f52:	623b      	str	r3, [r7, #32]
 8000f54:	e019      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f56:	683b      	ldr	r3, [r7, #0]
 8000f58:	689b      	ldr	r3, [r3, #8]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d102      	bne.n	8000f64 <HAL_GPIO_Init+0xbc>
 8000f5e:	2304      	movs	r3, #4
 8000f60:	623b      	str	r3, [r7, #32]
 8000f62:	e012      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f64:	683b      	ldr	r3, [r7, #0]
 8000f66:	689b      	ldr	r3, [r3, #8]
 8000f68:	2b01      	cmp	r3, #1
 8000f6a:	d105      	bne.n	8000f78 <HAL_GPIO_Init+0xd0>
 8000f6c:	2308      	movs	r3, #8
 8000f6e:	623b      	str	r3, [r7, #32]
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	69fa      	ldr	r2, [r7, #28]
 8000f74:	611a      	str	r2, [r3, #16]
 8000f76:	e008      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f78:	2308      	movs	r3, #8
 8000f7a:	623b      	str	r3, [r7, #32]
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	69fa      	ldr	r2, [r7, #28]
 8000f80:	615a      	str	r2, [r3, #20]
 8000f82:	e002      	b.n	8000f8a <HAL_GPIO_Init+0xe2>
 8000f84:	2300      	movs	r3, #0
 8000f86:	623b      	str	r3, [r7, #32]
 8000f88:	bf00      	nop
 8000f8a:	69bb      	ldr	r3, [r7, #24]
 8000f8c:	2bff      	cmp	r3, #255	; 0xff
 8000f8e:	d801      	bhi.n	8000f94 <HAL_GPIO_Init+0xec>
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	e001      	b.n	8000f98 <HAL_GPIO_Init+0xf0>
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	3304      	adds	r3, #4
 8000f98:	617b      	str	r3, [r7, #20]
 8000f9a:	69bb      	ldr	r3, [r7, #24]
 8000f9c:	2bff      	cmp	r3, #255	; 0xff
 8000f9e:	d802      	bhi.n	8000fa6 <HAL_GPIO_Init+0xfe>
 8000fa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fa2:	009b      	lsls	r3, r3, #2
 8000fa4:	e002      	b.n	8000fac <HAL_GPIO_Init+0x104>
 8000fa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000fa8:	3b08      	subs	r3, #8
 8000faa:	009b      	lsls	r3, r3, #2
 8000fac:	613b      	str	r3, [r7, #16]
 8000fae:	697b      	ldr	r3, [r7, #20]
 8000fb0:	681a      	ldr	r2, [r3, #0]
 8000fb2:	210f      	movs	r1, #15
 8000fb4:	693b      	ldr	r3, [r7, #16]
 8000fb6:	fa01 f303 	lsl.w	r3, r1, r3
 8000fba:	43db      	mvns	r3, r3
 8000fbc:	401a      	ands	r2, r3
 8000fbe:	6a39      	ldr	r1, [r7, #32]
 8000fc0:	693b      	ldr	r3, [r7, #16]
 8000fc2:	fa01 f303 	lsl.w	r3, r1, r3
 8000fc6:	431a      	orrs	r2, r3
 8000fc8:	697b      	ldr	r3, [r7, #20]
 8000fca:	601a      	str	r2, [r3, #0]
 8000fcc:	683b      	ldr	r3, [r7, #0]
 8000fce:	685b      	ldr	r3, [r3, #4]
 8000fd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	f000 8096 	beq.w	8001106 <HAL_GPIO_Init+0x25e>
 8000fda:	4b59      	ldr	r3, [pc, #356]	; (8001140 <HAL_GPIO_Init+0x298>)
 8000fdc:	699b      	ldr	r3, [r3, #24]
 8000fde:	4a58      	ldr	r2, [pc, #352]	; (8001140 <HAL_GPIO_Init+0x298>)
 8000fe0:	f043 0301 	orr.w	r3, r3, #1
 8000fe4:	6193      	str	r3, [r2, #24]
 8000fe6:	4b56      	ldr	r3, [pc, #344]	; (8001140 <HAL_GPIO_Init+0x298>)
 8000fe8:	699b      	ldr	r3, [r3, #24]
 8000fea:	f003 0301 	and.w	r3, r3, #1
 8000fee:	60bb      	str	r3, [r7, #8]
 8000ff0:	68bb      	ldr	r3, [r7, #8]
 8000ff2:	4a54      	ldr	r2, [pc, #336]	; (8001144 <HAL_GPIO_Init+0x29c>)
 8000ff4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ff6:	089b      	lsrs	r3, r3, #2
 8000ff8:	3302      	adds	r3, #2
 8000ffa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000ffe:	60fb      	str	r3, [r7, #12]
 8001000:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001002:	f003 0303 	and.w	r3, r3, #3
 8001006:	009b      	lsls	r3, r3, #2
 8001008:	220f      	movs	r2, #15
 800100a:	fa02 f303 	lsl.w	r3, r2, r3
 800100e:	43db      	mvns	r3, r3
 8001010:	68fa      	ldr	r2, [r7, #12]
 8001012:	4013      	ands	r3, r2
 8001014:	60fb      	str	r3, [r7, #12]
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	4a4b      	ldr	r2, [pc, #300]	; (8001148 <HAL_GPIO_Init+0x2a0>)
 800101a:	4293      	cmp	r3, r2
 800101c:	d013      	beq.n	8001046 <HAL_GPIO_Init+0x19e>
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	4a4a      	ldr	r2, [pc, #296]	; (800114c <HAL_GPIO_Init+0x2a4>)
 8001022:	4293      	cmp	r3, r2
 8001024:	d00d      	beq.n	8001042 <HAL_GPIO_Init+0x19a>
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	4a49      	ldr	r2, [pc, #292]	; (8001150 <HAL_GPIO_Init+0x2a8>)
 800102a:	4293      	cmp	r3, r2
 800102c:	d007      	beq.n	800103e <HAL_GPIO_Init+0x196>
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	4a48      	ldr	r2, [pc, #288]	; (8001154 <HAL_GPIO_Init+0x2ac>)
 8001032:	4293      	cmp	r3, r2
 8001034:	d101      	bne.n	800103a <HAL_GPIO_Init+0x192>
 8001036:	2303      	movs	r3, #3
 8001038:	e006      	b.n	8001048 <HAL_GPIO_Init+0x1a0>
 800103a:	2304      	movs	r3, #4
 800103c:	e004      	b.n	8001048 <HAL_GPIO_Init+0x1a0>
 800103e:	2302      	movs	r3, #2
 8001040:	e002      	b.n	8001048 <HAL_GPIO_Init+0x1a0>
 8001042:	2301      	movs	r3, #1
 8001044:	e000      	b.n	8001048 <HAL_GPIO_Init+0x1a0>
 8001046:	2300      	movs	r3, #0
 8001048:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800104a:	f002 0203 	and.w	r2, r2, #3
 800104e:	0092      	lsls	r2, r2, #2
 8001050:	4093      	lsls	r3, r2
 8001052:	68fa      	ldr	r2, [r7, #12]
 8001054:	4313      	orrs	r3, r2
 8001056:	60fb      	str	r3, [r7, #12]
 8001058:	493a      	ldr	r1, [pc, #232]	; (8001144 <HAL_GPIO_Init+0x29c>)
 800105a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800105c:	089b      	lsrs	r3, r3, #2
 800105e:	3302      	adds	r3, #2
 8001060:	68fa      	ldr	r2, [r7, #12]
 8001062:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001066:	683b      	ldr	r3, [r7, #0]
 8001068:	685b      	ldr	r3, [r3, #4]
 800106a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800106e:	2b00      	cmp	r3, #0
 8001070:	d006      	beq.n	8001080 <HAL_GPIO_Init+0x1d8>
 8001072:	4b39      	ldr	r3, [pc, #228]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 8001074:	681a      	ldr	r2, [r3, #0]
 8001076:	4938      	ldr	r1, [pc, #224]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 8001078:	69bb      	ldr	r3, [r7, #24]
 800107a:	4313      	orrs	r3, r2
 800107c:	600b      	str	r3, [r1, #0]
 800107e:	e006      	b.n	800108e <HAL_GPIO_Init+0x1e6>
 8001080:	4b35      	ldr	r3, [pc, #212]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 8001082:	681a      	ldr	r2, [r3, #0]
 8001084:	69bb      	ldr	r3, [r7, #24]
 8001086:	43db      	mvns	r3, r3
 8001088:	4933      	ldr	r1, [pc, #204]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 800108a:	4013      	ands	r3, r2
 800108c:	600b      	str	r3, [r1, #0]
 800108e:	683b      	ldr	r3, [r7, #0]
 8001090:	685b      	ldr	r3, [r3, #4]
 8001092:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001096:	2b00      	cmp	r3, #0
 8001098:	d006      	beq.n	80010a8 <HAL_GPIO_Init+0x200>
 800109a:	4b2f      	ldr	r3, [pc, #188]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 800109c:	685a      	ldr	r2, [r3, #4]
 800109e:	492e      	ldr	r1, [pc, #184]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010a0:	69bb      	ldr	r3, [r7, #24]
 80010a2:	4313      	orrs	r3, r2
 80010a4:	604b      	str	r3, [r1, #4]
 80010a6:	e006      	b.n	80010b6 <HAL_GPIO_Init+0x20e>
 80010a8:	4b2b      	ldr	r3, [pc, #172]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010aa:	685a      	ldr	r2, [r3, #4]
 80010ac:	69bb      	ldr	r3, [r7, #24]
 80010ae:	43db      	mvns	r3, r3
 80010b0:	4929      	ldr	r1, [pc, #164]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010b2:	4013      	ands	r3, r2
 80010b4:	604b      	str	r3, [r1, #4]
 80010b6:	683b      	ldr	r3, [r7, #0]
 80010b8:	685b      	ldr	r3, [r3, #4]
 80010ba:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d006      	beq.n	80010d0 <HAL_GPIO_Init+0x228>
 80010c2:	4b25      	ldr	r3, [pc, #148]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010c4:	689a      	ldr	r2, [r3, #8]
 80010c6:	4924      	ldr	r1, [pc, #144]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010c8:	69bb      	ldr	r3, [r7, #24]
 80010ca:	4313      	orrs	r3, r2
 80010cc:	608b      	str	r3, [r1, #8]
 80010ce:	e006      	b.n	80010de <HAL_GPIO_Init+0x236>
 80010d0:	4b21      	ldr	r3, [pc, #132]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010d2:	689a      	ldr	r2, [r3, #8]
 80010d4:	69bb      	ldr	r3, [r7, #24]
 80010d6:	43db      	mvns	r3, r3
 80010d8:	491f      	ldr	r1, [pc, #124]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010da:	4013      	ands	r3, r2
 80010dc:	608b      	str	r3, [r1, #8]
 80010de:	683b      	ldr	r3, [r7, #0]
 80010e0:	685b      	ldr	r3, [r3, #4]
 80010e2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d006      	beq.n	80010f8 <HAL_GPIO_Init+0x250>
 80010ea:	4b1b      	ldr	r3, [pc, #108]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010ec:	68da      	ldr	r2, [r3, #12]
 80010ee:	491a      	ldr	r1, [pc, #104]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010f0:	69bb      	ldr	r3, [r7, #24]
 80010f2:	4313      	orrs	r3, r2
 80010f4:	60cb      	str	r3, [r1, #12]
 80010f6:	e006      	b.n	8001106 <HAL_GPIO_Init+0x25e>
 80010f8:	4b17      	ldr	r3, [pc, #92]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 80010fa:	68da      	ldr	r2, [r3, #12]
 80010fc:	69bb      	ldr	r3, [r7, #24]
 80010fe:	43db      	mvns	r3, r3
 8001100:	4915      	ldr	r1, [pc, #84]	; (8001158 <HAL_GPIO_Init+0x2b0>)
 8001102:	4013      	ands	r3, r2
 8001104:	60cb      	str	r3, [r1, #12]
 8001106:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001108:	3301      	adds	r3, #1
 800110a:	627b      	str	r3, [r7, #36]	; 0x24
 800110c:	683b      	ldr	r3, [r7, #0]
 800110e:	681a      	ldr	r2, [r3, #0]
 8001110:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001112:	fa22 f303 	lsr.w	r3, r2, r3
 8001116:	2b00      	cmp	r3, #0
 8001118:	f47f aed0 	bne.w	8000ebc <HAL_GPIO_Init+0x14>
 800111c:	bf00      	nop
 800111e:	372c      	adds	r7, #44	; 0x2c
 8001120:	46bd      	mov	sp, r7
 8001122:	bc80      	pop	{r7}
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop
 8001128:	10210000 	.word	0x10210000
 800112c:	10110000 	.word	0x10110000
 8001130:	10120000 	.word	0x10120000
 8001134:	10310000 	.word	0x10310000
 8001138:	10320000 	.word	0x10320000
 800113c:	10220000 	.word	0x10220000
 8001140:	40021000 	.word	0x40021000
 8001144:	40010000 	.word	0x40010000
 8001148:	40010800 	.word	0x40010800
 800114c:	40010c00 	.word	0x40010c00
 8001150:	40011000 	.word	0x40011000
 8001154:	40011400 	.word	0x40011400
 8001158:	40010400 	.word	0x40010400

0800115c <HAL_GPIO_WritePin>:
 800115c:	b480      	push	{r7}
 800115e:	b083      	sub	sp, #12
 8001160:	af00      	add	r7, sp, #0
 8001162:	6078      	str	r0, [r7, #4]
 8001164:	460b      	mov	r3, r1
 8001166:	807b      	strh	r3, [r7, #2]
 8001168:	4613      	mov	r3, r2
 800116a:	707b      	strb	r3, [r7, #1]
 800116c:	787b      	ldrb	r3, [r7, #1]
 800116e:	2b00      	cmp	r3, #0
 8001170:	d003      	beq.n	800117a <HAL_GPIO_WritePin+0x1e>
 8001172:	887a      	ldrh	r2, [r7, #2]
 8001174:	687b      	ldr	r3, [r7, #4]
 8001176:	611a      	str	r2, [r3, #16]
 8001178:	e003      	b.n	8001182 <HAL_GPIO_WritePin+0x26>
 800117a:	887b      	ldrh	r3, [r7, #2]
 800117c:	041a      	lsls	r2, r3, #16
 800117e:	687b      	ldr	r3, [r7, #4]
 8001180:	611a      	str	r2, [r3, #16]
 8001182:	bf00      	nop
 8001184:	370c      	adds	r7, #12
 8001186:	46bd      	mov	sp, r7
 8001188:	bc80      	pop	{r7}
 800118a:	4770      	bx	lr

0800118c <HAL_RCC_OscConfig>:
 800118c:	b580      	push	{r7, lr}
 800118e:	b086      	sub	sp, #24
 8001190:	af00      	add	r7, sp, #0
 8001192:	6078      	str	r0, [r7, #4]
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	2b00      	cmp	r3, #0
 8001198:	d101      	bne.n	800119e <HAL_RCC_OscConfig+0x12>
 800119a:	2301      	movs	r3, #1
 800119c:	e26c      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	f003 0301 	and.w	r3, r3, #1
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	f000 8087 	beq.w	80012ba <HAL_RCC_OscConfig+0x12e>
 80011ac:	4b92      	ldr	r3, [pc, #584]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011ae:	685b      	ldr	r3, [r3, #4]
 80011b0:	f003 030c 	and.w	r3, r3, #12
 80011b4:	2b04      	cmp	r3, #4
 80011b6:	d00c      	beq.n	80011d2 <HAL_RCC_OscConfig+0x46>
 80011b8:	4b8f      	ldr	r3, [pc, #572]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011ba:	685b      	ldr	r3, [r3, #4]
 80011bc:	f003 030c 	and.w	r3, r3, #12
 80011c0:	2b08      	cmp	r3, #8
 80011c2:	d112      	bne.n	80011ea <HAL_RCC_OscConfig+0x5e>
 80011c4:	4b8c      	ldr	r3, [pc, #560]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011c6:	685b      	ldr	r3, [r3, #4]
 80011c8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80011cc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80011d0:	d10b      	bne.n	80011ea <HAL_RCC_OscConfig+0x5e>
 80011d2:	4b89      	ldr	r3, [pc, #548]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d06c      	beq.n	80012b8 <HAL_RCC_OscConfig+0x12c>
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	685b      	ldr	r3, [r3, #4]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d168      	bne.n	80012b8 <HAL_RCC_OscConfig+0x12c>
 80011e6:	2301      	movs	r3, #1
 80011e8:	e246      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80011f2:	d106      	bne.n	8001202 <HAL_RCC_OscConfig+0x76>
 80011f4:	4b80      	ldr	r3, [pc, #512]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4a7f      	ldr	r2, [pc, #508]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80011fa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80011fe:	6013      	str	r3, [r2, #0]
 8001200:	e02e      	b.n	8001260 <HAL_RCC_OscConfig+0xd4>
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	685b      	ldr	r3, [r3, #4]
 8001206:	2b00      	cmp	r3, #0
 8001208:	d10c      	bne.n	8001224 <HAL_RCC_OscConfig+0x98>
 800120a:	4b7b      	ldr	r3, [pc, #492]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800120c:	681b      	ldr	r3, [r3, #0]
 800120e:	4a7a      	ldr	r2, [pc, #488]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001210:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001214:	6013      	str	r3, [r2, #0]
 8001216:	4b78      	ldr	r3, [pc, #480]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	4a77      	ldr	r2, [pc, #476]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800121c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001220:	6013      	str	r3, [r2, #0]
 8001222:	e01d      	b.n	8001260 <HAL_RCC_OscConfig+0xd4>
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	685b      	ldr	r3, [r3, #4]
 8001228:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800122c:	d10c      	bne.n	8001248 <HAL_RCC_OscConfig+0xbc>
 800122e:	4b72      	ldr	r3, [pc, #456]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	4a71      	ldr	r2, [pc, #452]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001234:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001238:	6013      	str	r3, [r2, #0]
 800123a:	4b6f      	ldr	r3, [pc, #444]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	4a6e      	ldr	r2, [pc, #440]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001240:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001244:	6013      	str	r3, [r2, #0]
 8001246:	e00b      	b.n	8001260 <HAL_RCC_OscConfig+0xd4>
 8001248:	4b6b      	ldr	r3, [pc, #428]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	4a6a      	ldr	r2, [pc, #424]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800124e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001252:	6013      	str	r3, [r2, #0]
 8001254:	4b68      	ldr	r3, [pc, #416]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	4a67      	ldr	r2, [pc, #412]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800125a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800125e:	6013      	str	r3, [r2, #0]
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	685b      	ldr	r3, [r3, #4]
 8001264:	2b00      	cmp	r3, #0
 8001266:	d013      	beq.n	8001290 <HAL_RCC_OscConfig+0x104>
 8001268:	f7ff fd0e 	bl	8000c88 <HAL_GetTick>
 800126c:	6138      	str	r0, [r7, #16]
 800126e:	e008      	b.n	8001282 <HAL_RCC_OscConfig+0xf6>
 8001270:	f7ff fd0a 	bl	8000c88 <HAL_GetTick>
 8001274:	4602      	mov	r2, r0
 8001276:	693b      	ldr	r3, [r7, #16]
 8001278:	1ad3      	subs	r3, r2, r3
 800127a:	2b64      	cmp	r3, #100	; 0x64
 800127c:	d901      	bls.n	8001282 <HAL_RCC_OscConfig+0xf6>
 800127e:	2303      	movs	r3, #3
 8001280:	e1fa      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001282:	4b5d      	ldr	r3, [pc, #372]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800128a:	2b00      	cmp	r3, #0
 800128c:	d0f0      	beq.n	8001270 <HAL_RCC_OscConfig+0xe4>
 800128e:	e014      	b.n	80012ba <HAL_RCC_OscConfig+0x12e>
 8001290:	f7ff fcfa 	bl	8000c88 <HAL_GetTick>
 8001294:	6138      	str	r0, [r7, #16]
 8001296:	e008      	b.n	80012aa <HAL_RCC_OscConfig+0x11e>
 8001298:	f7ff fcf6 	bl	8000c88 <HAL_GetTick>
 800129c:	4602      	mov	r2, r0
 800129e:	693b      	ldr	r3, [r7, #16]
 80012a0:	1ad3      	subs	r3, r2, r3
 80012a2:	2b64      	cmp	r3, #100	; 0x64
 80012a4:	d901      	bls.n	80012aa <HAL_RCC_OscConfig+0x11e>
 80012a6:	2303      	movs	r3, #3
 80012a8:	e1e6      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 80012aa:	4b53      	ldr	r3, [pc, #332]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80012ac:	681b      	ldr	r3, [r3, #0]
 80012ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d1f0      	bne.n	8001298 <HAL_RCC_OscConfig+0x10c>
 80012b6:	e000      	b.n	80012ba <HAL_RCC_OscConfig+0x12e>
 80012b8:	bf00      	nop
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	f003 0302 	and.w	r3, r3, #2
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d063      	beq.n	800138e <HAL_RCC_OscConfig+0x202>
 80012c6:	4b4c      	ldr	r3, [pc, #304]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80012c8:	685b      	ldr	r3, [r3, #4]
 80012ca:	f003 030c 	and.w	r3, r3, #12
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d00b      	beq.n	80012ea <HAL_RCC_OscConfig+0x15e>
 80012d2:	4b49      	ldr	r3, [pc, #292]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80012d4:	685b      	ldr	r3, [r3, #4]
 80012d6:	f003 030c 	and.w	r3, r3, #12
 80012da:	2b08      	cmp	r3, #8
 80012dc:	d11c      	bne.n	8001318 <HAL_RCC_OscConfig+0x18c>
 80012de:	4b46      	ldr	r3, [pc, #280]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80012e0:	685b      	ldr	r3, [r3, #4]
 80012e2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d116      	bne.n	8001318 <HAL_RCC_OscConfig+0x18c>
 80012ea:	4b43      	ldr	r3, [pc, #268]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	f003 0302 	and.w	r3, r3, #2
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d005      	beq.n	8001302 <HAL_RCC_OscConfig+0x176>
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	691b      	ldr	r3, [r3, #16]
 80012fa:	2b01      	cmp	r3, #1
 80012fc:	d001      	beq.n	8001302 <HAL_RCC_OscConfig+0x176>
 80012fe:	2301      	movs	r3, #1
 8001300:	e1ba      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001302:	4b3d      	ldr	r3, [pc, #244]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	695b      	ldr	r3, [r3, #20]
 800130e:	00db      	lsls	r3, r3, #3
 8001310:	4939      	ldr	r1, [pc, #228]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001312:	4313      	orrs	r3, r2
 8001314:	600b      	str	r3, [r1, #0]
 8001316:	e03a      	b.n	800138e <HAL_RCC_OscConfig+0x202>
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	691b      	ldr	r3, [r3, #16]
 800131c:	2b00      	cmp	r3, #0
 800131e:	d020      	beq.n	8001362 <HAL_RCC_OscConfig+0x1d6>
 8001320:	4b36      	ldr	r3, [pc, #216]	; (80013fc <HAL_RCC_OscConfig+0x270>)
 8001322:	2201      	movs	r2, #1
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	f7ff fcaf 	bl	8000c88 <HAL_GetTick>
 800132a:	6138      	str	r0, [r7, #16]
 800132c:	e008      	b.n	8001340 <HAL_RCC_OscConfig+0x1b4>
 800132e:	f7ff fcab 	bl	8000c88 <HAL_GetTick>
 8001332:	4602      	mov	r2, r0
 8001334:	693b      	ldr	r3, [r7, #16]
 8001336:	1ad3      	subs	r3, r2, r3
 8001338:	2b02      	cmp	r3, #2
 800133a:	d901      	bls.n	8001340 <HAL_RCC_OscConfig+0x1b4>
 800133c:	2303      	movs	r3, #3
 800133e:	e19b      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001340:	4b2d      	ldr	r3, [pc, #180]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	f003 0302 	and.w	r3, r3, #2
 8001348:	2b00      	cmp	r3, #0
 800134a:	d0f0      	beq.n	800132e <HAL_RCC_OscConfig+0x1a2>
 800134c:	4b2a      	ldr	r3, [pc, #168]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	695b      	ldr	r3, [r3, #20]
 8001358:	00db      	lsls	r3, r3, #3
 800135a:	4927      	ldr	r1, [pc, #156]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 800135c:	4313      	orrs	r3, r2
 800135e:	600b      	str	r3, [r1, #0]
 8001360:	e015      	b.n	800138e <HAL_RCC_OscConfig+0x202>
 8001362:	4b26      	ldr	r3, [pc, #152]	; (80013fc <HAL_RCC_OscConfig+0x270>)
 8001364:	2200      	movs	r2, #0
 8001366:	601a      	str	r2, [r3, #0]
 8001368:	f7ff fc8e 	bl	8000c88 <HAL_GetTick>
 800136c:	6138      	str	r0, [r7, #16]
 800136e:	e008      	b.n	8001382 <HAL_RCC_OscConfig+0x1f6>
 8001370:	f7ff fc8a 	bl	8000c88 <HAL_GetTick>
 8001374:	4602      	mov	r2, r0
 8001376:	693b      	ldr	r3, [r7, #16]
 8001378:	1ad3      	subs	r3, r2, r3
 800137a:	2b02      	cmp	r3, #2
 800137c:	d901      	bls.n	8001382 <HAL_RCC_OscConfig+0x1f6>
 800137e:	2303      	movs	r3, #3
 8001380:	e17a      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001382:	4b1d      	ldr	r3, [pc, #116]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 8001384:	681b      	ldr	r3, [r3, #0]
 8001386:	f003 0302 	and.w	r3, r3, #2
 800138a:	2b00      	cmp	r3, #0
 800138c:	d1f0      	bne.n	8001370 <HAL_RCC_OscConfig+0x1e4>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	681b      	ldr	r3, [r3, #0]
 8001392:	f003 0308 	and.w	r3, r3, #8
 8001396:	2b00      	cmp	r3, #0
 8001398:	d03a      	beq.n	8001410 <HAL_RCC_OscConfig+0x284>
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	699b      	ldr	r3, [r3, #24]
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d019      	beq.n	80013d6 <HAL_RCC_OscConfig+0x24a>
 80013a2:	4b17      	ldr	r3, [pc, #92]	; (8001400 <HAL_RCC_OscConfig+0x274>)
 80013a4:	2201      	movs	r2, #1
 80013a6:	601a      	str	r2, [r3, #0]
 80013a8:	f7ff fc6e 	bl	8000c88 <HAL_GetTick>
 80013ac:	6138      	str	r0, [r7, #16]
 80013ae:	e008      	b.n	80013c2 <HAL_RCC_OscConfig+0x236>
 80013b0:	f7ff fc6a 	bl	8000c88 <HAL_GetTick>
 80013b4:	4602      	mov	r2, r0
 80013b6:	693b      	ldr	r3, [r7, #16]
 80013b8:	1ad3      	subs	r3, r2, r3
 80013ba:	2b02      	cmp	r3, #2
 80013bc:	d901      	bls.n	80013c2 <HAL_RCC_OscConfig+0x236>
 80013be:	2303      	movs	r3, #3
 80013c0:	e15a      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 80013c2:	4b0d      	ldr	r3, [pc, #52]	; (80013f8 <HAL_RCC_OscConfig+0x26c>)
 80013c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013c6:	f003 0302 	and.w	r3, r3, #2
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d0f0      	beq.n	80013b0 <HAL_RCC_OscConfig+0x224>
 80013ce:	2001      	movs	r0, #1
 80013d0:	f000 faa8 	bl	8001924 <RCC_Delay>
 80013d4:	e01c      	b.n	8001410 <HAL_RCC_OscConfig+0x284>
 80013d6:	4b0a      	ldr	r3, [pc, #40]	; (8001400 <HAL_RCC_OscConfig+0x274>)
 80013d8:	2200      	movs	r2, #0
 80013da:	601a      	str	r2, [r3, #0]
 80013dc:	f7ff fc54 	bl	8000c88 <HAL_GetTick>
 80013e0:	6138      	str	r0, [r7, #16]
 80013e2:	e00f      	b.n	8001404 <HAL_RCC_OscConfig+0x278>
 80013e4:	f7ff fc50 	bl	8000c88 <HAL_GetTick>
 80013e8:	4602      	mov	r2, r0
 80013ea:	693b      	ldr	r3, [r7, #16]
 80013ec:	1ad3      	subs	r3, r2, r3
 80013ee:	2b02      	cmp	r3, #2
 80013f0:	d908      	bls.n	8001404 <HAL_RCC_OscConfig+0x278>
 80013f2:	2303      	movs	r3, #3
 80013f4:	e140      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 80013f6:	bf00      	nop
 80013f8:	40021000 	.word	0x40021000
 80013fc:	42420000 	.word	0x42420000
 8001400:	42420480 	.word	0x42420480
 8001404:	4b9e      	ldr	r3, [pc, #632]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001406:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001408:	f003 0302 	and.w	r3, r3, #2
 800140c:	2b00      	cmp	r3, #0
 800140e:	d1e9      	bne.n	80013e4 <HAL_RCC_OscConfig+0x258>
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	f003 0304 	and.w	r3, r3, #4
 8001418:	2b00      	cmp	r3, #0
 800141a:	f000 80a6 	beq.w	800156a <HAL_RCC_OscConfig+0x3de>
 800141e:	2300      	movs	r3, #0
 8001420:	75fb      	strb	r3, [r7, #23]
 8001422:	4b97      	ldr	r3, [pc, #604]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001424:	69db      	ldr	r3, [r3, #28]
 8001426:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800142a:	2b00      	cmp	r3, #0
 800142c:	d10d      	bne.n	800144a <HAL_RCC_OscConfig+0x2be>
 800142e:	4b94      	ldr	r3, [pc, #592]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001430:	69db      	ldr	r3, [r3, #28]
 8001432:	4a93      	ldr	r2, [pc, #588]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001434:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001438:	61d3      	str	r3, [r2, #28]
 800143a:	4b91      	ldr	r3, [pc, #580]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 800143c:	69db      	ldr	r3, [r3, #28]
 800143e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001442:	60bb      	str	r3, [r7, #8]
 8001444:	68bb      	ldr	r3, [r7, #8]
 8001446:	2301      	movs	r3, #1
 8001448:	75fb      	strb	r3, [r7, #23]
 800144a:	4b8e      	ldr	r3, [pc, #568]	; (8001684 <HAL_RCC_OscConfig+0x4f8>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001452:	2b00      	cmp	r3, #0
 8001454:	d118      	bne.n	8001488 <HAL_RCC_OscConfig+0x2fc>
 8001456:	4b8b      	ldr	r3, [pc, #556]	; (8001684 <HAL_RCC_OscConfig+0x4f8>)
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	4a8a      	ldr	r2, [pc, #552]	; (8001684 <HAL_RCC_OscConfig+0x4f8>)
 800145c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001460:	6013      	str	r3, [r2, #0]
 8001462:	f7ff fc11 	bl	8000c88 <HAL_GetTick>
 8001466:	6138      	str	r0, [r7, #16]
 8001468:	e008      	b.n	800147c <HAL_RCC_OscConfig+0x2f0>
 800146a:	f7ff fc0d 	bl	8000c88 <HAL_GetTick>
 800146e:	4602      	mov	r2, r0
 8001470:	693b      	ldr	r3, [r7, #16]
 8001472:	1ad3      	subs	r3, r2, r3
 8001474:	2b64      	cmp	r3, #100	; 0x64
 8001476:	d901      	bls.n	800147c <HAL_RCC_OscConfig+0x2f0>
 8001478:	2303      	movs	r3, #3
 800147a:	e0fd      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 800147c:	4b81      	ldr	r3, [pc, #516]	; (8001684 <HAL_RCC_OscConfig+0x4f8>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001484:	2b00      	cmp	r3, #0
 8001486:	d0f0      	beq.n	800146a <HAL_RCC_OscConfig+0x2de>
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	68db      	ldr	r3, [r3, #12]
 800148c:	2b01      	cmp	r3, #1
 800148e:	d106      	bne.n	800149e <HAL_RCC_OscConfig+0x312>
 8001490:	4b7b      	ldr	r3, [pc, #492]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001492:	6a1b      	ldr	r3, [r3, #32]
 8001494:	4a7a      	ldr	r2, [pc, #488]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001496:	f043 0301 	orr.w	r3, r3, #1
 800149a:	6213      	str	r3, [r2, #32]
 800149c:	e02d      	b.n	80014fa <HAL_RCC_OscConfig+0x36e>
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	68db      	ldr	r3, [r3, #12]
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d10c      	bne.n	80014c0 <HAL_RCC_OscConfig+0x334>
 80014a6:	4b76      	ldr	r3, [pc, #472]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014a8:	6a1b      	ldr	r3, [r3, #32]
 80014aa:	4a75      	ldr	r2, [pc, #468]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014ac:	f023 0301 	bic.w	r3, r3, #1
 80014b0:	6213      	str	r3, [r2, #32]
 80014b2:	4b73      	ldr	r3, [pc, #460]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014b4:	6a1b      	ldr	r3, [r3, #32]
 80014b6:	4a72      	ldr	r2, [pc, #456]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014b8:	f023 0304 	bic.w	r3, r3, #4
 80014bc:	6213      	str	r3, [r2, #32]
 80014be:	e01c      	b.n	80014fa <HAL_RCC_OscConfig+0x36e>
 80014c0:	687b      	ldr	r3, [r7, #4]
 80014c2:	68db      	ldr	r3, [r3, #12]
 80014c4:	2b05      	cmp	r3, #5
 80014c6:	d10c      	bne.n	80014e2 <HAL_RCC_OscConfig+0x356>
 80014c8:	4b6d      	ldr	r3, [pc, #436]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014ca:	6a1b      	ldr	r3, [r3, #32]
 80014cc:	4a6c      	ldr	r2, [pc, #432]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014ce:	f043 0304 	orr.w	r3, r3, #4
 80014d2:	6213      	str	r3, [r2, #32]
 80014d4:	4b6a      	ldr	r3, [pc, #424]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014d6:	6a1b      	ldr	r3, [r3, #32]
 80014d8:	4a69      	ldr	r2, [pc, #420]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014da:	f043 0301 	orr.w	r3, r3, #1
 80014de:	6213      	str	r3, [r2, #32]
 80014e0:	e00b      	b.n	80014fa <HAL_RCC_OscConfig+0x36e>
 80014e2:	4b67      	ldr	r3, [pc, #412]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014e4:	6a1b      	ldr	r3, [r3, #32]
 80014e6:	4a66      	ldr	r2, [pc, #408]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014e8:	f023 0301 	bic.w	r3, r3, #1
 80014ec:	6213      	str	r3, [r2, #32]
 80014ee:	4b64      	ldr	r3, [pc, #400]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014f0:	6a1b      	ldr	r3, [r3, #32]
 80014f2:	4a63      	ldr	r2, [pc, #396]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80014f4:	f023 0304 	bic.w	r3, r3, #4
 80014f8:	6213      	str	r3, [r2, #32]
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	68db      	ldr	r3, [r3, #12]
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d015      	beq.n	800152e <HAL_RCC_OscConfig+0x3a2>
 8001502:	f7ff fbc1 	bl	8000c88 <HAL_GetTick>
 8001506:	6138      	str	r0, [r7, #16]
 8001508:	e00a      	b.n	8001520 <HAL_RCC_OscConfig+0x394>
 800150a:	f7ff fbbd 	bl	8000c88 <HAL_GetTick>
 800150e:	4602      	mov	r2, r0
 8001510:	693b      	ldr	r3, [r7, #16]
 8001512:	1ad3      	subs	r3, r2, r3
 8001514:	f241 3288 	movw	r2, #5000	; 0x1388
 8001518:	4293      	cmp	r3, r2
 800151a:	d901      	bls.n	8001520 <HAL_RCC_OscConfig+0x394>
 800151c:	2303      	movs	r3, #3
 800151e:	e0ab      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001520:	4b57      	ldr	r3, [pc, #348]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001522:	6a1b      	ldr	r3, [r3, #32]
 8001524:	f003 0302 	and.w	r3, r3, #2
 8001528:	2b00      	cmp	r3, #0
 800152a:	d0ee      	beq.n	800150a <HAL_RCC_OscConfig+0x37e>
 800152c:	e014      	b.n	8001558 <HAL_RCC_OscConfig+0x3cc>
 800152e:	f7ff fbab 	bl	8000c88 <HAL_GetTick>
 8001532:	6138      	str	r0, [r7, #16]
 8001534:	e00a      	b.n	800154c <HAL_RCC_OscConfig+0x3c0>
 8001536:	f7ff fba7 	bl	8000c88 <HAL_GetTick>
 800153a:	4602      	mov	r2, r0
 800153c:	693b      	ldr	r3, [r7, #16]
 800153e:	1ad3      	subs	r3, r2, r3
 8001540:	f241 3288 	movw	r2, #5000	; 0x1388
 8001544:	4293      	cmp	r3, r2
 8001546:	d901      	bls.n	800154c <HAL_RCC_OscConfig+0x3c0>
 8001548:	2303      	movs	r3, #3
 800154a:	e095      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 800154c:	4b4c      	ldr	r3, [pc, #304]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 800154e:	6a1b      	ldr	r3, [r3, #32]
 8001550:	f003 0302 	and.w	r3, r3, #2
 8001554:	2b00      	cmp	r3, #0
 8001556:	d1ee      	bne.n	8001536 <HAL_RCC_OscConfig+0x3aa>
 8001558:	7dfb      	ldrb	r3, [r7, #23]
 800155a:	2b01      	cmp	r3, #1
 800155c:	d105      	bne.n	800156a <HAL_RCC_OscConfig+0x3de>
 800155e:	4b48      	ldr	r3, [pc, #288]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001560:	69db      	ldr	r3, [r3, #28]
 8001562:	4a47      	ldr	r2, [pc, #284]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001564:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001568:	61d3      	str	r3, [r2, #28]
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	69db      	ldr	r3, [r3, #28]
 800156e:	2b00      	cmp	r3, #0
 8001570:	f000 8081 	beq.w	8001676 <HAL_RCC_OscConfig+0x4ea>
 8001574:	4b42      	ldr	r3, [pc, #264]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001576:	685b      	ldr	r3, [r3, #4]
 8001578:	f003 030c 	and.w	r3, r3, #12
 800157c:	2b08      	cmp	r3, #8
 800157e:	d061      	beq.n	8001644 <HAL_RCC_OscConfig+0x4b8>
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	69db      	ldr	r3, [r3, #28]
 8001584:	2b02      	cmp	r3, #2
 8001586:	d146      	bne.n	8001616 <HAL_RCC_OscConfig+0x48a>
 8001588:	4b3f      	ldr	r3, [pc, #252]	; (8001688 <HAL_RCC_OscConfig+0x4fc>)
 800158a:	2200      	movs	r2, #0
 800158c:	601a      	str	r2, [r3, #0]
 800158e:	f7ff fb7b 	bl	8000c88 <HAL_GetTick>
 8001592:	6138      	str	r0, [r7, #16]
 8001594:	e008      	b.n	80015a8 <HAL_RCC_OscConfig+0x41c>
 8001596:	f7ff fb77 	bl	8000c88 <HAL_GetTick>
 800159a:	4602      	mov	r2, r0
 800159c:	693b      	ldr	r3, [r7, #16]
 800159e:	1ad3      	subs	r3, r2, r3
 80015a0:	2b02      	cmp	r3, #2
 80015a2:	d901      	bls.n	80015a8 <HAL_RCC_OscConfig+0x41c>
 80015a4:	2303      	movs	r3, #3
 80015a6:	e067      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 80015a8:	4b35      	ldr	r3, [pc, #212]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80015b0:	2b00      	cmp	r3, #0
 80015b2:	d1f0      	bne.n	8001596 <HAL_RCC_OscConfig+0x40a>
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	6a1b      	ldr	r3, [r3, #32]
 80015b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80015bc:	d108      	bne.n	80015d0 <HAL_RCC_OscConfig+0x444>
 80015be:	4b30      	ldr	r3, [pc, #192]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	689b      	ldr	r3, [r3, #8]
 80015ca:	492d      	ldr	r1, [pc, #180]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80015cc:	4313      	orrs	r3, r2
 80015ce:	604b      	str	r3, [r1, #4]
 80015d0:	4b2b      	ldr	r3, [pc, #172]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80015d2:	685b      	ldr	r3, [r3, #4]
 80015d4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	6a19      	ldr	r1, [r3, #32]
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80015e0:	430b      	orrs	r3, r1
 80015e2:	4927      	ldr	r1, [pc, #156]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 80015e4:	4313      	orrs	r3, r2
 80015e6:	604b      	str	r3, [r1, #4]
 80015e8:	4b27      	ldr	r3, [pc, #156]	; (8001688 <HAL_RCC_OscConfig+0x4fc>)
 80015ea:	2201      	movs	r2, #1
 80015ec:	601a      	str	r2, [r3, #0]
 80015ee:	f7ff fb4b 	bl	8000c88 <HAL_GetTick>
 80015f2:	6138      	str	r0, [r7, #16]
 80015f4:	e008      	b.n	8001608 <HAL_RCC_OscConfig+0x47c>
 80015f6:	f7ff fb47 	bl	8000c88 <HAL_GetTick>
 80015fa:	4602      	mov	r2, r0
 80015fc:	693b      	ldr	r3, [r7, #16]
 80015fe:	1ad3      	subs	r3, r2, r3
 8001600:	2b02      	cmp	r3, #2
 8001602:	d901      	bls.n	8001608 <HAL_RCC_OscConfig+0x47c>
 8001604:	2303      	movs	r3, #3
 8001606:	e037      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001608:	4b1d      	ldr	r3, [pc, #116]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 800160a:	681b      	ldr	r3, [r3, #0]
 800160c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001610:	2b00      	cmp	r3, #0
 8001612:	d0f0      	beq.n	80015f6 <HAL_RCC_OscConfig+0x46a>
 8001614:	e02f      	b.n	8001676 <HAL_RCC_OscConfig+0x4ea>
 8001616:	4b1c      	ldr	r3, [pc, #112]	; (8001688 <HAL_RCC_OscConfig+0x4fc>)
 8001618:	2200      	movs	r2, #0
 800161a:	601a      	str	r2, [r3, #0]
 800161c:	f7ff fb34 	bl	8000c88 <HAL_GetTick>
 8001620:	6138      	str	r0, [r7, #16]
 8001622:	e008      	b.n	8001636 <HAL_RCC_OscConfig+0x4aa>
 8001624:	f7ff fb30 	bl	8000c88 <HAL_GetTick>
 8001628:	4602      	mov	r2, r0
 800162a:	693b      	ldr	r3, [r7, #16]
 800162c:	1ad3      	subs	r3, r2, r3
 800162e:	2b02      	cmp	r3, #2
 8001630:	d901      	bls.n	8001636 <HAL_RCC_OscConfig+0x4aa>
 8001632:	2303      	movs	r3, #3
 8001634:	e020      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001636:	4b12      	ldr	r3, [pc, #72]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800163e:	2b00      	cmp	r3, #0
 8001640:	d1f0      	bne.n	8001624 <HAL_RCC_OscConfig+0x498>
 8001642:	e018      	b.n	8001676 <HAL_RCC_OscConfig+0x4ea>
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	69db      	ldr	r3, [r3, #28]
 8001648:	2b01      	cmp	r3, #1
 800164a:	d101      	bne.n	8001650 <HAL_RCC_OscConfig+0x4c4>
 800164c:	2301      	movs	r3, #1
 800164e:	e013      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001650:	4b0b      	ldr	r3, [pc, #44]	; (8001680 <HAL_RCC_OscConfig+0x4f4>)
 8001652:	685b      	ldr	r3, [r3, #4]
 8001654:	60fb      	str	r3, [r7, #12]
 8001656:	68fb      	ldr	r3, [r7, #12]
 8001658:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	6a1b      	ldr	r3, [r3, #32]
 8001660:	429a      	cmp	r2, r3
 8001662:	d106      	bne.n	8001672 <HAL_RCC_OscConfig+0x4e6>
 8001664:	68fb      	ldr	r3, [r7, #12]
 8001666:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800166e:	429a      	cmp	r2, r3
 8001670:	d001      	beq.n	8001676 <HAL_RCC_OscConfig+0x4ea>
 8001672:	2301      	movs	r3, #1
 8001674:	e000      	b.n	8001678 <HAL_RCC_OscConfig+0x4ec>
 8001676:	2300      	movs	r3, #0
 8001678:	4618      	mov	r0, r3
 800167a:	3718      	adds	r7, #24
 800167c:	46bd      	mov	sp, r7
 800167e:	bd80      	pop	{r7, pc}
 8001680:	40021000 	.word	0x40021000
 8001684:	40007000 	.word	0x40007000
 8001688:	42420060 	.word	0x42420060

0800168c <HAL_RCC_ClockConfig>:
 800168c:	b580      	push	{r7, lr}
 800168e:	b084      	sub	sp, #16
 8001690:	af00      	add	r7, sp, #0
 8001692:	6078      	str	r0, [r7, #4]
 8001694:	6039      	str	r1, [r7, #0]
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	2b00      	cmp	r3, #0
 800169a:	d101      	bne.n	80016a0 <HAL_RCC_ClockConfig+0x14>
 800169c:	2301      	movs	r3, #1
 800169e:	e0d0      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 80016a0:	4b6a      	ldr	r3, [pc, #424]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	f003 0307 	and.w	r3, r3, #7
 80016a8:	683a      	ldr	r2, [r7, #0]
 80016aa:	429a      	cmp	r2, r3
 80016ac:	d910      	bls.n	80016d0 <HAL_RCC_ClockConfig+0x44>
 80016ae:	4b67      	ldr	r3, [pc, #412]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	f023 0207 	bic.w	r2, r3, #7
 80016b6:	4965      	ldr	r1, [pc, #404]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80016b8:	683b      	ldr	r3, [r7, #0]
 80016ba:	4313      	orrs	r3, r2
 80016bc:	600b      	str	r3, [r1, #0]
 80016be:	4b63      	ldr	r3, [pc, #396]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	f003 0307 	and.w	r3, r3, #7
 80016c6:	683a      	ldr	r2, [r7, #0]
 80016c8:	429a      	cmp	r2, r3
 80016ca:	d001      	beq.n	80016d0 <HAL_RCC_ClockConfig+0x44>
 80016cc:	2301      	movs	r3, #1
 80016ce:	e0b8      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	f003 0302 	and.w	r3, r3, #2
 80016d8:	2b00      	cmp	r3, #0
 80016da:	d020      	beq.n	800171e <HAL_RCC_ClockConfig+0x92>
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	f003 0304 	and.w	r3, r3, #4
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d005      	beq.n	80016f4 <HAL_RCC_ClockConfig+0x68>
 80016e8:	4b59      	ldr	r3, [pc, #356]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 80016ea:	685b      	ldr	r3, [r3, #4]
 80016ec:	4a58      	ldr	r2, [pc, #352]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 80016ee:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80016f2:	6053      	str	r3, [r2, #4]
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	f003 0308 	and.w	r3, r3, #8
 80016fc:	2b00      	cmp	r3, #0
 80016fe:	d005      	beq.n	800170c <HAL_RCC_ClockConfig+0x80>
 8001700:	4b53      	ldr	r3, [pc, #332]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001702:	685b      	ldr	r3, [r3, #4]
 8001704:	4a52      	ldr	r2, [pc, #328]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001706:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800170a:	6053      	str	r3, [r2, #4]
 800170c:	4b50      	ldr	r3, [pc, #320]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800170e:	685b      	ldr	r3, [r3, #4]
 8001710:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	689b      	ldr	r3, [r3, #8]
 8001718:	494d      	ldr	r1, [pc, #308]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800171a:	4313      	orrs	r3, r2
 800171c:	604b      	str	r3, [r1, #4]
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	f003 0301 	and.w	r3, r3, #1
 8001726:	2b00      	cmp	r3, #0
 8001728:	d040      	beq.n	80017ac <HAL_RCC_ClockConfig+0x120>
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	685b      	ldr	r3, [r3, #4]
 800172e:	2b01      	cmp	r3, #1
 8001730:	d107      	bne.n	8001742 <HAL_RCC_ClockConfig+0xb6>
 8001732:	4b47      	ldr	r3, [pc, #284]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800173a:	2b00      	cmp	r3, #0
 800173c:	d115      	bne.n	800176a <HAL_RCC_ClockConfig+0xde>
 800173e:	2301      	movs	r3, #1
 8001740:	e07f      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	685b      	ldr	r3, [r3, #4]
 8001746:	2b02      	cmp	r3, #2
 8001748:	d107      	bne.n	800175a <HAL_RCC_ClockConfig+0xce>
 800174a:	4b41      	ldr	r3, [pc, #260]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001752:	2b00      	cmp	r3, #0
 8001754:	d109      	bne.n	800176a <HAL_RCC_ClockConfig+0xde>
 8001756:	2301      	movs	r3, #1
 8001758:	e073      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 800175a:	4b3d      	ldr	r3, [pc, #244]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	f003 0302 	and.w	r3, r3, #2
 8001762:	2b00      	cmp	r3, #0
 8001764:	d101      	bne.n	800176a <HAL_RCC_ClockConfig+0xde>
 8001766:	2301      	movs	r3, #1
 8001768:	e06b      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 800176a:	4b39      	ldr	r3, [pc, #228]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800176c:	685b      	ldr	r3, [r3, #4]
 800176e:	f023 0203 	bic.w	r2, r3, #3
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	685b      	ldr	r3, [r3, #4]
 8001776:	4936      	ldr	r1, [pc, #216]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001778:	4313      	orrs	r3, r2
 800177a:	604b      	str	r3, [r1, #4]
 800177c:	f7ff fa84 	bl	8000c88 <HAL_GetTick>
 8001780:	60f8      	str	r0, [r7, #12]
 8001782:	e00a      	b.n	800179a <HAL_RCC_ClockConfig+0x10e>
 8001784:	f7ff fa80 	bl	8000c88 <HAL_GetTick>
 8001788:	4602      	mov	r2, r0
 800178a:	68fb      	ldr	r3, [r7, #12]
 800178c:	1ad3      	subs	r3, r2, r3
 800178e:	f241 3288 	movw	r2, #5000	; 0x1388
 8001792:	4293      	cmp	r3, r2
 8001794:	d901      	bls.n	800179a <HAL_RCC_ClockConfig+0x10e>
 8001796:	2303      	movs	r3, #3
 8001798:	e053      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 800179a:	4b2d      	ldr	r3, [pc, #180]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 800179c:	685b      	ldr	r3, [r3, #4]
 800179e:	f003 020c 	and.w	r2, r3, #12
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	685b      	ldr	r3, [r3, #4]
 80017a6:	009b      	lsls	r3, r3, #2
 80017a8:	429a      	cmp	r2, r3
 80017aa:	d1eb      	bne.n	8001784 <HAL_RCC_ClockConfig+0xf8>
 80017ac:	4b27      	ldr	r3, [pc, #156]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	f003 0307 	and.w	r3, r3, #7
 80017b4:	683a      	ldr	r2, [r7, #0]
 80017b6:	429a      	cmp	r2, r3
 80017b8:	d210      	bcs.n	80017dc <HAL_RCC_ClockConfig+0x150>
 80017ba:	4b24      	ldr	r3, [pc, #144]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f023 0207 	bic.w	r2, r3, #7
 80017c2:	4922      	ldr	r1, [pc, #136]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80017c4:	683b      	ldr	r3, [r7, #0]
 80017c6:	4313      	orrs	r3, r2
 80017c8:	600b      	str	r3, [r1, #0]
 80017ca:	4b20      	ldr	r3, [pc, #128]	; (800184c <HAL_RCC_ClockConfig+0x1c0>)
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	f003 0307 	and.w	r3, r3, #7
 80017d2:	683a      	ldr	r2, [r7, #0]
 80017d4:	429a      	cmp	r2, r3
 80017d6:	d001      	beq.n	80017dc <HAL_RCC_ClockConfig+0x150>
 80017d8:	2301      	movs	r3, #1
 80017da:	e032      	b.n	8001842 <HAL_RCC_ClockConfig+0x1b6>
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	f003 0304 	and.w	r3, r3, #4
 80017e4:	2b00      	cmp	r3, #0
 80017e6:	d008      	beq.n	80017fa <HAL_RCC_ClockConfig+0x16e>
 80017e8:	4b19      	ldr	r3, [pc, #100]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 80017ea:	685b      	ldr	r3, [r3, #4]
 80017ec:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	68db      	ldr	r3, [r3, #12]
 80017f4:	4916      	ldr	r1, [pc, #88]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 80017f6:	4313      	orrs	r3, r2
 80017f8:	604b      	str	r3, [r1, #4]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f003 0308 	and.w	r3, r3, #8
 8001802:	2b00      	cmp	r3, #0
 8001804:	d009      	beq.n	800181a <HAL_RCC_ClockConfig+0x18e>
 8001806:	4b12      	ldr	r3, [pc, #72]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001808:	685b      	ldr	r3, [r3, #4]
 800180a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	691b      	ldr	r3, [r3, #16]
 8001812:	00db      	lsls	r3, r3, #3
 8001814:	490e      	ldr	r1, [pc, #56]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001816:	4313      	orrs	r3, r2
 8001818:	604b      	str	r3, [r1, #4]
 800181a:	f000 f821 	bl	8001860 <HAL_RCC_GetSysClockFreq>
 800181e:	4601      	mov	r1, r0
 8001820:	4b0b      	ldr	r3, [pc, #44]	; (8001850 <HAL_RCC_ClockConfig+0x1c4>)
 8001822:	685b      	ldr	r3, [r3, #4]
 8001824:	091b      	lsrs	r3, r3, #4
 8001826:	f003 030f 	and.w	r3, r3, #15
 800182a:	4a0a      	ldr	r2, [pc, #40]	; (8001854 <HAL_RCC_ClockConfig+0x1c8>)
 800182c:	5cd3      	ldrb	r3, [r2, r3]
 800182e:	fa21 f303 	lsr.w	r3, r1, r3
 8001832:	4a09      	ldr	r2, [pc, #36]	; (8001858 <HAL_RCC_ClockConfig+0x1cc>)
 8001834:	6013      	str	r3, [r2, #0]
 8001836:	4b09      	ldr	r3, [pc, #36]	; (800185c <HAL_RCC_ClockConfig+0x1d0>)
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	4618      	mov	r0, r3
 800183c:	f7ff f9e2 	bl	8000c04 <HAL_InitTick>
 8001840:	2300      	movs	r3, #0
 8001842:	4618      	mov	r0, r3
 8001844:	3710      	adds	r7, #16
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}
 800184a:	bf00      	nop
 800184c:	40022000 	.word	0x40022000
 8001850:	40021000 	.word	0x40021000
 8001854:	080028a0 	.word	0x080028a0
 8001858:	20000000 	.word	0x20000000
 800185c:	20000004 	.word	0x20000004

08001860 <HAL_RCC_GetSysClockFreq>:
 8001860:	b490      	push	{r4, r7}
 8001862:	b08a      	sub	sp, #40	; 0x28
 8001864:	af00      	add	r7, sp, #0
 8001866:	4b2a      	ldr	r3, [pc, #168]	; (8001910 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001868:	1d3c      	adds	r4, r7, #4
 800186a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800186c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001870:	4b28      	ldr	r3, [pc, #160]	; (8001914 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001872:	881b      	ldrh	r3, [r3, #0]
 8001874:	803b      	strh	r3, [r7, #0]
 8001876:	2300      	movs	r3, #0
 8001878:	61fb      	str	r3, [r7, #28]
 800187a:	2300      	movs	r3, #0
 800187c:	61bb      	str	r3, [r7, #24]
 800187e:	2300      	movs	r3, #0
 8001880:	627b      	str	r3, [r7, #36]	; 0x24
 8001882:	2300      	movs	r3, #0
 8001884:	617b      	str	r3, [r7, #20]
 8001886:	2300      	movs	r3, #0
 8001888:	623b      	str	r3, [r7, #32]
 800188a:	4b23      	ldr	r3, [pc, #140]	; (8001918 <HAL_RCC_GetSysClockFreq+0xb8>)
 800188c:	685b      	ldr	r3, [r3, #4]
 800188e:	61fb      	str	r3, [r7, #28]
 8001890:	69fb      	ldr	r3, [r7, #28]
 8001892:	f003 030c 	and.w	r3, r3, #12
 8001896:	2b04      	cmp	r3, #4
 8001898:	d002      	beq.n	80018a0 <HAL_RCC_GetSysClockFreq+0x40>
 800189a:	2b08      	cmp	r3, #8
 800189c:	d003      	beq.n	80018a6 <HAL_RCC_GetSysClockFreq+0x46>
 800189e:	e02d      	b.n	80018fc <HAL_RCC_GetSysClockFreq+0x9c>
 80018a0:	4b1e      	ldr	r3, [pc, #120]	; (800191c <HAL_RCC_GetSysClockFreq+0xbc>)
 80018a2:	623b      	str	r3, [r7, #32]
 80018a4:	e02d      	b.n	8001902 <HAL_RCC_GetSysClockFreq+0xa2>
 80018a6:	69fb      	ldr	r3, [r7, #28]
 80018a8:	0c9b      	lsrs	r3, r3, #18
 80018aa:	f003 030f 	and.w	r3, r3, #15
 80018ae:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80018b2:	4413      	add	r3, r2
 80018b4:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80018b8:	617b      	str	r3, [r7, #20]
 80018ba:	69fb      	ldr	r3, [r7, #28]
 80018bc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d013      	beq.n	80018ec <HAL_RCC_GetSysClockFreq+0x8c>
 80018c4:	4b14      	ldr	r3, [pc, #80]	; (8001918 <HAL_RCC_GetSysClockFreq+0xb8>)
 80018c6:	685b      	ldr	r3, [r3, #4]
 80018c8:	0c5b      	lsrs	r3, r3, #17
 80018ca:	f003 0301 	and.w	r3, r3, #1
 80018ce:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80018d2:	4413      	add	r3, r2
 80018d4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80018d8:	61bb      	str	r3, [r7, #24]
 80018da:	697b      	ldr	r3, [r7, #20]
 80018dc:	4a0f      	ldr	r2, [pc, #60]	; (800191c <HAL_RCC_GetSysClockFreq+0xbc>)
 80018de:	fb02 f203 	mul.w	r2, r2, r3
 80018e2:	69bb      	ldr	r3, [r7, #24]
 80018e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80018e8:	627b      	str	r3, [r7, #36]	; 0x24
 80018ea:	e004      	b.n	80018f6 <HAL_RCC_GetSysClockFreq+0x96>
 80018ec:	697b      	ldr	r3, [r7, #20]
 80018ee:	4a0c      	ldr	r2, [pc, #48]	; (8001920 <HAL_RCC_GetSysClockFreq+0xc0>)
 80018f0:	fb02 f303 	mul.w	r3, r2, r3
 80018f4:	627b      	str	r3, [r7, #36]	; 0x24
 80018f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018f8:	623b      	str	r3, [r7, #32]
 80018fa:	e002      	b.n	8001902 <HAL_RCC_GetSysClockFreq+0xa2>
 80018fc:	4b07      	ldr	r3, [pc, #28]	; (800191c <HAL_RCC_GetSysClockFreq+0xbc>)
 80018fe:	623b      	str	r3, [r7, #32]
 8001900:	bf00      	nop
 8001902:	6a3b      	ldr	r3, [r7, #32]
 8001904:	4618      	mov	r0, r3
 8001906:	3728      	adds	r7, #40	; 0x28
 8001908:	46bd      	mov	sp, r7
 800190a:	bc90      	pop	{r4, r7}
 800190c:	4770      	bx	lr
 800190e:	bf00      	nop
 8001910:	0800288c 	.word	0x0800288c
 8001914:	0800289c 	.word	0x0800289c
 8001918:	40021000 	.word	0x40021000
 800191c:	007a1200 	.word	0x007a1200
 8001920:	003d0900 	.word	0x003d0900

08001924 <RCC_Delay>:
 8001924:	b480      	push	{r7}
 8001926:	b085      	sub	sp, #20
 8001928:	af00      	add	r7, sp, #0
 800192a:	6078      	str	r0, [r7, #4]
 800192c:	4b0a      	ldr	r3, [pc, #40]	; (8001958 <RCC_Delay+0x34>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	4a0a      	ldr	r2, [pc, #40]	; (800195c <RCC_Delay+0x38>)
 8001932:	fba2 2303 	umull	r2, r3, r2, r3
 8001936:	0a5b      	lsrs	r3, r3, #9
 8001938:	687a      	ldr	r2, [r7, #4]
 800193a:	fb02 f303 	mul.w	r3, r2, r3
 800193e:	60fb      	str	r3, [r7, #12]
 8001940:	bf00      	nop
 8001942:	68fb      	ldr	r3, [r7, #12]
 8001944:	1e5a      	subs	r2, r3, #1
 8001946:	60fa      	str	r2, [r7, #12]
 8001948:	2b00      	cmp	r3, #0
 800194a:	d1f9      	bne.n	8001940 <RCC_Delay+0x1c>
 800194c:	bf00      	nop
 800194e:	3714      	adds	r7, #20
 8001950:	46bd      	mov	sp, r7
 8001952:	bc80      	pop	{r7}
 8001954:	4770      	bx	lr
 8001956:	bf00      	nop
 8001958:	20000000 	.word	0x20000000
 800195c:	10624dd3 	.word	0x10624dd3

08001960 <LL_GPIO_SetPinMode>:
 8001960:	b490      	push	{r4, r7}
 8001962:	b088      	sub	sp, #32
 8001964:	af00      	add	r7, sp, #0
 8001966:	60f8      	str	r0, [r7, #12]
 8001968:	60b9      	str	r1, [r7, #8]
 800196a:	607a      	str	r2, [r7, #4]
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	461a      	mov	r2, r3
 8001970:	68bb      	ldr	r3, [r7, #8]
 8001972:	0e1b      	lsrs	r3, r3, #24
 8001974:	4413      	add	r3, r2
 8001976:	461c      	mov	r4, r3
 8001978:	6822      	ldr	r2, [r4, #0]
 800197a:	68bb      	ldr	r3, [r7, #8]
 800197c:	617b      	str	r3, [r7, #20]
 800197e:	697b      	ldr	r3, [r7, #20]
 8001980:	fa93 f3a3 	rbit	r3, r3
 8001984:	613b      	str	r3, [r7, #16]
 8001986:	693b      	ldr	r3, [r7, #16]
 8001988:	fab3 f383 	clz	r3, r3
 800198c:	b2db      	uxtb	r3, r3
 800198e:	009b      	lsls	r3, r3, #2
 8001990:	210f      	movs	r1, #15
 8001992:	fa01 f303 	lsl.w	r3, r1, r3
 8001996:	43db      	mvns	r3, r3
 8001998:	401a      	ands	r2, r3
 800199a:	68bb      	ldr	r3, [r7, #8]
 800199c:	61fb      	str	r3, [r7, #28]
 800199e:	69fb      	ldr	r3, [r7, #28]
 80019a0:	fa93 f3a3 	rbit	r3, r3
 80019a4:	61bb      	str	r3, [r7, #24]
 80019a6:	69bb      	ldr	r3, [r7, #24]
 80019a8:	fab3 f383 	clz	r3, r3
 80019ac:	b2db      	uxtb	r3, r3
 80019ae:	009b      	lsls	r3, r3, #2
 80019b0:	6879      	ldr	r1, [r7, #4]
 80019b2:	fa01 f303 	lsl.w	r3, r1, r3
 80019b6:	4313      	orrs	r3, r2
 80019b8:	6023      	str	r3, [r4, #0]
 80019ba:	bf00      	nop
 80019bc:	3720      	adds	r7, #32
 80019be:	46bd      	mov	sp, r7
 80019c0:	bc90      	pop	{r4, r7}
 80019c2:	4770      	bx	lr

080019c4 <LL_GPIO_SetPinSpeed>:
 80019c4:	b490      	push	{r4, r7}
 80019c6:	b088      	sub	sp, #32
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	60f8      	str	r0, [r7, #12]
 80019cc:	60b9      	str	r1, [r7, #8]
 80019ce:	607a      	str	r2, [r7, #4]
 80019d0:	68fb      	ldr	r3, [r7, #12]
 80019d2:	461a      	mov	r2, r3
 80019d4:	68bb      	ldr	r3, [r7, #8]
 80019d6:	0e1b      	lsrs	r3, r3, #24
 80019d8:	4413      	add	r3, r2
 80019da:	461c      	mov	r4, r3
 80019dc:	6822      	ldr	r2, [r4, #0]
 80019de:	68bb      	ldr	r3, [r7, #8]
 80019e0:	617b      	str	r3, [r7, #20]
 80019e2:	697b      	ldr	r3, [r7, #20]
 80019e4:	fa93 f3a3 	rbit	r3, r3
 80019e8:	613b      	str	r3, [r7, #16]
 80019ea:	693b      	ldr	r3, [r7, #16]
 80019ec:	fab3 f383 	clz	r3, r3
 80019f0:	b2db      	uxtb	r3, r3
 80019f2:	009b      	lsls	r3, r3, #2
 80019f4:	2103      	movs	r1, #3
 80019f6:	fa01 f303 	lsl.w	r3, r1, r3
 80019fa:	43db      	mvns	r3, r3
 80019fc:	401a      	ands	r2, r3
 80019fe:	68bb      	ldr	r3, [r7, #8]
 8001a00:	61fb      	str	r3, [r7, #28]
 8001a02:	69fb      	ldr	r3, [r7, #28]
 8001a04:	fa93 f3a3 	rbit	r3, r3
 8001a08:	61bb      	str	r3, [r7, #24]
 8001a0a:	69bb      	ldr	r3, [r7, #24]
 8001a0c:	fab3 f383 	clz	r3, r3
 8001a10:	b2db      	uxtb	r3, r3
 8001a12:	009b      	lsls	r3, r3, #2
 8001a14:	6879      	ldr	r1, [r7, #4]
 8001a16:	fa01 f303 	lsl.w	r3, r1, r3
 8001a1a:	4313      	orrs	r3, r2
 8001a1c:	6023      	str	r3, [r4, #0]
 8001a1e:	bf00      	nop
 8001a20:	3720      	adds	r7, #32
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bc90      	pop	{r4, r7}
 8001a26:	4770      	bx	lr

08001a28 <LL_GPIO_SetPinOutputType>:
 8001a28:	b490      	push	{r4, r7}
 8001a2a:	b088      	sub	sp, #32
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	60f8      	str	r0, [r7, #12]
 8001a30:	60b9      	str	r1, [r7, #8]
 8001a32:	607a      	str	r2, [r7, #4]
 8001a34:	68fb      	ldr	r3, [r7, #12]
 8001a36:	461a      	mov	r2, r3
 8001a38:	68bb      	ldr	r3, [r7, #8]
 8001a3a:	0e1b      	lsrs	r3, r3, #24
 8001a3c:	4413      	add	r3, r2
 8001a3e:	461c      	mov	r4, r3
 8001a40:	6822      	ldr	r2, [r4, #0]
 8001a42:	68bb      	ldr	r3, [r7, #8]
 8001a44:	617b      	str	r3, [r7, #20]
 8001a46:	697b      	ldr	r3, [r7, #20]
 8001a48:	fa93 f3a3 	rbit	r3, r3
 8001a4c:	613b      	str	r3, [r7, #16]
 8001a4e:	693b      	ldr	r3, [r7, #16]
 8001a50:	fab3 f383 	clz	r3, r3
 8001a54:	b2db      	uxtb	r3, r3
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	2104      	movs	r1, #4
 8001a5a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a5e:	43db      	mvns	r3, r3
 8001a60:	401a      	ands	r2, r3
 8001a62:	68bb      	ldr	r3, [r7, #8]
 8001a64:	61fb      	str	r3, [r7, #28]
 8001a66:	69fb      	ldr	r3, [r7, #28]
 8001a68:	fa93 f3a3 	rbit	r3, r3
 8001a6c:	61bb      	str	r3, [r7, #24]
 8001a6e:	69bb      	ldr	r3, [r7, #24]
 8001a70:	fab3 f383 	clz	r3, r3
 8001a74:	b2db      	uxtb	r3, r3
 8001a76:	009b      	lsls	r3, r3, #2
 8001a78:	6879      	ldr	r1, [r7, #4]
 8001a7a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a7e:	4313      	orrs	r3, r2
 8001a80:	6023      	str	r3, [r4, #0]
 8001a82:	bf00      	nop
 8001a84:	3720      	adds	r7, #32
 8001a86:	46bd      	mov	sp, r7
 8001a88:	bc90      	pop	{r4, r7}
 8001a8a:	4770      	bx	lr

08001a8c <LL_GPIO_SetPinPull>:
 8001a8c:	b480      	push	{r7}
 8001a8e:	b087      	sub	sp, #28
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	60f8      	str	r0, [r7, #12]
 8001a94:	60b9      	str	r1, [r7, #8]
 8001a96:	607a      	str	r2, [r7, #4]
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	68da      	ldr	r2, [r3, #12]
 8001a9c:	68bb      	ldr	r3, [r7, #8]
 8001a9e:	0a1b      	lsrs	r3, r3, #8
 8001aa0:	43db      	mvns	r3, r3
 8001aa2:	401a      	ands	r2, r3
 8001aa4:	68bb      	ldr	r3, [r7, #8]
 8001aa6:	0a1b      	lsrs	r3, r3, #8
 8001aa8:	617b      	str	r3, [r7, #20]
 8001aaa:	697b      	ldr	r3, [r7, #20]
 8001aac:	fa93 f3a3 	rbit	r3, r3
 8001ab0:	613b      	str	r3, [r7, #16]
 8001ab2:	693b      	ldr	r3, [r7, #16]
 8001ab4:	fab3 f383 	clz	r3, r3
 8001ab8:	b2db      	uxtb	r3, r3
 8001aba:	4619      	mov	r1, r3
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	408b      	lsls	r3, r1
 8001ac0:	431a      	orrs	r2, r3
 8001ac2:	68fb      	ldr	r3, [r7, #12]
 8001ac4:	60da      	str	r2, [r3, #12]
 8001ac6:	bf00      	nop
 8001ac8:	371c      	adds	r7, #28
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bc80      	pop	{r7}
 8001ace:	4770      	bx	lr

08001ad0 <LL_GPIO_Init>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	b088      	sub	sp, #32
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	6078      	str	r0, [r7, #4]
 8001ad8:	6039      	str	r1, [r7, #0]
 8001ada:	683b      	ldr	r3, [r7, #0]
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	021b      	lsls	r3, r3, #8
 8001ae0:	0c1b      	lsrs	r3, r3, #16
 8001ae2:	617b      	str	r3, [r7, #20]
 8001ae4:	697b      	ldr	r3, [r7, #20]
 8001ae6:	613b      	str	r3, [r7, #16]
 8001ae8:	693b      	ldr	r3, [r7, #16]
 8001aea:	fa93 f3a3 	rbit	r3, r3
 8001aee:	60fb      	str	r3, [r7, #12]
 8001af0:	68fb      	ldr	r3, [r7, #12]
 8001af2:	fab3 f383 	clz	r3, r3
 8001af6:	b2db      	uxtb	r3, r3
 8001af8:	61fb      	str	r3, [r7, #28]
 8001afa:	e040      	b.n	8001b7e <LL_GPIO_Init+0xae>
 8001afc:	2201      	movs	r2, #1
 8001afe:	69fb      	ldr	r3, [r7, #28]
 8001b00:	409a      	lsls	r2, r3
 8001b02:	697b      	ldr	r3, [r7, #20]
 8001b04:	4013      	ands	r3, r2
 8001b06:	2b00      	cmp	r3, #0
 8001b08:	d036      	beq.n	8001b78 <LL_GPIO_Init+0xa8>
 8001b0a:	69fb      	ldr	r3, [r7, #28]
 8001b0c:	2b07      	cmp	r3, #7
 8001b0e:	d806      	bhi.n	8001b1e <LL_GPIO_Init+0x4e>
 8001b10:	f240 1201 	movw	r2, #257	; 0x101
 8001b14:	69fb      	ldr	r3, [r7, #28]
 8001b16:	fa02 f303 	lsl.w	r3, r2, r3
 8001b1a:	61bb      	str	r3, [r7, #24]
 8001b1c:	e008      	b.n	8001b30 <LL_GPIO_Init+0x60>
 8001b1e:	69fb      	ldr	r3, [r7, #28]
 8001b20:	3b08      	subs	r3, #8
 8001b22:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 8001b26:	fa02 f303 	lsl.w	r3, r2, r3
 8001b2a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001b2e:	61bb      	str	r3, [r7, #24]
 8001b30:	683b      	ldr	r3, [r7, #0]
 8001b32:	685b      	ldr	r3, [r3, #4]
 8001b34:	461a      	mov	r2, r3
 8001b36:	69b9      	ldr	r1, [r7, #24]
 8001b38:	6878      	ldr	r0, [r7, #4]
 8001b3a:	f7ff ff11 	bl	8001960 <LL_GPIO_SetPinMode>
 8001b3e:	683b      	ldr	r3, [r7, #0]
 8001b40:	691b      	ldr	r3, [r3, #16]
 8001b42:	461a      	mov	r2, r3
 8001b44:	69b9      	ldr	r1, [r7, #24]
 8001b46:	6878      	ldr	r0, [r7, #4]
 8001b48:	f7ff ffa0 	bl	8001a8c <LL_GPIO_SetPinPull>
 8001b4c:	683b      	ldr	r3, [r7, #0]
 8001b4e:	685b      	ldr	r3, [r3, #4]
 8001b50:	2b01      	cmp	r3, #1
 8001b52:	d003      	beq.n	8001b5c <LL_GPIO_Init+0x8c>
 8001b54:	683b      	ldr	r3, [r7, #0]
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	2b09      	cmp	r3, #9
 8001b5a:	d10d      	bne.n	8001b78 <LL_GPIO_Init+0xa8>
 8001b5c:	683b      	ldr	r3, [r7, #0]
 8001b5e:	689b      	ldr	r3, [r3, #8]
 8001b60:	461a      	mov	r2, r3
 8001b62:	69b9      	ldr	r1, [r7, #24]
 8001b64:	6878      	ldr	r0, [r7, #4]
 8001b66:	f7ff ff2d 	bl	80019c4 <LL_GPIO_SetPinSpeed>
 8001b6a:	683b      	ldr	r3, [r7, #0]
 8001b6c:	68db      	ldr	r3, [r3, #12]
 8001b6e:	461a      	mov	r2, r3
 8001b70:	69b9      	ldr	r1, [r7, #24]
 8001b72:	6878      	ldr	r0, [r7, #4]
 8001b74:	f7ff ff58 	bl	8001a28 <LL_GPIO_SetPinOutputType>
 8001b78:	69fb      	ldr	r3, [r7, #28]
 8001b7a:	3301      	adds	r3, #1
 8001b7c:	61fb      	str	r3, [r7, #28]
 8001b7e:	697a      	ldr	r2, [r7, #20]
 8001b80:	69fb      	ldr	r3, [r7, #28]
 8001b82:	fa22 f303 	lsr.w	r3, r2, r3
 8001b86:	2b00      	cmp	r3, #0
 8001b88:	d1b8      	bne.n	8001afc <LL_GPIO_Init+0x2c>
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	4618      	mov	r0, r3
 8001b8e:	3720      	adds	r7, #32
 8001b90:	46bd      	mov	sp, r7
 8001b92:	bd80      	pop	{r7, pc}

08001b94 <LL_RCC_GetSysClkSource>:
 8001b94:	b480      	push	{r7}
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	4b03      	ldr	r3, [pc, #12]	; (8001ba8 <LL_RCC_GetSysClkSource+0x14>)
 8001b9a:	685b      	ldr	r3, [r3, #4]
 8001b9c:	f003 030c 	and.w	r3, r3, #12
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	46bd      	mov	sp, r7
 8001ba4:	bc80      	pop	{r7}
 8001ba6:	4770      	bx	lr
 8001ba8:	40021000 	.word	0x40021000

08001bac <LL_RCC_GetAHBPrescaler>:
 8001bac:	b480      	push	{r7}
 8001bae:	af00      	add	r7, sp, #0
 8001bb0:	4b03      	ldr	r3, [pc, #12]	; (8001bc0 <LL_RCC_GetAHBPrescaler+0x14>)
 8001bb2:	685b      	ldr	r3, [r3, #4]
 8001bb4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001bb8:	4618      	mov	r0, r3
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	bc80      	pop	{r7}
 8001bbe:	4770      	bx	lr
 8001bc0:	40021000 	.word	0x40021000

08001bc4 <LL_RCC_GetAPB1Prescaler>:
 8001bc4:	b480      	push	{r7}
 8001bc6:	af00      	add	r7, sp, #0
 8001bc8:	4b03      	ldr	r3, [pc, #12]	; (8001bd8 <LL_RCC_GetAPB1Prescaler+0x14>)
 8001bca:	685b      	ldr	r3, [r3, #4]
 8001bcc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8001bd0:	4618      	mov	r0, r3
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bc80      	pop	{r7}
 8001bd6:	4770      	bx	lr
 8001bd8:	40021000 	.word	0x40021000

08001bdc <LL_RCC_GetAPB2Prescaler>:
 8001bdc:	b480      	push	{r7}
 8001bde:	af00      	add	r7, sp, #0
 8001be0:	4b03      	ldr	r3, [pc, #12]	; (8001bf0 <LL_RCC_GetAPB2Prescaler+0x14>)
 8001be2:	685b      	ldr	r3, [r3, #4]
 8001be4:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8001be8:	4618      	mov	r0, r3
 8001bea:	46bd      	mov	sp, r7
 8001bec:	bc80      	pop	{r7}
 8001bee:	4770      	bx	lr
 8001bf0:	40021000 	.word	0x40021000

08001bf4 <LL_RCC_PLL_GetMainSource>:
 8001bf4:	b480      	push	{r7}
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	4b03      	ldr	r3, [pc, #12]	; (8001c08 <LL_RCC_PLL_GetMainSource+0x14>)
 8001bfa:	685b      	ldr	r3, [r3, #4]
 8001bfc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001c00:	4618      	mov	r0, r3
 8001c02:	46bd      	mov	sp, r7
 8001c04:	bc80      	pop	{r7}
 8001c06:	4770      	bx	lr
 8001c08:	40021000 	.word	0x40021000

08001c0c <LL_RCC_PLL_GetMultiplicator>:
 8001c0c:	b480      	push	{r7}
 8001c0e:	af00      	add	r7, sp, #0
 8001c10:	4b03      	ldr	r3, [pc, #12]	; (8001c20 <LL_RCC_PLL_GetMultiplicator+0x14>)
 8001c12:	685b      	ldr	r3, [r3, #4]
 8001c14:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8001c18:	4618      	mov	r0, r3
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	bc80      	pop	{r7}
 8001c1e:	4770      	bx	lr
 8001c20:	40021000 	.word	0x40021000

08001c24 <LL_RCC_PLL_GetPrediv>:
 8001c24:	b480      	push	{r7}
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	4b04      	ldr	r3, [pc, #16]	; (8001c3c <LL_RCC_PLL_GetPrediv+0x18>)
 8001c2a:	685b      	ldr	r3, [r3, #4]
 8001c2c:	0c5b      	lsrs	r3, r3, #17
 8001c2e:	f003 0301 	and.w	r3, r3, #1
 8001c32:	4618      	mov	r0, r3
 8001c34:	46bd      	mov	sp, r7
 8001c36:	bc80      	pop	{r7}
 8001c38:	4770      	bx	lr
 8001c3a:	bf00      	nop
 8001c3c:	40021000 	.word	0x40021000

08001c40 <LL_RCC_GetSystemClocksFreq>:
 8001c40:	b580      	push	{r7, lr}
 8001c42:	b082      	sub	sp, #8
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	6078      	str	r0, [r7, #4]
 8001c48:	f000 f820 	bl	8001c8c <RCC_GetSystemClockFreq>
 8001c4c:	4602      	mov	r2, r0
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	601a      	str	r2, [r3, #0]
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	4618      	mov	r0, r3
 8001c58:	f000 f83a 	bl	8001cd0 <RCC_GetHCLKClockFreq>
 8001c5c:	4602      	mov	r2, r0
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	605a      	str	r2, [r3, #4]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	685b      	ldr	r3, [r3, #4]
 8001c66:	4618      	mov	r0, r3
 8001c68:	f000 f848 	bl	8001cfc <RCC_GetPCLK1ClockFreq>
 8001c6c:	4602      	mov	r2, r0
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	609a      	str	r2, [r3, #8]
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	685b      	ldr	r3, [r3, #4]
 8001c76:	4618      	mov	r0, r3
 8001c78:	f000 f854 	bl	8001d24 <RCC_GetPCLK2ClockFreq>
 8001c7c:	4602      	mov	r2, r0
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	60da      	str	r2, [r3, #12]
 8001c82:	bf00      	nop
 8001c84:	3708      	adds	r7, #8
 8001c86:	46bd      	mov	sp, r7
 8001c88:	bd80      	pop	{r7, pc}
	...

08001c8c <RCC_GetSystemClockFreq>:
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b082      	sub	sp, #8
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	2300      	movs	r3, #0
 8001c94:	607b      	str	r3, [r7, #4]
 8001c96:	f7ff ff7d 	bl	8001b94 <LL_RCC_GetSysClkSource>
 8001c9a:	4603      	mov	r3, r0
 8001c9c:	2b04      	cmp	r3, #4
 8001c9e:	d006      	beq.n	8001cae <RCC_GetSystemClockFreq+0x22>
 8001ca0:	2b08      	cmp	r3, #8
 8001ca2:	d007      	beq.n	8001cb4 <RCC_GetSystemClockFreq+0x28>
 8001ca4:	2b00      	cmp	r3, #0
 8001ca6:	d109      	bne.n	8001cbc <RCC_GetSystemClockFreq+0x30>
 8001ca8:	4b08      	ldr	r3, [pc, #32]	; (8001ccc <RCC_GetSystemClockFreq+0x40>)
 8001caa:	607b      	str	r3, [r7, #4]
 8001cac:	e009      	b.n	8001cc2 <RCC_GetSystemClockFreq+0x36>
 8001cae:	4b07      	ldr	r3, [pc, #28]	; (8001ccc <RCC_GetSystemClockFreq+0x40>)
 8001cb0:	607b      	str	r3, [r7, #4]
 8001cb2:	e006      	b.n	8001cc2 <RCC_GetSystemClockFreq+0x36>
 8001cb4:	f000 f84a 	bl	8001d4c <RCC_PLL_GetFreqDomain_SYS>
 8001cb8:	6078      	str	r0, [r7, #4]
 8001cba:	e002      	b.n	8001cc2 <RCC_GetSystemClockFreq+0x36>
 8001cbc:	4b03      	ldr	r3, [pc, #12]	; (8001ccc <RCC_GetSystemClockFreq+0x40>)
 8001cbe:	607b      	str	r3, [r7, #4]
 8001cc0:	bf00      	nop
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	3708      	adds	r7, #8
 8001cc8:	46bd      	mov	sp, r7
 8001cca:	bd80      	pop	{r7, pc}
 8001ccc:	007a1200 	.word	0x007a1200

08001cd0 <RCC_GetHCLKClockFreq>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	b082      	sub	sp, #8
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	6078      	str	r0, [r7, #4]
 8001cd8:	f7ff ff68 	bl	8001bac <LL_RCC_GetAHBPrescaler>
 8001cdc:	4603      	mov	r3, r0
 8001cde:	091b      	lsrs	r3, r3, #4
 8001ce0:	f003 030f 	and.w	r3, r3, #15
 8001ce4:	4a04      	ldr	r2, [pc, #16]	; (8001cf8 <RCC_GetHCLKClockFreq+0x28>)
 8001ce6:	5cd3      	ldrb	r3, [r2, r3]
 8001ce8:	461a      	mov	r2, r3
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	40d3      	lsrs	r3, r2
 8001cee:	4618      	mov	r0, r3
 8001cf0:	3708      	adds	r7, #8
 8001cf2:	46bd      	mov	sp, r7
 8001cf4:	bd80      	pop	{r7, pc}
 8001cf6:	bf00      	nop
 8001cf8:	080028a0 	.word	0x080028a0

08001cfc <RCC_GetPCLK1ClockFreq>:
 8001cfc:	b580      	push	{r7, lr}
 8001cfe:	b082      	sub	sp, #8
 8001d00:	af00      	add	r7, sp, #0
 8001d02:	6078      	str	r0, [r7, #4]
 8001d04:	f7ff ff5e 	bl	8001bc4 <LL_RCC_GetAPB1Prescaler>
 8001d08:	4603      	mov	r3, r0
 8001d0a:	0a1b      	lsrs	r3, r3, #8
 8001d0c:	4a04      	ldr	r2, [pc, #16]	; (8001d20 <RCC_GetPCLK1ClockFreq+0x24>)
 8001d0e:	5cd3      	ldrb	r3, [r2, r3]
 8001d10:	461a      	mov	r2, r3
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	40d3      	lsrs	r3, r2
 8001d16:	4618      	mov	r0, r3
 8001d18:	3708      	adds	r7, #8
 8001d1a:	46bd      	mov	sp, r7
 8001d1c:	bd80      	pop	{r7, pc}
 8001d1e:	bf00      	nop
 8001d20:	080028b0 	.word	0x080028b0

08001d24 <RCC_GetPCLK2ClockFreq>:
 8001d24:	b580      	push	{r7, lr}
 8001d26:	b082      	sub	sp, #8
 8001d28:	af00      	add	r7, sp, #0
 8001d2a:	6078      	str	r0, [r7, #4]
 8001d2c:	f7ff ff56 	bl	8001bdc <LL_RCC_GetAPB2Prescaler>
 8001d30:	4603      	mov	r3, r0
 8001d32:	0adb      	lsrs	r3, r3, #11
 8001d34:	4a04      	ldr	r2, [pc, #16]	; (8001d48 <RCC_GetPCLK2ClockFreq+0x24>)
 8001d36:	5cd3      	ldrb	r3, [r2, r3]
 8001d38:	461a      	mov	r2, r3
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	40d3      	lsrs	r3, r2
 8001d3e:	4618      	mov	r0, r3
 8001d40:	3708      	adds	r7, #8
 8001d42:	46bd      	mov	sp, r7
 8001d44:	bd80      	pop	{r7, pc}
 8001d46:	bf00      	nop
 8001d48:	080028b0 	.word	0x080028b0

08001d4c <RCC_PLL_GetFreqDomain_SYS>:
 8001d4c:	b580      	push	{r7, lr}
 8001d4e:	b082      	sub	sp, #8
 8001d50:	af00      	add	r7, sp, #0
 8001d52:	2300      	movs	r3, #0
 8001d54:	607b      	str	r3, [r7, #4]
 8001d56:	2300      	movs	r3, #0
 8001d58:	603b      	str	r3, [r7, #0]
 8001d5a:	f7ff ff4b 	bl	8001bf4 <LL_RCC_PLL_GetMainSource>
 8001d5e:	6038      	str	r0, [r7, #0]
 8001d60:	683b      	ldr	r3, [r7, #0]
 8001d62:	2b00      	cmp	r3, #0
 8001d64:	d003      	beq.n	8001d6e <RCC_PLL_GetFreqDomain_SYS+0x22>
 8001d66:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001d6a:	d003      	beq.n	8001d74 <RCC_PLL_GetFreqDomain_SYS+0x28>
 8001d6c:	e00b      	b.n	8001d86 <RCC_PLL_GetFreqDomain_SYS+0x3a>
 8001d6e:	4b0d      	ldr	r3, [pc, #52]	; (8001da4 <RCC_PLL_GetFreqDomain_SYS+0x58>)
 8001d70:	607b      	str	r3, [r7, #4]
 8001d72:	e00b      	b.n	8001d8c <RCC_PLL_GetFreqDomain_SYS+0x40>
 8001d74:	f7ff ff56 	bl	8001c24 <LL_RCC_PLL_GetPrediv>
 8001d78:	4603      	mov	r3, r0
 8001d7a:	3301      	adds	r3, #1
 8001d7c:	4a0a      	ldr	r2, [pc, #40]	; (8001da8 <RCC_PLL_GetFreqDomain_SYS+0x5c>)
 8001d7e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d82:	607b      	str	r3, [r7, #4]
 8001d84:	e002      	b.n	8001d8c <RCC_PLL_GetFreqDomain_SYS+0x40>
 8001d86:	4b07      	ldr	r3, [pc, #28]	; (8001da4 <RCC_PLL_GetFreqDomain_SYS+0x58>)
 8001d88:	607b      	str	r3, [r7, #4]
 8001d8a:	bf00      	nop
 8001d8c:	f7ff ff3e 	bl	8001c0c <LL_RCC_PLL_GetMultiplicator>
 8001d90:	4603      	mov	r3, r0
 8001d92:	0c9b      	lsrs	r3, r3, #18
 8001d94:	3302      	adds	r3, #2
 8001d96:	687a      	ldr	r2, [r7, #4]
 8001d98:	fb02 f303 	mul.w	r3, r2, r3
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	3708      	adds	r7, #8
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bd80      	pop	{r7, pc}
 8001da4:	003d0900 	.word	0x003d0900
 8001da8:	007a1200 	.word	0x007a1200

08001dac <LL_USART_IsEnabled>:
 8001dac:	b480      	push	{r7}
 8001dae:	b083      	sub	sp, #12
 8001db0:	af00      	add	r7, sp, #0
 8001db2:	6078      	str	r0, [r7, #4]
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	68db      	ldr	r3, [r3, #12]
 8001db8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001dbc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001dc0:	bf0c      	ite	eq
 8001dc2:	2301      	moveq	r3, #1
 8001dc4:	2300      	movne	r3, #0
 8001dc6:	b2db      	uxtb	r3, r3
 8001dc8:	4618      	mov	r0, r3
 8001dca:	370c      	adds	r7, #12
 8001dcc:	46bd      	mov	sp, r7
 8001dce:	bc80      	pop	{r7}
 8001dd0:	4770      	bx	lr

08001dd2 <LL_USART_SetStopBitsLength>:
 8001dd2:	b480      	push	{r7}
 8001dd4:	b083      	sub	sp, #12
 8001dd6:	af00      	add	r7, sp, #0
 8001dd8:	6078      	str	r0, [r7, #4]
 8001dda:	6039      	str	r1, [r7, #0]
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	691b      	ldr	r3, [r3, #16]
 8001de0:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8001de4:	683b      	ldr	r3, [r7, #0]
 8001de6:	431a      	orrs	r2, r3
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	611a      	str	r2, [r3, #16]
 8001dec:	bf00      	nop
 8001dee:	370c      	adds	r7, #12
 8001df0:	46bd      	mov	sp, r7
 8001df2:	bc80      	pop	{r7}
 8001df4:	4770      	bx	lr

08001df6 <LL_USART_SetHWFlowCtrl>:
 8001df6:	b480      	push	{r7}
 8001df8:	b083      	sub	sp, #12
 8001dfa:	af00      	add	r7, sp, #0
 8001dfc:	6078      	str	r0, [r7, #4]
 8001dfe:	6039      	str	r1, [r7, #0]
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	695b      	ldr	r3, [r3, #20]
 8001e04:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8001e08:	683b      	ldr	r3, [r7, #0]
 8001e0a:	431a      	orrs	r2, r3
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	615a      	str	r2, [r3, #20]
 8001e10:	bf00      	nop
 8001e12:	370c      	adds	r7, #12
 8001e14:	46bd      	mov	sp, r7
 8001e16:	bc80      	pop	{r7}
 8001e18:	4770      	bx	lr
	...

08001e1c <LL_USART_SetBaudRate>:
 8001e1c:	b480      	push	{r7}
 8001e1e:	b085      	sub	sp, #20
 8001e20:	af00      	add	r7, sp, #0
 8001e22:	60f8      	str	r0, [r7, #12]
 8001e24:	60b9      	str	r1, [r7, #8]
 8001e26:	607a      	str	r2, [r7, #4]
 8001e28:	68ba      	ldr	r2, [r7, #8]
 8001e2a:	4613      	mov	r3, r2
 8001e2c:	009b      	lsls	r3, r3, #2
 8001e2e:	4413      	add	r3, r2
 8001e30:	009a      	lsls	r2, r3, #2
 8001e32:	441a      	add	r2, r3
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	009b      	lsls	r3, r3, #2
 8001e38:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e3c:	4a25      	ldr	r2, [pc, #148]	; (8001ed4 <LL_USART_SetBaudRate+0xb8>)
 8001e3e:	fba2 2303 	umull	r2, r3, r2, r3
 8001e42:	095b      	lsrs	r3, r3, #5
 8001e44:	b29b      	uxth	r3, r3
 8001e46:	011b      	lsls	r3, r3, #4
 8001e48:	b299      	uxth	r1, r3
 8001e4a:	68ba      	ldr	r2, [r7, #8]
 8001e4c:	4613      	mov	r3, r2
 8001e4e:	009b      	lsls	r3, r3, #2
 8001e50:	4413      	add	r3, r2
 8001e52:	009a      	lsls	r2, r3, #2
 8001e54:	441a      	add	r2, r3
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	009b      	lsls	r3, r3, #2
 8001e5a:	fbb2 f2f3 	udiv	r2, r2, r3
 8001e5e:	4b1d      	ldr	r3, [pc, #116]	; (8001ed4 <LL_USART_SetBaudRate+0xb8>)
 8001e60:	fba3 0302 	umull	r0, r3, r3, r2
 8001e64:	095b      	lsrs	r3, r3, #5
 8001e66:	2064      	movs	r0, #100	; 0x64
 8001e68:	fb00 f303 	mul.w	r3, r0, r3
 8001e6c:	1ad3      	subs	r3, r2, r3
 8001e6e:	011b      	lsls	r3, r3, #4
 8001e70:	3332      	adds	r3, #50	; 0x32
 8001e72:	4a18      	ldr	r2, [pc, #96]	; (8001ed4 <LL_USART_SetBaudRate+0xb8>)
 8001e74:	fba2 2303 	umull	r2, r3, r2, r3
 8001e78:	095b      	lsrs	r3, r3, #5
 8001e7a:	b29b      	uxth	r3, r3
 8001e7c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001e80:	b29b      	uxth	r3, r3
 8001e82:	440b      	add	r3, r1
 8001e84:	b299      	uxth	r1, r3
 8001e86:	68ba      	ldr	r2, [r7, #8]
 8001e88:	4613      	mov	r3, r2
 8001e8a:	009b      	lsls	r3, r3, #2
 8001e8c:	4413      	add	r3, r2
 8001e8e:	009a      	lsls	r2, r3, #2
 8001e90:	441a      	add	r2, r3
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	009b      	lsls	r3, r3, #2
 8001e96:	fbb2 f2f3 	udiv	r2, r2, r3
 8001e9a:	4b0e      	ldr	r3, [pc, #56]	; (8001ed4 <LL_USART_SetBaudRate+0xb8>)
 8001e9c:	fba3 0302 	umull	r0, r3, r3, r2
 8001ea0:	095b      	lsrs	r3, r3, #5
 8001ea2:	2064      	movs	r0, #100	; 0x64
 8001ea4:	fb00 f303 	mul.w	r3, r0, r3
 8001ea8:	1ad3      	subs	r3, r2, r3
 8001eaa:	011b      	lsls	r3, r3, #4
 8001eac:	3332      	adds	r3, #50	; 0x32
 8001eae:	4a09      	ldr	r2, [pc, #36]	; (8001ed4 <LL_USART_SetBaudRate+0xb8>)
 8001eb0:	fba2 2303 	umull	r2, r3, r2, r3
 8001eb4:	095b      	lsrs	r3, r3, #5
 8001eb6:	b29b      	uxth	r3, r3
 8001eb8:	f003 030f 	and.w	r3, r3, #15
 8001ebc:	b29b      	uxth	r3, r3
 8001ebe:	440b      	add	r3, r1
 8001ec0:	b29b      	uxth	r3, r3
 8001ec2:	461a      	mov	r2, r3
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	609a      	str	r2, [r3, #8]
 8001ec8:	bf00      	nop
 8001eca:	3714      	adds	r7, #20
 8001ecc:	46bd      	mov	sp, r7
 8001ece:	bc80      	pop	{r7}
 8001ed0:	4770      	bx	lr
 8001ed2:	bf00      	nop
 8001ed4:	51eb851f 	.word	0x51eb851f

08001ed8 <LL_USART_Init>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b088      	sub	sp, #32
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	6039      	str	r1, [r7, #0]
 8001ee2:	2301      	movs	r3, #1
 8001ee4:	77fb      	strb	r3, [r7, #31]
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	61bb      	str	r3, [r7, #24]
 8001eea:	6878      	ldr	r0, [r7, #4]
 8001eec:	f7ff ff5e 	bl	8001dac <LL_USART_IsEnabled>
 8001ef0:	4603      	mov	r3, r0
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d145      	bne.n	8001f82 <LL_USART_Init+0xaa>
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	68db      	ldr	r3, [r3, #12]
 8001efa:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8001efe:	f023 030c 	bic.w	r3, r3, #12
 8001f02:	683a      	ldr	r2, [r7, #0]
 8001f04:	6851      	ldr	r1, [r2, #4]
 8001f06:	683a      	ldr	r2, [r7, #0]
 8001f08:	68d2      	ldr	r2, [r2, #12]
 8001f0a:	4311      	orrs	r1, r2
 8001f0c:	683a      	ldr	r2, [r7, #0]
 8001f0e:	6912      	ldr	r2, [r2, #16]
 8001f10:	430a      	orrs	r2, r1
 8001f12:	431a      	orrs	r2, r3
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	60da      	str	r2, [r3, #12]
 8001f18:	683b      	ldr	r3, [r7, #0]
 8001f1a:	689b      	ldr	r3, [r3, #8]
 8001f1c:	4619      	mov	r1, r3
 8001f1e:	6878      	ldr	r0, [r7, #4]
 8001f20:	f7ff ff57 	bl	8001dd2 <LL_USART_SetStopBitsLength>
 8001f24:	683b      	ldr	r3, [r7, #0]
 8001f26:	695b      	ldr	r3, [r3, #20]
 8001f28:	4619      	mov	r1, r3
 8001f2a:	6878      	ldr	r0, [r7, #4]
 8001f2c:	f7ff ff63 	bl	8001df6 <LL_USART_SetHWFlowCtrl>
 8001f30:	f107 0308 	add.w	r3, r7, #8
 8001f34:	4618      	mov	r0, r3
 8001f36:	f7ff fe83 	bl	8001c40 <LL_RCC_GetSystemClocksFreq>
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	4a13      	ldr	r2, [pc, #76]	; (8001f8c <LL_USART_Init+0xb4>)
 8001f3e:	4293      	cmp	r3, r2
 8001f40:	d102      	bne.n	8001f48 <LL_USART_Init+0x70>
 8001f42:	697b      	ldr	r3, [r7, #20]
 8001f44:	61bb      	str	r3, [r7, #24]
 8001f46:	e00c      	b.n	8001f62 <LL_USART_Init+0x8a>
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	4a11      	ldr	r2, [pc, #68]	; (8001f90 <LL_USART_Init+0xb8>)
 8001f4c:	4293      	cmp	r3, r2
 8001f4e:	d102      	bne.n	8001f56 <LL_USART_Init+0x7e>
 8001f50:	693b      	ldr	r3, [r7, #16]
 8001f52:	61bb      	str	r3, [r7, #24]
 8001f54:	e005      	b.n	8001f62 <LL_USART_Init+0x8a>
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	4a0e      	ldr	r2, [pc, #56]	; (8001f94 <LL_USART_Init+0xbc>)
 8001f5a:	4293      	cmp	r3, r2
 8001f5c:	d101      	bne.n	8001f62 <LL_USART_Init+0x8a>
 8001f5e:	693b      	ldr	r3, [r7, #16]
 8001f60:	61bb      	str	r3, [r7, #24]
 8001f62:	69bb      	ldr	r3, [r7, #24]
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d00c      	beq.n	8001f82 <LL_USART_Init+0xaa>
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d008      	beq.n	8001f82 <LL_USART_Init+0xaa>
 8001f70:	2300      	movs	r3, #0
 8001f72:	77fb      	strb	r3, [r7, #31]
 8001f74:	683b      	ldr	r3, [r7, #0]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	461a      	mov	r2, r3
 8001f7a:	69b9      	ldr	r1, [r7, #24]
 8001f7c:	6878      	ldr	r0, [r7, #4]
 8001f7e:	f7ff ff4d 	bl	8001e1c <LL_USART_SetBaudRate>
 8001f82:	7ffb      	ldrb	r3, [r7, #31]
 8001f84:	4618      	mov	r0, r3
 8001f86:	3720      	adds	r7, #32
 8001f88:	46bd      	mov	sp, r7
 8001f8a:	bd80      	pop	{r7, pc}
 8001f8c:	40013800 	.word	0x40013800
 8001f90:	40004400 	.word	0x40004400
 8001f94:	40004800 	.word	0x40004800

08001f98 <__errno>:
 8001f98:	4b01      	ldr	r3, [pc, #4]	; (8001fa0 <__errno+0x8>)
 8001f9a:	6818      	ldr	r0, [r3, #0]
 8001f9c:	4770      	bx	lr
 8001f9e:	bf00      	nop
 8001fa0:	2000000c 	.word	0x2000000c

08001fa4 <__libc_init_array>:
 8001fa4:	b570      	push	{r4, r5, r6, lr}
 8001fa6:	2500      	movs	r5, #0
 8001fa8:	4e0c      	ldr	r6, [pc, #48]	; (8001fdc <__libc_init_array+0x38>)
 8001faa:	4c0d      	ldr	r4, [pc, #52]	; (8001fe0 <__libc_init_array+0x3c>)
 8001fac:	1ba4      	subs	r4, r4, r6
 8001fae:	10a4      	asrs	r4, r4, #2
 8001fb0:	42a5      	cmp	r5, r4
 8001fb2:	d109      	bne.n	8001fc8 <__libc_init_array+0x24>
 8001fb4:	f000 fc34 	bl	8002820 <_init>
 8001fb8:	2500      	movs	r5, #0
 8001fba:	4e0a      	ldr	r6, [pc, #40]	; (8001fe4 <__libc_init_array+0x40>)
 8001fbc:	4c0a      	ldr	r4, [pc, #40]	; (8001fe8 <__libc_init_array+0x44>)
 8001fbe:	1ba4      	subs	r4, r4, r6
 8001fc0:	10a4      	asrs	r4, r4, #2
 8001fc2:	42a5      	cmp	r5, r4
 8001fc4:	d105      	bne.n	8001fd2 <__libc_init_array+0x2e>
 8001fc6:	bd70      	pop	{r4, r5, r6, pc}
 8001fc8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001fcc:	4798      	blx	r3
 8001fce:	3501      	adds	r5, #1
 8001fd0:	e7ee      	b.n	8001fb0 <__libc_init_array+0xc>
 8001fd2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001fd6:	4798      	blx	r3
 8001fd8:	3501      	adds	r5, #1
 8001fda:	e7f2      	b.n	8001fc2 <__libc_init_array+0x1e>
 8001fdc:	080028ec 	.word	0x080028ec
 8001fe0:	080028ec 	.word	0x080028ec
 8001fe4:	080028ec 	.word	0x080028ec
 8001fe8:	080028f0 	.word	0x080028f0

08001fec <memset>:
 8001fec:	4603      	mov	r3, r0
 8001fee:	4402      	add	r2, r0
 8001ff0:	4293      	cmp	r3, r2
 8001ff2:	d100      	bne.n	8001ff6 <memset+0xa>
 8001ff4:	4770      	bx	lr
 8001ff6:	f803 1b01 	strb.w	r1, [r3], #1
 8001ffa:	e7f9      	b.n	8001ff0 <memset+0x4>

08001ffc <siprintf>:
 8001ffc:	b40e      	push	{r1, r2, r3}
 8001ffe:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002002:	b500      	push	{lr}
 8002004:	b09c      	sub	sp, #112	; 0x70
 8002006:	ab1d      	add	r3, sp, #116	; 0x74
 8002008:	9002      	str	r0, [sp, #8]
 800200a:	9006      	str	r0, [sp, #24]
 800200c:	9107      	str	r1, [sp, #28]
 800200e:	9104      	str	r1, [sp, #16]
 8002010:	4808      	ldr	r0, [pc, #32]	; (8002034 <siprintf+0x38>)
 8002012:	4909      	ldr	r1, [pc, #36]	; (8002038 <siprintf+0x3c>)
 8002014:	f853 2b04 	ldr.w	r2, [r3], #4
 8002018:	9105      	str	r1, [sp, #20]
 800201a:	6800      	ldr	r0, [r0, #0]
 800201c:	a902      	add	r1, sp, #8
 800201e:	9301      	str	r3, [sp, #4]
 8002020:	f000 f866 	bl	80020f0 <_svfiprintf_r>
 8002024:	2200      	movs	r2, #0
 8002026:	9b02      	ldr	r3, [sp, #8]
 8002028:	701a      	strb	r2, [r3, #0]
 800202a:	b01c      	add	sp, #112	; 0x70
 800202c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002030:	b003      	add	sp, #12
 8002032:	4770      	bx	lr
 8002034:	2000000c 	.word	0x2000000c
 8002038:	ffff0208 	.word	0xffff0208

0800203c <__ssputs_r>:
 800203c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002040:	688e      	ldr	r6, [r1, #8]
 8002042:	4682      	mov	sl, r0
 8002044:	429e      	cmp	r6, r3
 8002046:	460c      	mov	r4, r1
 8002048:	4690      	mov	r8, r2
 800204a:	4699      	mov	r9, r3
 800204c:	d837      	bhi.n	80020be <__ssputs_r+0x82>
 800204e:	898a      	ldrh	r2, [r1, #12]
 8002050:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8002054:	d031      	beq.n	80020ba <__ssputs_r+0x7e>
 8002056:	2302      	movs	r3, #2
 8002058:	6825      	ldr	r5, [r4, #0]
 800205a:	6909      	ldr	r1, [r1, #16]
 800205c:	1a6f      	subs	r7, r5, r1
 800205e:	6965      	ldr	r5, [r4, #20]
 8002060:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8002064:	fb95 f5f3 	sdiv	r5, r5, r3
 8002068:	f109 0301 	add.w	r3, r9, #1
 800206c:	443b      	add	r3, r7
 800206e:	429d      	cmp	r5, r3
 8002070:	bf38      	it	cc
 8002072:	461d      	movcc	r5, r3
 8002074:	0553      	lsls	r3, r2, #21
 8002076:	d530      	bpl.n	80020da <__ssputs_r+0x9e>
 8002078:	4629      	mov	r1, r5
 800207a:	f000 fb37 	bl	80026ec <_malloc_r>
 800207e:	4606      	mov	r6, r0
 8002080:	b950      	cbnz	r0, 8002098 <__ssputs_r+0x5c>
 8002082:	230c      	movs	r3, #12
 8002084:	f04f 30ff 	mov.w	r0, #4294967295
 8002088:	f8ca 3000 	str.w	r3, [sl]
 800208c:	89a3      	ldrh	r3, [r4, #12]
 800208e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002092:	81a3      	strh	r3, [r4, #12]
 8002094:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002098:	463a      	mov	r2, r7
 800209a:	6921      	ldr	r1, [r4, #16]
 800209c:	f000 fab6 	bl	800260c <memcpy>
 80020a0:	89a3      	ldrh	r3, [r4, #12]
 80020a2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80020a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80020aa:	81a3      	strh	r3, [r4, #12]
 80020ac:	6126      	str	r6, [r4, #16]
 80020ae:	443e      	add	r6, r7
 80020b0:	6026      	str	r6, [r4, #0]
 80020b2:	464e      	mov	r6, r9
 80020b4:	6165      	str	r5, [r4, #20]
 80020b6:	1bed      	subs	r5, r5, r7
 80020b8:	60a5      	str	r5, [r4, #8]
 80020ba:	454e      	cmp	r6, r9
 80020bc:	d900      	bls.n	80020c0 <__ssputs_r+0x84>
 80020be:	464e      	mov	r6, r9
 80020c0:	4632      	mov	r2, r6
 80020c2:	4641      	mov	r1, r8
 80020c4:	6820      	ldr	r0, [r4, #0]
 80020c6:	f000 faac 	bl	8002622 <memmove>
 80020ca:	68a3      	ldr	r3, [r4, #8]
 80020cc:	2000      	movs	r0, #0
 80020ce:	1b9b      	subs	r3, r3, r6
 80020d0:	60a3      	str	r3, [r4, #8]
 80020d2:	6823      	ldr	r3, [r4, #0]
 80020d4:	441e      	add	r6, r3
 80020d6:	6026      	str	r6, [r4, #0]
 80020d8:	e7dc      	b.n	8002094 <__ssputs_r+0x58>
 80020da:	462a      	mov	r2, r5
 80020dc:	f000 fb60 	bl	80027a0 <_realloc_r>
 80020e0:	4606      	mov	r6, r0
 80020e2:	2800      	cmp	r0, #0
 80020e4:	d1e2      	bne.n	80020ac <__ssputs_r+0x70>
 80020e6:	6921      	ldr	r1, [r4, #16]
 80020e8:	4650      	mov	r0, sl
 80020ea:	f000 fab3 	bl	8002654 <_free_r>
 80020ee:	e7c8      	b.n	8002082 <__ssputs_r+0x46>

080020f0 <_svfiprintf_r>:
 80020f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020f4:	461d      	mov	r5, r3
 80020f6:	898b      	ldrh	r3, [r1, #12]
 80020f8:	b09d      	sub	sp, #116	; 0x74
 80020fa:	061f      	lsls	r7, r3, #24
 80020fc:	4680      	mov	r8, r0
 80020fe:	460c      	mov	r4, r1
 8002100:	4616      	mov	r6, r2
 8002102:	d50f      	bpl.n	8002124 <_svfiprintf_r+0x34>
 8002104:	690b      	ldr	r3, [r1, #16]
 8002106:	b96b      	cbnz	r3, 8002124 <_svfiprintf_r+0x34>
 8002108:	2140      	movs	r1, #64	; 0x40
 800210a:	f000 faef 	bl	80026ec <_malloc_r>
 800210e:	6020      	str	r0, [r4, #0]
 8002110:	6120      	str	r0, [r4, #16]
 8002112:	b928      	cbnz	r0, 8002120 <_svfiprintf_r+0x30>
 8002114:	230c      	movs	r3, #12
 8002116:	f8c8 3000 	str.w	r3, [r8]
 800211a:	f04f 30ff 	mov.w	r0, #4294967295
 800211e:	e0c8      	b.n	80022b2 <_svfiprintf_r+0x1c2>
 8002120:	2340      	movs	r3, #64	; 0x40
 8002122:	6163      	str	r3, [r4, #20]
 8002124:	2300      	movs	r3, #0
 8002126:	9309      	str	r3, [sp, #36]	; 0x24
 8002128:	2320      	movs	r3, #32
 800212a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800212e:	2330      	movs	r3, #48	; 0x30
 8002130:	f04f 0b01 	mov.w	fp, #1
 8002134:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002138:	9503      	str	r5, [sp, #12]
 800213a:	4637      	mov	r7, r6
 800213c:	463d      	mov	r5, r7
 800213e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8002142:	b10b      	cbz	r3, 8002148 <_svfiprintf_r+0x58>
 8002144:	2b25      	cmp	r3, #37	; 0x25
 8002146:	d13e      	bne.n	80021c6 <_svfiprintf_r+0xd6>
 8002148:	ebb7 0a06 	subs.w	sl, r7, r6
 800214c:	d00b      	beq.n	8002166 <_svfiprintf_r+0x76>
 800214e:	4653      	mov	r3, sl
 8002150:	4632      	mov	r2, r6
 8002152:	4621      	mov	r1, r4
 8002154:	4640      	mov	r0, r8
 8002156:	f7ff ff71 	bl	800203c <__ssputs_r>
 800215a:	3001      	adds	r0, #1
 800215c:	f000 80a4 	beq.w	80022a8 <_svfiprintf_r+0x1b8>
 8002160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002162:	4453      	add	r3, sl
 8002164:	9309      	str	r3, [sp, #36]	; 0x24
 8002166:	783b      	ldrb	r3, [r7, #0]
 8002168:	2b00      	cmp	r3, #0
 800216a:	f000 809d 	beq.w	80022a8 <_svfiprintf_r+0x1b8>
 800216e:	2300      	movs	r3, #0
 8002170:	f04f 32ff 	mov.w	r2, #4294967295
 8002174:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002178:	9304      	str	r3, [sp, #16]
 800217a:	9307      	str	r3, [sp, #28]
 800217c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002180:	931a      	str	r3, [sp, #104]	; 0x68
 8002182:	462f      	mov	r7, r5
 8002184:	2205      	movs	r2, #5
 8002186:	f817 1b01 	ldrb.w	r1, [r7], #1
 800218a:	4850      	ldr	r0, [pc, #320]	; (80022cc <_svfiprintf_r+0x1dc>)
 800218c:	f000 fa30 	bl	80025f0 <memchr>
 8002190:	9b04      	ldr	r3, [sp, #16]
 8002192:	b9d0      	cbnz	r0, 80021ca <_svfiprintf_r+0xda>
 8002194:	06d9      	lsls	r1, r3, #27
 8002196:	bf44      	itt	mi
 8002198:	2220      	movmi	r2, #32
 800219a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800219e:	071a      	lsls	r2, r3, #28
 80021a0:	bf44      	itt	mi
 80021a2:	222b      	movmi	r2, #43	; 0x2b
 80021a4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80021a8:	782a      	ldrb	r2, [r5, #0]
 80021aa:	2a2a      	cmp	r2, #42	; 0x2a
 80021ac:	d015      	beq.n	80021da <_svfiprintf_r+0xea>
 80021ae:	462f      	mov	r7, r5
 80021b0:	2000      	movs	r0, #0
 80021b2:	250a      	movs	r5, #10
 80021b4:	9a07      	ldr	r2, [sp, #28]
 80021b6:	4639      	mov	r1, r7
 80021b8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80021bc:	3b30      	subs	r3, #48	; 0x30
 80021be:	2b09      	cmp	r3, #9
 80021c0:	d94d      	bls.n	800225e <_svfiprintf_r+0x16e>
 80021c2:	b1b8      	cbz	r0, 80021f4 <_svfiprintf_r+0x104>
 80021c4:	e00f      	b.n	80021e6 <_svfiprintf_r+0xf6>
 80021c6:	462f      	mov	r7, r5
 80021c8:	e7b8      	b.n	800213c <_svfiprintf_r+0x4c>
 80021ca:	4a40      	ldr	r2, [pc, #256]	; (80022cc <_svfiprintf_r+0x1dc>)
 80021cc:	463d      	mov	r5, r7
 80021ce:	1a80      	subs	r0, r0, r2
 80021d0:	fa0b f000 	lsl.w	r0, fp, r0
 80021d4:	4318      	orrs	r0, r3
 80021d6:	9004      	str	r0, [sp, #16]
 80021d8:	e7d3      	b.n	8002182 <_svfiprintf_r+0x92>
 80021da:	9a03      	ldr	r2, [sp, #12]
 80021dc:	1d11      	adds	r1, r2, #4
 80021de:	6812      	ldr	r2, [r2, #0]
 80021e0:	9103      	str	r1, [sp, #12]
 80021e2:	2a00      	cmp	r2, #0
 80021e4:	db01      	blt.n	80021ea <_svfiprintf_r+0xfa>
 80021e6:	9207      	str	r2, [sp, #28]
 80021e8:	e004      	b.n	80021f4 <_svfiprintf_r+0x104>
 80021ea:	4252      	negs	r2, r2
 80021ec:	f043 0302 	orr.w	r3, r3, #2
 80021f0:	9207      	str	r2, [sp, #28]
 80021f2:	9304      	str	r3, [sp, #16]
 80021f4:	783b      	ldrb	r3, [r7, #0]
 80021f6:	2b2e      	cmp	r3, #46	; 0x2e
 80021f8:	d10c      	bne.n	8002214 <_svfiprintf_r+0x124>
 80021fa:	787b      	ldrb	r3, [r7, #1]
 80021fc:	2b2a      	cmp	r3, #42	; 0x2a
 80021fe:	d133      	bne.n	8002268 <_svfiprintf_r+0x178>
 8002200:	9b03      	ldr	r3, [sp, #12]
 8002202:	3702      	adds	r7, #2
 8002204:	1d1a      	adds	r2, r3, #4
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	9203      	str	r2, [sp, #12]
 800220a:	2b00      	cmp	r3, #0
 800220c:	bfb8      	it	lt
 800220e:	f04f 33ff 	movlt.w	r3, #4294967295
 8002212:	9305      	str	r3, [sp, #20]
 8002214:	4d2e      	ldr	r5, [pc, #184]	; (80022d0 <_svfiprintf_r+0x1e0>)
 8002216:	2203      	movs	r2, #3
 8002218:	7839      	ldrb	r1, [r7, #0]
 800221a:	4628      	mov	r0, r5
 800221c:	f000 f9e8 	bl	80025f0 <memchr>
 8002220:	b138      	cbz	r0, 8002232 <_svfiprintf_r+0x142>
 8002222:	2340      	movs	r3, #64	; 0x40
 8002224:	1b40      	subs	r0, r0, r5
 8002226:	fa03 f000 	lsl.w	r0, r3, r0
 800222a:	9b04      	ldr	r3, [sp, #16]
 800222c:	3701      	adds	r7, #1
 800222e:	4303      	orrs	r3, r0
 8002230:	9304      	str	r3, [sp, #16]
 8002232:	7839      	ldrb	r1, [r7, #0]
 8002234:	2206      	movs	r2, #6
 8002236:	4827      	ldr	r0, [pc, #156]	; (80022d4 <_svfiprintf_r+0x1e4>)
 8002238:	1c7e      	adds	r6, r7, #1
 800223a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800223e:	f000 f9d7 	bl	80025f0 <memchr>
 8002242:	2800      	cmp	r0, #0
 8002244:	d038      	beq.n	80022b8 <_svfiprintf_r+0x1c8>
 8002246:	4b24      	ldr	r3, [pc, #144]	; (80022d8 <_svfiprintf_r+0x1e8>)
 8002248:	bb13      	cbnz	r3, 8002290 <_svfiprintf_r+0x1a0>
 800224a:	9b03      	ldr	r3, [sp, #12]
 800224c:	3307      	adds	r3, #7
 800224e:	f023 0307 	bic.w	r3, r3, #7
 8002252:	3308      	adds	r3, #8
 8002254:	9303      	str	r3, [sp, #12]
 8002256:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002258:	444b      	add	r3, r9
 800225a:	9309      	str	r3, [sp, #36]	; 0x24
 800225c:	e76d      	b.n	800213a <_svfiprintf_r+0x4a>
 800225e:	fb05 3202 	mla	r2, r5, r2, r3
 8002262:	2001      	movs	r0, #1
 8002264:	460f      	mov	r7, r1
 8002266:	e7a6      	b.n	80021b6 <_svfiprintf_r+0xc6>
 8002268:	2300      	movs	r3, #0
 800226a:	250a      	movs	r5, #10
 800226c:	4619      	mov	r1, r3
 800226e:	3701      	adds	r7, #1
 8002270:	9305      	str	r3, [sp, #20]
 8002272:	4638      	mov	r0, r7
 8002274:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002278:	3a30      	subs	r2, #48	; 0x30
 800227a:	2a09      	cmp	r2, #9
 800227c:	d903      	bls.n	8002286 <_svfiprintf_r+0x196>
 800227e:	2b00      	cmp	r3, #0
 8002280:	d0c8      	beq.n	8002214 <_svfiprintf_r+0x124>
 8002282:	9105      	str	r1, [sp, #20]
 8002284:	e7c6      	b.n	8002214 <_svfiprintf_r+0x124>
 8002286:	fb05 2101 	mla	r1, r5, r1, r2
 800228a:	2301      	movs	r3, #1
 800228c:	4607      	mov	r7, r0
 800228e:	e7f0      	b.n	8002272 <_svfiprintf_r+0x182>
 8002290:	ab03      	add	r3, sp, #12
 8002292:	9300      	str	r3, [sp, #0]
 8002294:	4622      	mov	r2, r4
 8002296:	4b11      	ldr	r3, [pc, #68]	; (80022dc <_svfiprintf_r+0x1ec>)
 8002298:	a904      	add	r1, sp, #16
 800229a:	4640      	mov	r0, r8
 800229c:	f3af 8000 	nop.w
 80022a0:	f1b0 3fff 	cmp.w	r0, #4294967295
 80022a4:	4681      	mov	r9, r0
 80022a6:	d1d6      	bne.n	8002256 <_svfiprintf_r+0x166>
 80022a8:	89a3      	ldrh	r3, [r4, #12]
 80022aa:	065b      	lsls	r3, r3, #25
 80022ac:	f53f af35 	bmi.w	800211a <_svfiprintf_r+0x2a>
 80022b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80022b2:	b01d      	add	sp, #116	; 0x74
 80022b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022b8:	ab03      	add	r3, sp, #12
 80022ba:	9300      	str	r3, [sp, #0]
 80022bc:	4622      	mov	r2, r4
 80022be:	4b07      	ldr	r3, [pc, #28]	; (80022dc <_svfiprintf_r+0x1ec>)
 80022c0:	a904      	add	r1, sp, #16
 80022c2:	4640      	mov	r0, r8
 80022c4:	f000 f882 	bl	80023cc <_printf_i>
 80022c8:	e7ea      	b.n	80022a0 <_svfiprintf_r+0x1b0>
 80022ca:	bf00      	nop
 80022cc:	080028b8 	.word	0x080028b8
 80022d0:	080028be 	.word	0x080028be
 80022d4:	080028c2 	.word	0x080028c2
 80022d8:	00000000 	.word	0x00000000
 80022dc:	0800203d 	.word	0x0800203d

080022e0 <_printf_common>:
 80022e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80022e4:	4691      	mov	r9, r2
 80022e6:	461f      	mov	r7, r3
 80022e8:	688a      	ldr	r2, [r1, #8]
 80022ea:	690b      	ldr	r3, [r1, #16]
 80022ec:	4606      	mov	r6, r0
 80022ee:	4293      	cmp	r3, r2
 80022f0:	bfb8      	it	lt
 80022f2:	4613      	movlt	r3, r2
 80022f4:	f8c9 3000 	str.w	r3, [r9]
 80022f8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80022fc:	460c      	mov	r4, r1
 80022fe:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002302:	b112      	cbz	r2, 800230a <_printf_common+0x2a>
 8002304:	3301      	adds	r3, #1
 8002306:	f8c9 3000 	str.w	r3, [r9]
 800230a:	6823      	ldr	r3, [r4, #0]
 800230c:	0699      	lsls	r1, r3, #26
 800230e:	bf42      	ittt	mi
 8002310:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002314:	3302      	addmi	r3, #2
 8002316:	f8c9 3000 	strmi.w	r3, [r9]
 800231a:	6825      	ldr	r5, [r4, #0]
 800231c:	f015 0506 	ands.w	r5, r5, #6
 8002320:	d107      	bne.n	8002332 <_printf_common+0x52>
 8002322:	f104 0a19 	add.w	sl, r4, #25
 8002326:	68e3      	ldr	r3, [r4, #12]
 8002328:	f8d9 2000 	ldr.w	r2, [r9]
 800232c:	1a9b      	subs	r3, r3, r2
 800232e:	42ab      	cmp	r3, r5
 8002330:	dc29      	bgt.n	8002386 <_printf_common+0xa6>
 8002332:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8002336:	6822      	ldr	r2, [r4, #0]
 8002338:	3300      	adds	r3, #0
 800233a:	bf18      	it	ne
 800233c:	2301      	movne	r3, #1
 800233e:	0692      	lsls	r2, r2, #26
 8002340:	d42e      	bmi.n	80023a0 <_printf_common+0xc0>
 8002342:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002346:	4639      	mov	r1, r7
 8002348:	4630      	mov	r0, r6
 800234a:	47c0      	blx	r8
 800234c:	3001      	adds	r0, #1
 800234e:	d021      	beq.n	8002394 <_printf_common+0xb4>
 8002350:	6823      	ldr	r3, [r4, #0]
 8002352:	68e5      	ldr	r5, [r4, #12]
 8002354:	f003 0306 	and.w	r3, r3, #6
 8002358:	2b04      	cmp	r3, #4
 800235a:	bf18      	it	ne
 800235c:	2500      	movne	r5, #0
 800235e:	f8d9 2000 	ldr.w	r2, [r9]
 8002362:	f04f 0900 	mov.w	r9, #0
 8002366:	bf08      	it	eq
 8002368:	1aad      	subeq	r5, r5, r2
 800236a:	68a3      	ldr	r3, [r4, #8]
 800236c:	6922      	ldr	r2, [r4, #16]
 800236e:	bf08      	it	eq
 8002370:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002374:	4293      	cmp	r3, r2
 8002376:	bfc4      	itt	gt
 8002378:	1a9b      	subgt	r3, r3, r2
 800237a:	18ed      	addgt	r5, r5, r3
 800237c:	341a      	adds	r4, #26
 800237e:	454d      	cmp	r5, r9
 8002380:	d11a      	bne.n	80023b8 <_printf_common+0xd8>
 8002382:	2000      	movs	r0, #0
 8002384:	e008      	b.n	8002398 <_printf_common+0xb8>
 8002386:	2301      	movs	r3, #1
 8002388:	4652      	mov	r2, sl
 800238a:	4639      	mov	r1, r7
 800238c:	4630      	mov	r0, r6
 800238e:	47c0      	blx	r8
 8002390:	3001      	adds	r0, #1
 8002392:	d103      	bne.n	800239c <_printf_common+0xbc>
 8002394:	f04f 30ff 	mov.w	r0, #4294967295
 8002398:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800239c:	3501      	adds	r5, #1
 800239e:	e7c2      	b.n	8002326 <_printf_common+0x46>
 80023a0:	2030      	movs	r0, #48	; 0x30
 80023a2:	18e1      	adds	r1, r4, r3
 80023a4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80023a8:	1c5a      	adds	r2, r3, #1
 80023aa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80023ae:	4422      	add	r2, r4
 80023b0:	3302      	adds	r3, #2
 80023b2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80023b6:	e7c4      	b.n	8002342 <_printf_common+0x62>
 80023b8:	2301      	movs	r3, #1
 80023ba:	4622      	mov	r2, r4
 80023bc:	4639      	mov	r1, r7
 80023be:	4630      	mov	r0, r6
 80023c0:	47c0      	blx	r8
 80023c2:	3001      	adds	r0, #1
 80023c4:	d0e6      	beq.n	8002394 <_printf_common+0xb4>
 80023c6:	f109 0901 	add.w	r9, r9, #1
 80023ca:	e7d8      	b.n	800237e <_printf_common+0x9e>

080023cc <_printf_i>:
 80023cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80023d0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80023d4:	460c      	mov	r4, r1
 80023d6:	7e09      	ldrb	r1, [r1, #24]
 80023d8:	b085      	sub	sp, #20
 80023da:	296e      	cmp	r1, #110	; 0x6e
 80023dc:	4617      	mov	r7, r2
 80023de:	4606      	mov	r6, r0
 80023e0:	4698      	mov	r8, r3
 80023e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80023e4:	f000 80b3 	beq.w	800254e <_printf_i+0x182>
 80023e8:	d822      	bhi.n	8002430 <_printf_i+0x64>
 80023ea:	2963      	cmp	r1, #99	; 0x63
 80023ec:	d036      	beq.n	800245c <_printf_i+0x90>
 80023ee:	d80a      	bhi.n	8002406 <_printf_i+0x3a>
 80023f0:	2900      	cmp	r1, #0
 80023f2:	f000 80b9 	beq.w	8002568 <_printf_i+0x19c>
 80023f6:	2958      	cmp	r1, #88	; 0x58
 80023f8:	f000 8083 	beq.w	8002502 <_printf_i+0x136>
 80023fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002400:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002404:	e032      	b.n	800246c <_printf_i+0xa0>
 8002406:	2964      	cmp	r1, #100	; 0x64
 8002408:	d001      	beq.n	800240e <_printf_i+0x42>
 800240a:	2969      	cmp	r1, #105	; 0x69
 800240c:	d1f6      	bne.n	80023fc <_printf_i+0x30>
 800240e:	6820      	ldr	r0, [r4, #0]
 8002410:	6813      	ldr	r3, [r2, #0]
 8002412:	0605      	lsls	r5, r0, #24
 8002414:	f103 0104 	add.w	r1, r3, #4
 8002418:	d52a      	bpl.n	8002470 <_printf_i+0xa4>
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	6011      	str	r1, [r2, #0]
 800241e:	2b00      	cmp	r3, #0
 8002420:	da03      	bge.n	800242a <_printf_i+0x5e>
 8002422:	222d      	movs	r2, #45	; 0x2d
 8002424:	425b      	negs	r3, r3
 8002426:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800242a:	486f      	ldr	r0, [pc, #444]	; (80025e8 <_printf_i+0x21c>)
 800242c:	220a      	movs	r2, #10
 800242e:	e039      	b.n	80024a4 <_printf_i+0xd8>
 8002430:	2973      	cmp	r1, #115	; 0x73
 8002432:	f000 809d 	beq.w	8002570 <_printf_i+0x1a4>
 8002436:	d808      	bhi.n	800244a <_printf_i+0x7e>
 8002438:	296f      	cmp	r1, #111	; 0x6f
 800243a:	d020      	beq.n	800247e <_printf_i+0xb2>
 800243c:	2970      	cmp	r1, #112	; 0x70
 800243e:	d1dd      	bne.n	80023fc <_printf_i+0x30>
 8002440:	6823      	ldr	r3, [r4, #0]
 8002442:	f043 0320 	orr.w	r3, r3, #32
 8002446:	6023      	str	r3, [r4, #0]
 8002448:	e003      	b.n	8002452 <_printf_i+0x86>
 800244a:	2975      	cmp	r1, #117	; 0x75
 800244c:	d017      	beq.n	800247e <_printf_i+0xb2>
 800244e:	2978      	cmp	r1, #120	; 0x78
 8002450:	d1d4      	bne.n	80023fc <_printf_i+0x30>
 8002452:	2378      	movs	r3, #120	; 0x78
 8002454:	4865      	ldr	r0, [pc, #404]	; (80025ec <_printf_i+0x220>)
 8002456:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800245a:	e055      	b.n	8002508 <_printf_i+0x13c>
 800245c:	6813      	ldr	r3, [r2, #0]
 800245e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002462:	1d19      	adds	r1, r3, #4
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	6011      	str	r1, [r2, #0]
 8002468:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800246c:	2301      	movs	r3, #1
 800246e:	e08c      	b.n	800258a <_printf_i+0x1be>
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002476:	6011      	str	r1, [r2, #0]
 8002478:	bf18      	it	ne
 800247a:	b21b      	sxthne	r3, r3
 800247c:	e7cf      	b.n	800241e <_printf_i+0x52>
 800247e:	6813      	ldr	r3, [r2, #0]
 8002480:	6825      	ldr	r5, [r4, #0]
 8002482:	1d18      	adds	r0, r3, #4
 8002484:	6010      	str	r0, [r2, #0]
 8002486:	0628      	lsls	r0, r5, #24
 8002488:	d501      	bpl.n	800248e <_printf_i+0xc2>
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	e002      	b.n	8002494 <_printf_i+0xc8>
 800248e:	0668      	lsls	r0, r5, #25
 8002490:	d5fb      	bpl.n	800248a <_printf_i+0xbe>
 8002492:	881b      	ldrh	r3, [r3, #0]
 8002494:	296f      	cmp	r1, #111	; 0x6f
 8002496:	bf14      	ite	ne
 8002498:	220a      	movne	r2, #10
 800249a:	2208      	moveq	r2, #8
 800249c:	4852      	ldr	r0, [pc, #328]	; (80025e8 <_printf_i+0x21c>)
 800249e:	2100      	movs	r1, #0
 80024a0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80024a4:	6865      	ldr	r5, [r4, #4]
 80024a6:	2d00      	cmp	r5, #0
 80024a8:	60a5      	str	r5, [r4, #8]
 80024aa:	f2c0 8095 	blt.w	80025d8 <_printf_i+0x20c>
 80024ae:	6821      	ldr	r1, [r4, #0]
 80024b0:	f021 0104 	bic.w	r1, r1, #4
 80024b4:	6021      	str	r1, [r4, #0]
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d13d      	bne.n	8002536 <_printf_i+0x16a>
 80024ba:	2d00      	cmp	r5, #0
 80024bc:	f040 808e 	bne.w	80025dc <_printf_i+0x210>
 80024c0:	4665      	mov	r5, ip
 80024c2:	2a08      	cmp	r2, #8
 80024c4:	d10b      	bne.n	80024de <_printf_i+0x112>
 80024c6:	6823      	ldr	r3, [r4, #0]
 80024c8:	07db      	lsls	r3, r3, #31
 80024ca:	d508      	bpl.n	80024de <_printf_i+0x112>
 80024cc:	6923      	ldr	r3, [r4, #16]
 80024ce:	6862      	ldr	r2, [r4, #4]
 80024d0:	429a      	cmp	r2, r3
 80024d2:	bfde      	ittt	le
 80024d4:	2330      	movle	r3, #48	; 0x30
 80024d6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80024da:	f105 35ff 	addle.w	r5, r5, #4294967295
 80024de:	ebac 0305 	sub.w	r3, ip, r5
 80024e2:	6123      	str	r3, [r4, #16]
 80024e4:	f8cd 8000 	str.w	r8, [sp]
 80024e8:	463b      	mov	r3, r7
 80024ea:	aa03      	add	r2, sp, #12
 80024ec:	4621      	mov	r1, r4
 80024ee:	4630      	mov	r0, r6
 80024f0:	f7ff fef6 	bl	80022e0 <_printf_common>
 80024f4:	3001      	adds	r0, #1
 80024f6:	d14d      	bne.n	8002594 <_printf_i+0x1c8>
 80024f8:	f04f 30ff 	mov.w	r0, #4294967295
 80024fc:	b005      	add	sp, #20
 80024fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002502:	4839      	ldr	r0, [pc, #228]	; (80025e8 <_printf_i+0x21c>)
 8002504:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8002508:	6813      	ldr	r3, [r2, #0]
 800250a:	6821      	ldr	r1, [r4, #0]
 800250c:	1d1d      	adds	r5, r3, #4
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	6015      	str	r5, [r2, #0]
 8002512:	060a      	lsls	r2, r1, #24
 8002514:	d50b      	bpl.n	800252e <_printf_i+0x162>
 8002516:	07ca      	lsls	r2, r1, #31
 8002518:	bf44      	itt	mi
 800251a:	f041 0120 	orrmi.w	r1, r1, #32
 800251e:	6021      	strmi	r1, [r4, #0]
 8002520:	b91b      	cbnz	r3, 800252a <_printf_i+0x15e>
 8002522:	6822      	ldr	r2, [r4, #0]
 8002524:	f022 0220 	bic.w	r2, r2, #32
 8002528:	6022      	str	r2, [r4, #0]
 800252a:	2210      	movs	r2, #16
 800252c:	e7b7      	b.n	800249e <_printf_i+0xd2>
 800252e:	064d      	lsls	r5, r1, #25
 8002530:	bf48      	it	mi
 8002532:	b29b      	uxthmi	r3, r3
 8002534:	e7ef      	b.n	8002516 <_printf_i+0x14a>
 8002536:	4665      	mov	r5, ip
 8002538:	fbb3 f1f2 	udiv	r1, r3, r2
 800253c:	fb02 3311 	mls	r3, r2, r1, r3
 8002540:	5cc3      	ldrb	r3, [r0, r3]
 8002542:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8002546:	460b      	mov	r3, r1
 8002548:	2900      	cmp	r1, #0
 800254a:	d1f5      	bne.n	8002538 <_printf_i+0x16c>
 800254c:	e7b9      	b.n	80024c2 <_printf_i+0xf6>
 800254e:	6813      	ldr	r3, [r2, #0]
 8002550:	6825      	ldr	r5, [r4, #0]
 8002552:	1d18      	adds	r0, r3, #4
 8002554:	6961      	ldr	r1, [r4, #20]
 8002556:	6010      	str	r0, [r2, #0]
 8002558:	0628      	lsls	r0, r5, #24
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	d501      	bpl.n	8002562 <_printf_i+0x196>
 800255e:	6019      	str	r1, [r3, #0]
 8002560:	e002      	b.n	8002568 <_printf_i+0x19c>
 8002562:	066a      	lsls	r2, r5, #25
 8002564:	d5fb      	bpl.n	800255e <_printf_i+0x192>
 8002566:	8019      	strh	r1, [r3, #0]
 8002568:	2300      	movs	r3, #0
 800256a:	4665      	mov	r5, ip
 800256c:	6123      	str	r3, [r4, #16]
 800256e:	e7b9      	b.n	80024e4 <_printf_i+0x118>
 8002570:	6813      	ldr	r3, [r2, #0]
 8002572:	1d19      	adds	r1, r3, #4
 8002574:	6011      	str	r1, [r2, #0]
 8002576:	681d      	ldr	r5, [r3, #0]
 8002578:	6862      	ldr	r2, [r4, #4]
 800257a:	2100      	movs	r1, #0
 800257c:	4628      	mov	r0, r5
 800257e:	f000 f837 	bl	80025f0 <memchr>
 8002582:	b108      	cbz	r0, 8002588 <_printf_i+0x1bc>
 8002584:	1b40      	subs	r0, r0, r5
 8002586:	6060      	str	r0, [r4, #4]
 8002588:	6863      	ldr	r3, [r4, #4]
 800258a:	6123      	str	r3, [r4, #16]
 800258c:	2300      	movs	r3, #0
 800258e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002592:	e7a7      	b.n	80024e4 <_printf_i+0x118>
 8002594:	6923      	ldr	r3, [r4, #16]
 8002596:	462a      	mov	r2, r5
 8002598:	4639      	mov	r1, r7
 800259a:	4630      	mov	r0, r6
 800259c:	47c0      	blx	r8
 800259e:	3001      	adds	r0, #1
 80025a0:	d0aa      	beq.n	80024f8 <_printf_i+0x12c>
 80025a2:	6823      	ldr	r3, [r4, #0]
 80025a4:	079b      	lsls	r3, r3, #30
 80025a6:	d413      	bmi.n	80025d0 <_printf_i+0x204>
 80025a8:	68e0      	ldr	r0, [r4, #12]
 80025aa:	9b03      	ldr	r3, [sp, #12]
 80025ac:	4298      	cmp	r0, r3
 80025ae:	bfb8      	it	lt
 80025b0:	4618      	movlt	r0, r3
 80025b2:	e7a3      	b.n	80024fc <_printf_i+0x130>
 80025b4:	2301      	movs	r3, #1
 80025b6:	464a      	mov	r2, r9
 80025b8:	4639      	mov	r1, r7
 80025ba:	4630      	mov	r0, r6
 80025bc:	47c0      	blx	r8
 80025be:	3001      	adds	r0, #1
 80025c0:	d09a      	beq.n	80024f8 <_printf_i+0x12c>
 80025c2:	3501      	adds	r5, #1
 80025c4:	68e3      	ldr	r3, [r4, #12]
 80025c6:	9a03      	ldr	r2, [sp, #12]
 80025c8:	1a9b      	subs	r3, r3, r2
 80025ca:	42ab      	cmp	r3, r5
 80025cc:	dcf2      	bgt.n	80025b4 <_printf_i+0x1e8>
 80025ce:	e7eb      	b.n	80025a8 <_printf_i+0x1dc>
 80025d0:	2500      	movs	r5, #0
 80025d2:	f104 0919 	add.w	r9, r4, #25
 80025d6:	e7f5      	b.n	80025c4 <_printf_i+0x1f8>
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d1ac      	bne.n	8002536 <_printf_i+0x16a>
 80025dc:	7803      	ldrb	r3, [r0, #0]
 80025de:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80025e2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80025e6:	e76c      	b.n	80024c2 <_printf_i+0xf6>
 80025e8:	080028c9 	.word	0x080028c9
 80025ec:	080028da 	.word	0x080028da

080025f0 <memchr>:
 80025f0:	b510      	push	{r4, lr}
 80025f2:	b2c9      	uxtb	r1, r1
 80025f4:	4402      	add	r2, r0
 80025f6:	4290      	cmp	r0, r2
 80025f8:	4603      	mov	r3, r0
 80025fa:	d101      	bne.n	8002600 <memchr+0x10>
 80025fc:	2300      	movs	r3, #0
 80025fe:	e003      	b.n	8002608 <memchr+0x18>
 8002600:	781c      	ldrb	r4, [r3, #0]
 8002602:	3001      	adds	r0, #1
 8002604:	428c      	cmp	r4, r1
 8002606:	d1f6      	bne.n	80025f6 <memchr+0x6>
 8002608:	4618      	mov	r0, r3
 800260a:	bd10      	pop	{r4, pc}

0800260c <memcpy>:
 800260c:	b510      	push	{r4, lr}
 800260e:	1e43      	subs	r3, r0, #1
 8002610:	440a      	add	r2, r1
 8002612:	4291      	cmp	r1, r2
 8002614:	d100      	bne.n	8002618 <memcpy+0xc>
 8002616:	bd10      	pop	{r4, pc}
 8002618:	f811 4b01 	ldrb.w	r4, [r1], #1
 800261c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002620:	e7f7      	b.n	8002612 <memcpy+0x6>

08002622 <memmove>:
 8002622:	4288      	cmp	r0, r1
 8002624:	b510      	push	{r4, lr}
 8002626:	eb01 0302 	add.w	r3, r1, r2
 800262a:	d807      	bhi.n	800263c <memmove+0x1a>
 800262c:	1e42      	subs	r2, r0, #1
 800262e:	4299      	cmp	r1, r3
 8002630:	d00a      	beq.n	8002648 <memmove+0x26>
 8002632:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002636:	f802 4f01 	strb.w	r4, [r2, #1]!
 800263a:	e7f8      	b.n	800262e <memmove+0xc>
 800263c:	4283      	cmp	r3, r0
 800263e:	d9f5      	bls.n	800262c <memmove+0xa>
 8002640:	1881      	adds	r1, r0, r2
 8002642:	1ad2      	subs	r2, r2, r3
 8002644:	42d3      	cmn	r3, r2
 8002646:	d100      	bne.n	800264a <memmove+0x28>
 8002648:	bd10      	pop	{r4, pc}
 800264a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800264e:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8002652:	e7f7      	b.n	8002644 <memmove+0x22>

08002654 <_free_r>:
 8002654:	b538      	push	{r3, r4, r5, lr}
 8002656:	4605      	mov	r5, r0
 8002658:	2900      	cmp	r1, #0
 800265a:	d043      	beq.n	80026e4 <_free_r+0x90>
 800265c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002660:	1f0c      	subs	r4, r1, #4
 8002662:	2b00      	cmp	r3, #0
 8002664:	bfb8      	it	lt
 8002666:	18e4      	addlt	r4, r4, r3
 8002668:	f000 f8d0 	bl	800280c <__malloc_lock>
 800266c:	4a1e      	ldr	r2, [pc, #120]	; (80026e8 <_free_r+0x94>)
 800266e:	6813      	ldr	r3, [r2, #0]
 8002670:	4610      	mov	r0, r2
 8002672:	b933      	cbnz	r3, 8002682 <_free_r+0x2e>
 8002674:	6063      	str	r3, [r4, #4]
 8002676:	6014      	str	r4, [r2, #0]
 8002678:	4628      	mov	r0, r5
 800267a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800267e:	f000 b8c6 	b.w	800280e <__malloc_unlock>
 8002682:	42a3      	cmp	r3, r4
 8002684:	d90b      	bls.n	800269e <_free_r+0x4a>
 8002686:	6821      	ldr	r1, [r4, #0]
 8002688:	1862      	adds	r2, r4, r1
 800268a:	4293      	cmp	r3, r2
 800268c:	bf01      	itttt	eq
 800268e:	681a      	ldreq	r2, [r3, #0]
 8002690:	685b      	ldreq	r3, [r3, #4]
 8002692:	1852      	addeq	r2, r2, r1
 8002694:	6022      	streq	r2, [r4, #0]
 8002696:	6063      	str	r3, [r4, #4]
 8002698:	6004      	str	r4, [r0, #0]
 800269a:	e7ed      	b.n	8002678 <_free_r+0x24>
 800269c:	4613      	mov	r3, r2
 800269e:	685a      	ldr	r2, [r3, #4]
 80026a0:	b10a      	cbz	r2, 80026a6 <_free_r+0x52>
 80026a2:	42a2      	cmp	r2, r4
 80026a4:	d9fa      	bls.n	800269c <_free_r+0x48>
 80026a6:	6819      	ldr	r1, [r3, #0]
 80026a8:	1858      	adds	r0, r3, r1
 80026aa:	42a0      	cmp	r0, r4
 80026ac:	d10b      	bne.n	80026c6 <_free_r+0x72>
 80026ae:	6820      	ldr	r0, [r4, #0]
 80026b0:	4401      	add	r1, r0
 80026b2:	1858      	adds	r0, r3, r1
 80026b4:	4282      	cmp	r2, r0
 80026b6:	6019      	str	r1, [r3, #0]
 80026b8:	d1de      	bne.n	8002678 <_free_r+0x24>
 80026ba:	6810      	ldr	r0, [r2, #0]
 80026bc:	6852      	ldr	r2, [r2, #4]
 80026be:	4401      	add	r1, r0
 80026c0:	6019      	str	r1, [r3, #0]
 80026c2:	605a      	str	r2, [r3, #4]
 80026c4:	e7d8      	b.n	8002678 <_free_r+0x24>
 80026c6:	d902      	bls.n	80026ce <_free_r+0x7a>
 80026c8:	230c      	movs	r3, #12
 80026ca:	602b      	str	r3, [r5, #0]
 80026cc:	e7d4      	b.n	8002678 <_free_r+0x24>
 80026ce:	6820      	ldr	r0, [r4, #0]
 80026d0:	1821      	adds	r1, r4, r0
 80026d2:	428a      	cmp	r2, r1
 80026d4:	bf01      	itttt	eq
 80026d6:	6811      	ldreq	r1, [r2, #0]
 80026d8:	6852      	ldreq	r2, [r2, #4]
 80026da:	1809      	addeq	r1, r1, r0
 80026dc:	6021      	streq	r1, [r4, #0]
 80026de:	6062      	str	r2, [r4, #4]
 80026e0:	605c      	str	r4, [r3, #4]
 80026e2:	e7c9      	b.n	8002678 <_free_r+0x24>
 80026e4:	bd38      	pop	{r3, r4, r5, pc}
 80026e6:	bf00      	nop
 80026e8:	20000090 	.word	0x20000090

080026ec <_malloc_r>:
 80026ec:	b570      	push	{r4, r5, r6, lr}
 80026ee:	1ccd      	adds	r5, r1, #3
 80026f0:	f025 0503 	bic.w	r5, r5, #3
 80026f4:	3508      	adds	r5, #8
 80026f6:	2d0c      	cmp	r5, #12
 80026f8:	bf38      	it	cc
 80026fa:	250c      	movcc	r5, #12
 80026fc:	2d00      	cmp	r5, #0
 80026fe:	4606      	mov	r6, r0
 8002700:	db01      	blt.n	8002706 <_malloc_r+0x1a>
 8002702:	42a9      	cmp	r1, r5
 8002704:	d903      	bls.n	800270e <_malloc_r+0x22>
 8002706:	230c      	movs	r3, #12
 8002708:	6033      	str	r3, [r6, #0]
 800270a:	2000      	movs	r0, #0
 800270c:	bd70      	pop	{r4, r5, r6, pc}
 800270e:	f000 f87d 	bl	800280c <__malloc_lock>
 8002712:	4a21      	ldr	r2, [pc, #132]	; (8002798 <_malloc_r+0xac>)
 8002714:	6814      	ldr	r4, [r2, #0]
 8002716:	4621      	mov	r1, r4
 8002718:	b991      	cbnz	r1, 8002740 <_malloc_r+0x54>
 800271a:	4c20      	ldr	r4, [pc, #128]	; (800279c <_malloc_r+0xb0>)
 800271c:	6823      	ldr	r3, [r4, #0]
 800271e:	b91b      	cbnz	r3, 8002728 <_malloc_r+0x3c>
 8002720:	4630      	mov	r0, r6
 8002722:	f000 f863 	bl	80027ec <_sbrk_r>
 8002726:	6020      	str	r0, [r4, #0]
 8002728:	4629      	mov	r1, r5
 800272a:	4630      	mov	r0, r6
 800272c:	f000 f85e 	bl	80027ec <_sbrk_r>
 8002730:	1c43      	adds	r3, r0, #1
 8002732:	d124      	bne.n	800277e <_malloc_r+0x92>
 8002734:	230c      	movs	r3, #12
 8002736:	4630      	mov	r0, r6
 8002738:	6033      	str	r3, [r6, #0]
 800273a:	f000 f868 	bl	800280e <__malloc_unlock>
 800273e:	e7e4      	b.n	800270a <_malloc_r+0x1e>
 8002740:	680b      	ldr	r3, [r1, #0]
 8002742:	1b5b      	subs	r3, r3, r5
 8002744:	d418      	bmi.n	8002778 <_malloc_r+0x8c>
 8002746:	2b0b      	cmp	r3, #11
 8002748:	d90f      	bls.n	800276a <_malloc_r+0x7e>
 800274a:	600b      	str	r3, [r1, #0]
 800274c:	18cc      	adds	r4, r1, r3
 800274e:	50cd      	str	r5, [r1, r3]
 8002750:	4630      	mov	r0, r6
 8002752:	f000 f85c 	bl	800280e <__malloc_unlock>
 8002756:	f104 000b 	add.w	r0, r4, #11
 800275a:	1d23      	adds	r3, r4, #4
 800275c:	f020 0007 	bic.w	r0, r0, #7
 8002760:	1ac3      	subs	r3, r0, r3
 8002762:	d0d3      	beq.n	800270c <_malloc_r+0x20>
 8002764:	425a      	negs	r2, r3
 8002766:	50e2      	str	r2, [r4, r3]
 8002768:	e7d0      	b.n	800270c <_malloc_r+0x20>
 800276a:	684b      	ldr	r3, [r1, #4]
 800276c:	428c      	cmp	r4, r1
 800276e:	bf16      	itet	ne
 8002770:	6063      	strne	r3, [r4, #4]
 8002772:	6013      	streq	r3, [r2, #0]
 8002774:	460c      	movne	r4, r1
 8002776:	e7eb      	b.n	8002750 <_malloc_r+0x64>
 8002778:	460c      	mov	r4, r1
 800277a:	6849      	ldr	r1, [r1, #4]
 800277c:	e7cc      	b.n	8002718 <_malloc_r+0x2c>
 800277e:	1cc4      	adds	r4, r0, #3
 8002780:	f024 0403 	bic.w	r4, r4, #3
 8002784:	42a0      	cmp	r0, r4
 8002786:	d005      	beq.n	8002794 <_malloc_r+0xa8>
 8002788:	1a21      	subs	r1, r4, r0
 800278a:	4630      	mov	r0, r6
 800278c:	f000 f82e 	bl	80027ec <_sbrk_r>
 8002790:	3001      	adds	r0, #1
 8002792:	d0cf      	beq.n	8002734 <_malloc_r+0x48>
 8002794:	6025      	str	r5, [r4, #0]
 8002796:	e7db      	b.n	8002750 <_malloc_r+0x64>
 8002798:	20000090 	.word	0x20000090
 800279c:	20000094 	.word	0x20000094

080027a0 <_realloc_r>:
 80027a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027a2:	4607      	mov	r7, r0
 80027a4:	4614      	mov	r4, r2
 80027a6:	460e      	mov	r6, r1
 80027a8:	b921      	cbnz	r1, 80027b4 <_realloc_r+0x14>
 80027aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80027ae:	4611      	mov	r1, r2
 80027b0:	f7ff bf9c 	b.w	80026ec <_malloc_r>
 80027b4:	b922      	cbnz	r2, 80027c0 <_realloc_r+0x20>
 80027b6:	f7ff ff4d 	bl	8002654 <_free_r>
 80027ba:	4625      	mov	r5, r4
 80027bc:	4628      	mov	r0, r5
 80027be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80027c0:	f000 f826 	bl	8002810 <_malloc_usable_size_r>
 80027c4:	42a0      	cmp	r0, r4
 80027c6:	d20f      	bcs.n	80027e8 <_realloc_r+0x48>
 80027c8:	4621      	mov	r1, r4
 80027ca:	4638      	mov	r0, r7
 80027cc:	f7ff ff8e 	bl	80026ec <_malloc_r>
 80027d0:	4605      	mov	r5, r0
 80027d2:	2800      	cmp	r0, #0
 80027d4:	d0f2      	beq.n	80027bc <_realloc_r+0x1c>
 80027d6:	4631      	mov	r1, r6
 80027d8:	4622      	mov	r2, r4
 80027da:	f7ff ff17 	bl	800260c <memcpy>
 80027de:	4631      	mov	r1, r6
 80027e0:	4638      	mov	r0, r7
 80027e2:	f7ff ff37 	bl	8002654 <_free_r>
 80027e6:	e7e9      	b.n	80027bc <_realloc_r+0x1c>
 80027e8:	4635      	mov	r5, r6
 80027ea:	e7e7      	b.n	80027bc <_realloc_r+0x1c>

080027ec <_sbrk_r>:
 80027ec:	b538      	push	{r3, r4, r5, lr}
 80027ee:	2300      	movs	r3, #0
 80027f0:	4c05      	ldr	r4, [pc, #20]	; (8002808 <_sbrk_r+0x1c>)
 80027f2:	4605      	mov	r5, r0
 80027f4:	4608      	mov	r0, r1
 80027f6:	6023      	str	r3, [r4, #0]
 80027f8:	f7fe f968 	bl	8000acc <_sbrk>
 80027fc:	1c43      	adds	r3, r0, #1
 80027fe:	d102      	bne.n	8002806 <_sbrk_r+0x1a>
 8002800:	6823      	ldr	r3, [r4, #0]
 8002802:	b103      	cbz	r3, 8002806 <_sbrk_r+0x1a>
 8002804:	602b      	str	r3, [r5, #0]
 8002806:	bd38      	pop	{r3, r4, r5, pc}
 8002808:	200002b0 	.word	0x200002b0

0800280c <__malloc_lock>:
 800280c:	4770      	bx	lr

0800280e <__malloc_unlock>:
 800280e:	4770      	bx	lr

08002810 <_malloc_usable_size_r>:
 8002810:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002814:	1f18      	subs	r0, r3, #4
 8002816:	2b00      	cmp	r3, #0
 8002818:	bfbc      	itt	lt
 800281a:	580b      	ldrlt	r3, [r1, r0]
 800281c:	18c0      	addlt	r0, r0, r3
 800281e:	4770      	bx	lr

08002820 <_init>:
 8002820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002822:	bf00      	nop
 8002824:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002826:	bc08      	pop	{r3}
 8002828:	469e      	mov	lr, r3
 800282a:	4770      	bx	lr

0800282c <_fini>:
 800282c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800282e:	bf00      	nop
 8002830:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002832:	bc08      	pop	{r3}
 8002834:	469e      	mov	lr, r3
 8002836:	4770      	bx	lr
